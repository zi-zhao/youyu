{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createVNode as _createVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/VerifiedUser.svg';\nimport _imports_1 from '@/assets/QACenter/UploadPic.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-75a3fc3b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"bgc_box\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"top\"\n};\nconst _hoisted_3 = {\n  class: \"one\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"向\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  }\n};\nconst _hoisted_6 = {\n  class: \"text1\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  src: _imports_0,\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\",\n    \"margin\": \"0 10px 0 -9px\"\n  },\n  alt: \"\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"提问\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  key: 1,\n  class: \"top\"\n};\nconst _hoisted_10 = {\n  class: \"one\"\n};\nconst _hoisted_11 = {\n  class: \"text1\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"的提问\", -1 /* HOISTED */));\nconst _hoisted_13 = {\n  class: \"main_box\",\n  ref: \"mainBoxRef\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"time\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"left_box\"\n};\nconst _hoisted_16 = {\n  class: \"leftchat\"\n};\nconst _hoisted_17 = [\"src\"];\nconst _hoisted_18 = {\n  key: 0,\n  class: \"conversation_L\"\n};\nconst _hoisted_19 = {\n  key: 1\n};\nconst _hoisted_20 = [\"src\", \"onClick\"];\nconst _hoisted_21 = {\n  key: 2,\n  class: \"right_box\"\n};\nconst _hoisted_22 = {\n  class: \"rightchat\"\n};\nconst _hoisted_23 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  }\n};\nconst _hoisted_24 = {\n  key: 0,\n  class: \"send-state\"\n};\nconst _hoisted_25 = {\n  key: 1,\n  class: \"send-state\"\n};\nconst _hoisted_26 = {\n  key: 2,\n  class: \"conversation_R\"\n};\nconst _hoisted_27 = {\n  key: 3\n};\nconst _hoisted_28 = [\"src\", \"onClick\"];\nconst _hoisted_29 = [\"src\"];\nconst _hoisted_30 = {\n  class: \"bottom\"\n};\nconst _hoisted_31 = {\n  key: 0,\n  class: \"inputbox\"\n};\nconst _hoisted_32 = {\n  key: 1,\n  class: \"inputbox\"\n};\nconst _hoisted_33 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_easy_lightbox = _resolveComponent(\"vue-easy-lightbox\");\n  const _component_el_result = _resolveComponent(\"el-result\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 提问者聊天框   向**的提问+价值 \"), $setup.route.path.includes('/ask/') ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString($setup.receiveUsername), 1 /* TEXT */), $setup.answererInfo.verified === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_7)) : _createCommentVNode(\"v-if\", true)]), _hoisted_8]), _createCommentVNode(\" <div class=\\\"timer\\\">\\r\\n                此提问将在{{finishTime}}后结束\\r\\n            </div> \"), _createElementVNode(\"div\", {\n    class: \"btn\",\n    onClick: $setup.openrefuse\n  }, \" 结束 \")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 答主聊天框   **的提问+价值 \"), $setup.route.path.includes('/answer/') ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", _hoisted_11, _toDisplayString($setup.receiveUsername), 1 /* TEXT */), _hoisted_12]), _createCommentVNode(\" <div class=\\\"timer\\\">\\r\\n                此提问将在{{finishTime}}后结束\\r\\n            </div> \")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 对话列表  \"), _createElementVNode(\"div\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sendMessagesList, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.time\n    }, [$setup.shouldDisplayTime(index) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _toDisplayString(message.time), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), message.user === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"img\", {\n      src: $setup.answererInfo.newAvater,\n      alt: \"\",\n      class: \"userpic\"\n    }, null, 8 /* PROPS */, _hoisted_17), message.messageType === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"span\", null, _toDisplayString(message.content), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), message.messageType === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createElementVNode(\"img\", {\n      src: message.imageurl,\n      onClick: $event => message.visibleRef = true,\n      alt: \"\",\n      class: \"sendpic\"\n    }, null, 8 /* PROPS */, _hoisted_20), _createVNode(_component_vue_easy_lightbox, {\n      visible: message.visibleRef,\n      imgs: message.imageurl,\n      index: index,\n      onHide: $event => $setup.onHide(message)\n    }, null, 8 /* PROPS */, [\"visible\", \"imgs\", \"index\", \"onHide\"])])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true), message.user === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [$setup.isLoading(message.status) ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_24, null, 512 /* NEED_PATCH */)), [[_directive_loading, true]]) : _createCommentVNode(\"v-if\", true), $setup.isLoading2(message.status) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_createVNode(_component_el_result, {\n      icon: \"error\"\n    })])) : _createCommentVNode(\"v-if\", true), message.messageType === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_createElementVNode(\"span\", null, _toDisplayString(message.content), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), message.messageType === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [_createElementVNode(\"img\", {\n      src: message.imageurl,\n      onClick: $event => message.visibleRef = true,\n      alt: \"\",\n      class: \"sendpic\"\n    }, null, 8 /* PROPS */, _hoisted_28), _createVNode(_component_vue_easy_lightbox, {\n      visible: message.visibleRef,\n      imgs: message.imageurl,\n      index: index,\n      onHide: $event => $setup.onHide(message)\n    }, null, 8 /* PROPS */, [\"visible\", \"imgs\", \"index\", \"onHide\"])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"img\", {\n      src: $setup.userAvater,\n      alt: \"\",\n      class: \"userpic\"\n    }, null, 8 /* PROPS */, _hoisted_29)])])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_30, [$setup.route.path.includes('/ask/') ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [_createCommentVNode(\" <input type=\\\"text\\\" v-model=\\\"inputValue\\\"   :placeholder=\\\"'您还能发送' + number + '追问'\\\"> \"), _createVNode(_component_el_input, {\n    modelValue: $setup.inputValue,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputValue = $event),\n    autosize: {\n      minRows: 1,\n      maxRows: 5\n    },\n    type: \"textarea\",\n    maxlength: \"200\",\n    \"show-word-limit\": \"true\",\n    resize: \"none\",\n    placeholder: '您还能发送' + $setup.number + '追问',\n    class: \"livechat-input\"\n  }, null, 8 /* PROPS */, [\"modelValue\", \"placeholder\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [_createVNode(_component_el_input, {\n    modelValue: $setup.inputValue,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.inputValue = $event),\n    autosize: {\n      minRows: 1,\n      maxRows: 5\n    },\n    type: \"textarea\",\n    maxlength: \"200\",\n    \"show-word-limit\": \"true\",\n    resize: \"none\",\n    class: \"livechat-input\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])])), _createElementVNode(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"imageInput\",\n    style: {\n      \"display\": \"none\"\n    },\n    onChange: $setup.handleImage\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"img\", {\n    onClick: $setup.triggerImageUpload,\n    src: _imports_1,\n    style: {\n      \"width\": \"28px\",\n      \"height\": \"28px\",\n      \"cursor\": \"pointer\"\n    },\n    alt: \"\"\n  }), _createCommentVNode(\" 将上传的输入框隐藏 \")]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"send_btn\", {\n      'disabled': $setup.number === 'a'\n    }]),\n    onClick: $setup.sendWordMessages\n  }, \"发送\", 2 /* CLASS */)])]), $setup.dialogFormVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [_createVNode($setup[\"EvaluateDialog\"], {\n    modelValue: $setup.dialogFormVisible,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.dialogFormVisible = $event),\n    \"QuestionId:\": \"\",\n    questionId: \"\",\n    \"Number:number.value\": \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","class","_createElementVNode","style","src","alt","ref","_hoisted_1","_createCommentVNode","$setup","route","path","includes","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","receiveUsername","answererInfo","verified","_hoisted_7","_hoisted_8","onClick","openrefuse","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_Fragment","_renderList","sendMessagesList","message","index","key","time","shouldDisplayTime","_hoisted_14","user","_hoisted_15","_hoisted_16","newAvater","messageType","_hoisted_18","content","_hoisted_19","imageurl","$event","visibleRef","_createVNode","_component_vue_easy_lightbox","visible","imgs","onHide","_hoisted_21","_hoisted_22","_hoisted_23","isLoading","status","_hoisted_24","isLoading2","_hoisted_25","_component_el_result","icon","_hoisted_26","_hoisted_27","userAvater","_hoisted_30","_hoisted_31","_component_el_input","inputValue","autosize","minRows","maxRows","type","maxlength","resize","placeholder","number","_hoisted_32","onChange","handleImage","triggerImageUpload","_normalizeClass","sendWordMessages","dialogFormVisible","_hoisted_33","questionId"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\QACenter\\components\\OngoingConversation\\LiveChat.vue"],"sourcesContent":["<template>\r\n    <div class=\"bgc_box\">\r\n        <!-- 提问者聊天框   向**的提问+价值 -->\r\n        <div v-if=\"route.path.includes('/ask/')\" class=\"top\">\r\n            <div class=\"one\">\r\n                <span>向</span>\r\n                <div style=\"display: flex;align-items: center;\">\r\n                    <span class=\"text1\">{{ receiveUsername }}</span>\r\n                    <img v-if=\"answererInfo.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin: 0 10px 0 -9px;\" alt=\"\">\r\n                </div>\r\n                <span>提问</span>\r\n            </div>\r\n            <!-- <div class=\"timer\">\r\n                此提问将在{{finishTime}}后结束\r\n            </div> -->\r\n            <div  class=\"btn\" @click=\"openrefuse\">\r\n                结束\r\n            </div>\r\n        </div>\r\n         <!-- 答主聊天框   **的提问+价值 -->\r\n        <div v-if=\"route.path.includes('/answer/')\" class=\"top\">\r\n            <div class=\"one\">\r\n                <span class=\"text1\">{{ receiveUsername }}</span>\r\n                <span>的提问</span>\r\n            </div>\r\n            <!-- <div class=\"timer\">\r\n                此提问将在{{finishTime}}后结束\r\n            </div> -->\r\n        </div>\r\n        <!-- 对话列表  -->\r\n        <div class=\"main_box\" ref=\"mainBoxRef\">\r\n            <div  v-for=\"(message, index) in sendMessagesList\" :key=\"message.time\">\r\n                <div v-if=\"shouldDisplayTime(index)\" class=\"time\">\r\n                    {{ message.time }}\r\n                </div>\r\n                <div class=\"left_box\" v-if=\"message.user === 1\">\r\n                    <div class=\"leftchat\">\r\n                        <img :src=\"answererInfo.newAvater\" alt=\"\" class=\"userpic\">\r\n                        <div v-if=\"message.messageType === 1\" class=\"conversation_L\">\r\n                            <span >{{ message.content }}</span>\r\n                        </div>\r\n                        <div v-if=\"message.messageType === 0\">\r\n                            <img :src=\"message.imageurl\" @click=\"message.visibleRef = true\" alt=\"\" class=\"sendpic\">\r\n                            <vue-easy-lightbox\r\n                                :visible=\"message.visibleRef\"\r\n                                :imgs=\"message.imageurl\"\r\n                                :index=\"index\"\r\n                                @hide=\"onHide(message)\"\r\n                            ></vue-easy-lightbox>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"right_box\" v-if=\"message.user === 0\">\r\n                    <div class=\"rightchat\">\r\n                        <div style=\"display: flex;align-items: center;\">\r\n                            <div v-if=\"isLoading(message.status)\" v-loading=\"true\" class=\"send-state\"></div>\r\n                            <div v-if=\"isLoading2(message.status)\" class=\"send-state\">\r\n                                <el-result\r\n                                    icon=\"error\"\r\n                                ></el-result>\r\n                            </div> \r\n                            <div v-if=\"message.messageType === 1\" class=\"conversation_R\">\r\n                                <span >{{ message.content }}</span>\r\n                            </div>\r\n                            <div v-if=\"message.messageType === 0\">\r\n                                <img :src=\"message.imageurl\" @click=\"message.visibleRef = true\" alt=\"\" class=\"sendpic\">\r\n                                <vue-easy-lightbox\r\n                                    :visible=\"message.visibleRef\"\r\n                                    :imgs=\"message.imageurl\"\r\n                                    :index=\"index\"\r\n                                    @hide=\"onHide(message)\"\r\n                                ></vue-easy-lightbox>\r\n                            </div>\r\n                        </div>\r\n                        <img :src=\"userAvater\" alt=\"\" class=\"userpic\">\r\n                    </div>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n        <div class=\"bottom\">\r\n            <div v-if=\"route.path.includes('/ask/')\" class=\"inputbox\">\r\n                <!-- <input type=\"text\" v-model=\"inputValue\"   :placeholder=\"'您还能发送' + number + '追问'\"> -->\r\n                <el-input\r\n                    v-model=\"inputValue\"\r\n                    :autosize=\"{ minRows: 1, maxRows: 5 }\"\r\n                    type=\"textarea\"\r\n                    maxlength=\"200\"\r\n                    show-word-limit=\"true\"\r\n                    resize=\"none\"\r\n                    :placeholder=\"'您还能发送' + number + '追问'\"\r\n                    class=\"livechat-input\"\r\n                />\r\n            </div>\r\n            <div v-else class=\"inputbox\">\r\n                <el-input\r\n                    v-model=\"inputValue\"\r\n                    :autosize=\"{ minRows: 1, maxRows: 5 }\"\r\n                    type=\"textarea\"\r\n                    maxlength=\"200\"\r\n                    show-word-limit=\"true\"\r\n                    resize=\"none\"\r\n                    class=\"livechat-input\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <input type=\"file\" ref=\"imageInput\"  style=\"display: none;\" @change=\"handleImage\"  >\r\n                <img @click=\"triggerImageUpload\" src=\"@/assets/QACenter/UploadPic.svg\" style=\"width: 28px; height: 28px; cursor: pointer;\" alt=\"\">\r\n                 <!-- 将上传的输入框隐藏 -->\r\n            </div>\r\n            <div \r\n                class=\"send_btn\" \r\n                @click=\"sendWordMessages\"\r\n                :class=\"{'disabled': number === 'a'}\"\r\n            >发送</div>\r\n        </div>\r\n    </div>\r\n    <div v-if=\"dialogFormVisible\">\r\n        <EvaluateDialog \r\n            v-model=\"dialogFormVisible\" \r\n            QuestionId: questionId\r\n            Number:number.value\r\n        ></EvaluateDialog>\r\n    </div> \r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted,watch, nextTick} from 'vue';\r\nimport { ElMessage,ElMessageBox } from 'element-plus';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from '@/utils/request';\r\nimport { useRoute,useRouter } from 'vue-router';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport EvaluateDialog from '../EvaluateDialog.vue';\r\nimport { compressImage } from '@/utils/fileService.js';\r\nimport { formatDateTime } from '@/utils/timeFormat.js';\r\nimport {getAskAndQuestionCOSPermission} from '@/utils/cosService';\r\n\r\n// 将常量或其他变量放在这里，有访问接口的URL和端口号\r\nconst ip = '154.8.172.164';\r\nconst port = '8081';\r\nconst token = localStorage.getItem('token');\r\nconst userId = localStorage.getItem(\"userId\");\r\nconst finishTime = ref('24小时');\r\nconst websock = ref(null);\r\nconst route = useRoute ();\r\nconst mainBoxRef = ref(null);//为了使sendMessagesList发生变化时（即有新消息），让聊天界面滚动到底部以显示最新消息功能，将显示聊天消息的盒子设为响应式。\r\nconst inputValue = ref('');//输入框中的响应式数据\r\nconst RouteId = parseInt(route.params.id,10);//路径中的用户ID\r\nconst questionId = parseInt(route.params.questionId,10);//路径中的问答ID\r\nconst numberData = parseInt(route.params.number,10);//路径中的追问次数\r\nconst askId = ref(null);\r\nconst answerId = ref(null);\r\nconst messageType = ref(null);// 判断此消息时一个回答还是一个提问，如果是0则表示回答，如果是1则表示提问，如果为2，则表示该消息是一个普通的聊天消息\r\nconst historyData = ref({});//存放用户历史消息记录\r\nconst dialogFormVisible = ref(false);//控制评分弹窗是否开启\r\nconst number = ref();//如果用户是提问者，记录剩余的追问次数\r\nconst answererInfo = ref({});//问答对方的信息\r\nconst userAvater = ref();//保存用户自己的头像\r\nconst sendMessagesList = ref([]);//存放所有消息数据,user:消息发送者是0，消息接受者是1,status:状态未成功为0，成功是1，待确定是2\r\nconst receiveUsername = ref('');//消息的接收方名称\r\nconst router = useRouter();\r\n//包含所有默认属性值的消息对象（按照sendMessagesList）\r\nconst defaultMsgStructure = {\r\n    uuid: '',//该消息对应的uuid\r\n    number:null,//如果是提问者发送的消息，则给提问者发送剩余的提问次数\r\n    status:null,//是否成功发送消息,未成功0，成功1\r\n    messageType: null,//判断该消息是图片还是文字，如果为图片的话为0，文字为1\r\n    user: null,//判断发送到消息接收者还是消息发送者，发送者为0，接收者为1\r\n    toUserId:'',// 消息接收者的id\r\n    fromUserId:'',//消息发送者id\r\n    time: '',//消息发送的时间\r\n    content: '',//消息内容\r\n    imageurl:'',//图片url\r\n    visibleRef:false,//图片的展示插件是否开启\r\n};\r\n\r\n//设置上传图片\r\nconst fileName = ref();\r\nconst tempFileName = ref();\r\nconst imagePreviews = ref([]);\r\nconst imageInput = ref(null);  \r\nconst selectedImages = ref([]);\r\nconst tempselectedImages = ref([]);\r\n\r\nif (route.path.includes('/ask/')) {\r\n    askId.value =  userId;\r\n    answerId.value = RouteId;\r\n    messageType.value = 1;\r\n    number.value = numberData;\r\n}\r\n\r\nif (route.path.includes('/answer/')) {\r\n    askId.value =  RouteId;\r\n    answerId.value = userId;\r\n    messageType.value = 0;\r\n    number.value = -1;\r\n}\r\n\r\nconst onHide = (message) => {\r\n    message.visibleRef = false;\r\n};\r\n\r\n//获取用户历史消息列表\r\nasync function getMessageLog() {\r\n  try{\r\n    const response = await axios.get(`/answer/message/history`,{\r\n        params: {\r\n            questionId:questionId,\r\n        }\r\n    });\r\n    if(response.data.code === 1){\r\n        const user = ref(0);\r\n        historyData.value = response.data.data;\r\n        sendMessagesList.value = historyData.value.map(item => {\r\n            if(item.fromUserId == userId) {\r\n                user.value = 0;\r\n            }else if(item.fromUserId == RouteId){\r\n                user.value = 1;\r\n            }else{\r\n                ElMessage.error('未知的参数错误');\r\n            }\r\n            // if(item.isQuestion === 1 && item.type == 0){\r\n            //     item.imageurl = getFirstAnswerPictureFromCOS(item.questionId);\r\n            //     // item.imageurl = item.content;\r\n            // }\r\n            // if(item.isFirstAnswer === 1 && item.type == 0){\r\n            //     item.imageurl = getFirstQuestionPictureFromCOS(item.questionId);\r\n            //     // item.imageurl = item.content;\r\n            // }\r\n            return {\r\n                uuid: '', \r\n                status: 1, \r\n                messageType: item.type, \r\n                user: user.value, \r\n                toUserId: item.toUserId, \r\n                fromUserId: item.fromUserId, \r\n                time: item.createTime, \r\n                content: item.content,\r\n                imageurl:   \r\n                    // (item.isQuestion === 1 && item.type == 0) ? getFirstAnswerPictureFromCOS(item.questionId) :\r\n                    // (item.isFirstAnswer === 1 && item.type == 0) ? getFirstQuestionPictureFromCOS(item.questionId) :\r\n                    (item.type == 0) ? item.cosSecretDto.url :\r\n                    null,\r\n                number:null,\r\n                visibleRef:false,\r\n            };\r\n        });\r\n        // ElMessage.success('获取用户消息记录成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户消息记录失败\");\r\n        ElMessage.error('获取用户消息记录失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户消息记录失败\", error); \r\n    ElMessage.error('获取用户消息记录失败');\r\n  }\r\n}\r\n\r\n\r\nconst isLoading = (type) => {\r\n    return type === 2;\r\n}\r\nconst isLoading2 = (type) => {\r\n    return type === 0;\r\n}\r\n\r\n\r\n//判断和上一条消息的时间是否相同\r\nconst shouldDisplayTime = (currentIndex) => {\r\n    // 如果是第一条消息，则显示时间\r\n    if (currentIndex === 0) return true;\r\n    // 检查当前消息时间是否与前一条消息时间相同\r\n    const currentMessageTime = sendMessagesList.value[currentIndex].time;\r\n    const previousMessageTime = sendMessagesList.value[currentIndex - 1].time;   \r\n    return currentMessageTime !== previousMessageTime;\r\n}\r\n\r\n\r\n\r\n//当 sendMessagesList 发生变化时，聊天窗口都会滚动到最底部，显示最新的消息。\r\nwatch(sendMessagesList, () => {\r\n  nextTick(() => {\r\n    if (mainBoxRef.value) {\r\n      mainBoxRef.value.scrollTop = mainBoxRef.value.scrollHeight;\r\n      console.log('已滚动到最底部')\r\n    }\r\n  });\r\n}, {  deep: true, immediate: true });\r\n\r\n\r\n\r\n//初始化websocket的一些必需方法，首先需创建websocket实例\r\nfunction initWebSocket() {\r\n    //判断浏览器是否支持websocket,注意，这里如果判断发现该浏览器不支持websocket，并不会终止后续代码，只是会在页面给予用户弹窗警告\r\n    if (\"WebSocket\" in window) {\r\n        websock.value = new WebSocket(`ws://${ip}:${port}/question/${token}`);\r\n    } else {\r\n        alert(\"该浏览器不支持websocket!\");\r\n    }\r\n    websock.value.onopen = webSocketOnOpen;\r\n    websock.value.onmessage = webSocketOnMessage;\r\n    websock.value.onclose = webSocketClose;\r\n    websock.value.onerror = webSocketOnError;\r\n}\r\n\r\n//这是websocket连接（握手）时调用的方法\r\nconst webSocketOnOpen = () => {\r\n    // ElMessage.success('websocket连接成功');\r\n}\r\n\r\n//这是前端接受并处理后端（服务器）返回值的方法\r\nasync function webSocketOnMessage (e) {\r\n    //将JSON格式的字符串转换（解析）为JavaScript对象,如将\"{ \\\"id\\\": 123, \\\"status\\\": \\\"error\\\" }\"换为{id: 123,status: \"error\"}\r\n    let receivedData = JSON.parse(e.data);\r\n    console.log(receivedData);\r\n    switch(receivedData.user) {\r\n        //判断：如果返回的消息的类型是判断发送的消息有没有发送成功\r\n        case 0:{\r\n            const message = sendMessagesList.value.find(item => item.uuid === receivedData.uuid);\r\n            if (message) {\r\n                if (receivedData.status === 0) {\r\n                    message.status = 0;\r\n                } else if (receivedData.status === 1) {\r\n                    message.status = 1;\r\n                    if(route.path.includes('/ask/')){\r\n                        number.value = receivedData.number;\r\n                    }\r\n                }else if(receivedData.status === 2){\r\n                    const type = await getAskAndQuestionCOSPermission(tempselectedImages.value[0],receivedData.cosSecretDto);\r\n                    sendPictureMessages(receivedData.cosSecretDto.url,2,type,receivedData.uuid);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        //判断：如果返回的消息的类型是接受的消息\r\n        case 1:{\r\n            // const newMessage = { ...defaultMsgStructure, ...receivedData, imageurl: receivedData.cosSecretDto.url };\r\n            const newMessage = {\r\n                uuid: receivedData.uuid,//该消息对应的uuid\r\n                number:receivedData.number,//如果是提问者发送的消息，则给提问者发送剩余的提问次数\r\n                status:receivedData.status,//是否成功发送消息,未成功0，成功1\r\n                messageType: receivedData.messageType,//判断该消息是图片还是文字，如果为图片的话为0，文字为1\r\n                user: receivedData.user,//判断发送到消息接收者还是消息发送者，发送者为0，接收者为1\r\n                toUserId:receivedData.toUserId,// 消息接收者的id\r\n                fromUserId:receivedData.fromUserId,//消息发送者id\r\n                time: receivedData.time,//消息发送的时间\r\n                content: receivedData.content,//消息内容\r\n                imageurl:'',//图片url\r\n                visibleRef:false,\r\n            };\r\n            if(receivedData.messageType === 0){\r\n                newMessage.imageurl = receivedData.cosSecretDto.url;\r\n            }\r\n            sendMessagesList.value.push(newMessage);\r\n            break;\r\n        }\r\n\r\n        default:\r\n            console.error('意义不明的返回消息', receivedData.type);\r\n            ElMessage.error('意义不明的返回消息');\r\n    }\r\n}\r\n\r\n//这是websocket连接时出现异常时处理的函数\r\nconst webSocketOnError = () => {\r\n    console.log('WebSocket连接失败');\r\n    ElMessage.error('WebSocket连接失败');\r\n}\r\n\r\n//这是关闭websocket连接的代码\r\nconst webSocketClose = (e) => {\r\n    console.log('已关闭连接', e);\r\n    // ElMessage.success('已关闭连接')\r\n}\r\n\r\n\r\n\r\nconst webSocketSend = (data) => {\r\n  console.log('发送数据');\r\n  websock.value.send(JSON.stringify(data));\r\n}\r\n\r\nconst sendWordMessages = ()  =>{\r\n    const now = new Date();\r\n    const uuid = ref(uuidv4());\r\n    const tempData = {\r\n        uuid:uuid.value,\r\n        // questionId:questionId,\r\n        status: 2,\r\n        user:0,\r\n        messageType:1, //判断该消息是图片还是文字，如果为图片的话为0，文字为1\r\n        toUserId:RouteId,\r\n        fromUserId:userId,\r\n        time: formatDateTime(now),\r\n        content: inputValue.value,\r\n        imageurl: null,\r\n        number:null,\r\n    }\r\n    sendMessagesList.value.push(tempData);\r\n    const tempData2 = {\r\n        uuid:uuid.value,\r\n        questionId:questionId,//对应的问题的id,如果是普通消息的话则为0\r\n        type:messageType.value,//判断此消息时一个回答还是一个提问，如果是0则表示回答，如果是1则表示提问，如果为2，则表示该消息是一个普通的聊天消息\r\n        toUserId:RouteId,\r\n        message: inputValue.value,\r\n        messageType:1,// 消息类型，0表示图片，1表示文字\r\n        isConfirm:1,\r\n        imageurl:null,\r\n        filename:null,\r\n    }\r\n    console.log(tempData2);\r\n    webSocketSend(tempData2);\r\n    inputValue.value ='';\r\n}\r\n\r\nconst sendPictureMessages = (url,num,type,tempuuid)  =>{\r\n    const now = new Date();\r\n    const uuid = ref(uuidv4());\r\n    if(num === 1){\r\n        const tempData = {\r\n            uuid:uuid.value,\r\n            // questionId:questionId,\r\n            status: 2,\r\n            user:0,\r\n            messageType:0, //判断该消息是图片还是文字，如果为图片的话为0，文字为1\r\n            toUserId:RouteId,\r\n            fromUserId:userId,\r\n            time: formatDateTime(now),\r\n            content: null,\r\n            imageurl: imagePreviews.value[0],\r\n            number:null,\r\n            visibleRef:false,\r\n        }\r\n        sendMessagesList.value.push(tempData);\r\n        const tempData2 = {\r\n            uuid:uuid.value,\r\n            questionId:questionId,//对应的问题的id,如果是普通消息的话则为0\r\n            type:messageType.value,// 判断此消息时一个回答还是一个提问，如果是0则表示回答，如果是1则表示提问，如果为2，则表示该消息是一个普通的聊天消息\r\n            toUserId:RouteId,\r\n            message:null,\r\n            messageType:0,// 消息类型，0表示图片，1表示文字\r\n            isConfirm:type,\r\n            imageurl:url,\r\n            filename:fileName.value,\r\n        }\r\n        webSocketSend(tempData2);\r\n    }else if(num === 2){\r\n        const tempData2 = {\r\n            uuid:tempuuid,\r\n            questionId:questionId,//对应的问题的id,如果是普通消息的话则为0\r\n            type:messageType.value,// 判断此消息时一个回答还是一个提问，如果是0则表示回答，如果是1则表示提问，如果为2，则表示该消息是一个普通的聊天消息\r\n            toUserId:RouteId,\r\n            message:null,\r\n            messageType:0,// 消息类型，0表示图片，1表示文字\r\n            isConfirm:type,\r\n            imageurl:url,\r\n            filename:fileName.value,\r\n        }\r\n        webSocketSend(tempData2);\r\n    }\r\n\r\n    tempselectedImages.value = selectedImages.value;\r\n    tempFileName.value = fileName.value;\r\n}\r\n\r\n\r\nconst openrefuse = async () => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要结束该回答吗？',\r\n      {\r\n        confirmButtonText: '确认结束',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }\r\n    );\r\n    endQuestion();\r\n  } catch {\r\n    console.log('关闭弹框')\r\n  }\r\n}\r\n\r\n\r\n//结束问题\r\nasync function endQuestion() {\r\n  try{\r\n    const response = await axios.put(`/answer/myask/end/${questionId}`)\r\n    if(response.data.code === 1){\r\n        ElMessage.success('结束问题成功');\r\n        router.push('/DefaultPresentation');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"结束问题失败\");\r\n        ElMessage.error('结束问题失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"结束问题失败\", error); \r\n    ElMessage.error('结束问题失败');\r\n  }\r\n}\r\n\r\n//获取答主具体信息\r\nasync function getAnswererInfo() {\r\n  try{\r\n    const response = await axios.get(`/answer/${RouteId}`)\r\n    if(response.data.code === 1){\r\n        answererInfo.value = response.data.data;\r\n        answererInfo.value.verified = await fetchUserInformation(RouteId);\r\n        answererInfo.value.newAvater = await getUsersAvatarFromCOS(answererInfo.value.userId);\r\n        userAvater.value = await getUsersAvatarFromCOS(userId);\r\n        receiveUsername.value =  answererInfo.value.username;\r\n        // ElMessage.success('获取答主具体信息成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取答主具体信息失败\");\r\n        ElMessage.error('获取答主具体信息失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取答主具体信息失败\", error); \r\n    ElMessage.error('获取答主具体信息失败');\r\n  }\r\n}\r\n\r\n\r\n// (上传图片)当点击按钮时触发文件输入框\r\nconst triggerImageUpload = () => {\r\n    if (selectedImages.value.length < 2) {\r\n        imageInput.value.click();\r\n    } else {\r\n        ElMessage.error('只能提交一张照片');\r\n    }\r\n};\r\n\r\n//(上传图片)当文件选择后处理图片\r\nconst handleImage = async (event) => {\r\n    selectedImages.value.length = 0;\r\n    imagePreviews.value.length = 0;\r\n    const file = event.target.files[0];\r\n    if (selectedImages.value.length < 2) {\r\n        try {\r\n            const timestamp = new Date().getTime(); // 获取当前时间戳\r\n            fileName.value = `${timestamp}-${file.name}`; // 在文件名前加时间戳\r\n            const compressedFile = await compressImage(file);\r\n            const reader = new FileReader();\r\n            reader.onload = function(e) {\r\n                imagePreviews.value.push(e.target.result);\r\n                selectedImages.value.push(compressedFile);\r\n                sendPictureMessages(0,1,0);//第一个0是因为此时后端不需要图片的URL，随便写的0，第二个1是因为对于某个图片信息来说这是第一次调用图片接口，第三个0是因为此时消息还未确定\r\n            };\r\n            reader.readAsDataURL(compressedFile);\r\n            \r\n        } catch (error) {\r\n            console.error(error);\r\n            ElMessage.error('保存图片失败');\r\n        }\r\n    }\r\n    \r\n};\r\n\r\n// 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\n\r\nonMounted(() => {\r\n    getAnswererInfo();\r\n    getMessageLog();\r\n    initWebSocket();\r\n});\r\n\r\nonUnmounted(() => {\r\n    if (websock.value) {\r\n        websock.value.close();\r\n    }\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.bgc_box{\r\n    width: 100%;\r\n}\r\n.top{\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding-bottom: 4px;\r\n    gap: 8px;\r\n}\r\n.one{\r\n    display: flex;\r\n}\r\n.text1{\r\n    color: #3F87E1;\r\n    margin: 0px 10px;\r\n    position: relative;\r\n}\r\n.top span{\r\n    font-size: 20px;\r\n}\r\n.timer{\r\n    color: #BCBCBC;\r\n    text-align: center;\r\n    line-height: 1.6; \r\n}\r\n.btn{\r\n    width: 32px;\r\n    height: 19px;\r\n    padding: 8px 20px;\r\n    border-radius: 16px;\r\n    background: #9FA9CA;\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 135px;\r\n    top: 15px;\r\n    cursor: pointer;\r\n}\r\n.main_box{\r\n    width: 950px;\r\n    height: 73vh;\r\n    overflow: auto;\r\n    padding: 20px 12px;\r\n    border-radius: 12px;\r\n    border: 1px solid #EEE;\r\n    background: #FAFAFA;\r\n    margin: 0px auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n.time{\r\n    color: #626B89;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    line-height: 1.6; \r\n}\r\n.left_box,\r\n.right_box{\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px; \r\n}\r\n.left_box {\r\n    justify-content: flex-start; \r\n}\r\n\r\n.right_box {\r\n    justify-content: flex-end; \r\n}\r\n.leftchat,\r\n.rightchat{\r\n    display: flex;\r\n    align-items: flex-start;\r\n}\r\n.leftchat img{\r\n    margin-right: 10px; \r\n}\r\n.rightchat img {\r\n    margin-left: 10px;\r\n}\r\n.userpic{\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n}\r\nimg.sendpic {\r\n    width: 13rem;\r\n    border-radius: 1.2rem;\r\n}\r\n.conversation_L,\r\n.conversation_R{\r\n    max-width: 530px;\r\n    padding: 12px;\r\n    margin-top: 16px;\r\n    line-height: 1.6;\r\n}\r\n.conversation_L{\r\n    background: #FFF;\r\n    border-radius: 0px 16px 16px 16px;\r\n}\r\n.conversation_R{\r\n    background: #EEF1FF;\r\n    border-radius: 16px 0px 16px 16px;\r\n}\r\n.send-state{\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: #FAFAFA;\r\n    margin: 16px 8px 0px 0px;\r\n}\r\n::v-deep .el-loading-mask{\r\n    background-color: #FAFAFA;\r\n}\r\n::v-deep .el-loading-spinner{\r\n    position: initial;\r\n    margin-top: 0px;\r\n}\r\n::v-deep .el-loading-spinner .circular{\r\n    width: 20px;\r\n    height: 20px;\r\n}\r\n::v-deep .el-loading-spinner .path{\r\n    stroke: #566183;\r\n}\r\n::v-deep .el-result{\r\n    padding: 0px;\r\n    --el-result-icon-font-size:20px;\r\n}\r\n.bottom{\r\n    display: flex;\r\n    width: 1000px;\r\n    padding: 8px 12px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 20px;\r\n    margin: 0px auto;\r\n}\r\n/* .bottom input{\r\n    width: calc(100% - 16px);\r\n    height: 19px;\r\n    padding: 8px;\r\n    border-radius: 4px;\r\n    background: #F8F8F8;\r\n    border: 1px solid #F8F8F8;\r\n} */\r\n.inputbox{\r\n    width: 83%;\r\n}\r\ninput:focus{\r\n    outline: none;\r\n    box-shadow: 0 1px 7px #dbdae5;\r\n    border: 1px solid #d7d7d7;\r\n}\r\n.send_btn{\r\n    width: 46px;\r\n    height: 16px;\r\n    padding: 8px 14px;\r\n    border-radius: 16px;\r\n    background: #9FA9CA;\r\n    font-size: 14px;\r\n    color: #fff;\r\n    text-align: center;\r\n    line-height: 14px;\r\n    cursor: pointer;\r\n}\r\n.disabled {\r\n  pointer-events: none; /* 禁止鼠标事件 */\r\n  color: grey; /* 可以更改为你想要的“不可点击”的样式 */\r\n  cursor: not-allowed; /* 更改鼠标光标样式 */\r\n}\r\n@media (max-width:768px) {\r\n    .bgc_box{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        height: 100vh;\r\n    }\r\n    .top{\r\n        margin-top: 2vh\r\n    }\r\n    .main_box{\r\n        width: 96%;\r\n        height: 78vh;\r\n        padding: 0px;\r\n    }\r\n    .bottom{\r\n        width: 96%;\r\n        padding: 0px;\r\n        justify-content: space-between;\r\n        gap: 0px;\r\n        margin: 0 auto 2vh;\r\n    }\r\n    .bottom img{\r\n        width: 1.4rem;\r\n        height: 1.4rem;\r\n    }\r\n    .inputbox{\r\n        width: 75%;\r\n    }\r\n    .btn{\r\n        right: 30px;\r\n    }\r\n    .send_btn{\r\n        width: auto;\r\n        padding: 2% 3%;\r\n    }\r\n    .text{\r\n        font-size: 1rem;\r\n    }\r\n    .timer{\r\n        font-size: 0.9rem;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}