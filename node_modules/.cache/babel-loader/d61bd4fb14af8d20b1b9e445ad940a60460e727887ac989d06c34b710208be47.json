{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = _default;\n\n// Modified from https://github.com/vuejs/vuepress/blob/master/packages/%40vuepress/markdown/lib/highlightLines.js\n// It depends on preWrapper plugin.\nfunction _default(md, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var fence = md.renderer.rules.fence;\n  var _options = options,\n    _options$leftDelimite = _options.leftDelimiter,\n    leftDelimiter = _options$leftDelimite === void 0 ? '{' : _options$leftDelimite,\n    _options$rightDelimit = _options.rightDelimiter,\n    rightDelimiter = _options$rightDelimit === void 0 ? '}' : _options$rightDelimit;\n  var RE = new RegExp(leftDelimiter + \"([\\\\d,-]+)\" + rightDelimiter);\n  md.renderer.rules.fence = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var rawCode = fence.apply(void 0, args);\n    var tokens = args[0],\n      idx = args[1];\n    var token = tokens[idx];\n    if (!token.lineNumbers) {\n      var rawInfo = token.info;\n      if (!rawInfo || !RE.test(rawInfo)) {\n        return fence.apply(void 0, args);\n      }\n      var langName = rawInfo.replace(RE, '').trim(); // ensure the next plugin get the correct lang.\n\n      token.info = langName;\n      token.lineNumbers = RE.exec(rawInfo)[1].split(',').map(function (v) {\n        return v.split('-').map(function (v) {\n          return parseInt(v, 10);\n        });\n      });\n    }\n    var code = rawCode.slice(rawCode.indexOf('<code>'), rawCode.indexOf('</code>'));\n    var highlightLinesCode = code.split('\\n').map(function (split, index) {\n      var lineNumber = index + 1;\n      var inRange = token.lineNumbers.some(function (_ref) {\n        var start = _ref[0],\n          end = _ref[1];\n        if (start && end) {\n          return lineNumber >= start && lineNumber <= end;\n        }\n        return lineNumber === start;\n      });\n      if (inRange) {\n        return '<div class=\"highlighted\">&nbsp;</div>';\n      }\n      return '<br>';\n    }).join('');\n    var highlightLinesWrapperCode = \"<div class=\\\"highlight-lines\\\">\" + highlightLinesCode + \"</div>\";\n    var finalCode = rawCode.replace('<!--beforeend-->', highlightLinesWrapperCode + \"<!--beforeend-->\");\n    return finalCode;\n  };\n}","map":{"version":3,"names":["exports","__esModule","default","_default","md","options","fence","renderer","rules","_options","_options$leftDelimite","leftDelimiter","_options$rightDelimit","rightDelimiter","RE","RegExp","_len","arguments","length","args","Array","_key","rawCode","apply","tokens","idx","token","lineNumbers","rawInfo","info","test","langName","replace","trim","exec","split","map","v","parseInt","code","slice","indexOf","highlightLinesCode","index","lineNumber","inRange","some","_ref","start","end","join","highlightLinesWrapperCode","finalCode"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/node_modules/@kangc/v-md-editor/lib/utils/markdown-it-highlight-lines.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = _default;\n\n// Modified from https://github.com/vuejs/vuepress/blob/master/packages/%40vuepress/markdown/lib/highlightLines.js\n// It depends on preWrapper plugin.\nfunction _default(md, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var fence = md.renderer.rules.fence;\n  var _options = options,\n      _options$leftDelimite = _options.leftDelimiter,\n      leftDelimiter = _options$leftDelimite === void 0 ? '{' : _options$leftDelimite,\n      _options$rightDelimit = _options.rightDelimiter,\n      rightDelimiter = _options$rightDelimit === void 0 ? '}' : _options$rightDelimit;\n  var RE = new RegExp(leftDelimiter + \"([\\\\d,-]+)\" + rightDelimiter);\n\n  md.renderer.rules.fence = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var rawCode = fence.apply(void 0, args);\n    var tokens = args[0],\n        idx = args[1];\n    var token = tokens[idx];\n\n    if (!token.lineNumbers) {\n      var rawInfo = token.info;\n\n      if (!rawInfo || !RE.test(rawInfo)) {\n        return fence.apply(void 0, args);\n      }\n\n      var langName = rawInfo.replace(RE, '').trim(); // ensure the next plugin get the correct lang.\n\n      token.info = langName;\n      token.lineNumbers = RE.exec(rawInfo)[1].split(',').map(function (v) {\n        return v.split('-').map(function (v) {\n          return parseInt(v, 10);\n        });\n      });\n    }\n\n    var code = rawCode.slice(rawCode.indexOf('<code>'), rawCode.indexOf('</code>'));\n    var highlightLinesCode = code.split('\\n').map(function (split, index) {\n      var lineNumber = index + 1;\n      var inRange = token.lineNumbers.some(function (_ref) {\n        var start = _ref[0],\n            end = _ref[1];\n\n        if (start && end) {\n          return lineNumber >= start && lineNumber <= end;\n        }\n\n        return lineNumber === start;\n      });\n\n      if (inRange) {\n        return '<div class=\"highlighted\">&nbsp;</div>';\n      }\n\n      return '<br>';\n    }).join('');\n    var highlightLinesWrapperCode = \"<div class=\\\"highlight-lines\\\">\" + highlightLinesCode + \"</div>\";\n    var finalCode = rawCode.replace('<!--beforeend-->', highlightLinesWrapperCode + \"<!--beforeend-->\");\n    return finalCode;\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}