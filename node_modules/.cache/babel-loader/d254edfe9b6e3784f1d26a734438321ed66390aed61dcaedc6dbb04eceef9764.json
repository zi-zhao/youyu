{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ca44eb4e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  style: {\n    \"width\": \"100%\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"showdata\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"font\"\n}, \"总收益\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"content_box\"\n};\nconst _hoisted_5 = {\n  class: \"boxborder\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"right\"\n};\nconst _hoisted_8 = {\n  class: \"name\"\n};\nconst _hoisted_9 = {\n  style: {\n    \"display\": \"flex\",\n    \"gap\": \"8px\",\n    \"font-size\": \"14px\"\n  }\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"thisweek\"\n}, \"本周\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"linechart\"\n};\nconst _hoisted_12 = {\n  ref: \"lineContainer\",\n  class: \"linebox\"\n};\nconst _hoisted_13 = {\n  class: \"barchart\"\n};\nconst _hoisted_14 = {\n  ref: \"barContainer\",\n  class: \"barbox\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.manuData, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"content_row\",\n      key: index\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", {\n      class: \"left\",\n      style: _normalizeStyle({\n        'background-color': item.bgccolor\n      })\n    }, [_createElementVNode(\"img\", {\n      src: item.imgSrc,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_6)], 4 /* STYLE */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"div\", {\n      class: \"data\",\n      style: _normalizeStyle({\n        'color': item.textcolor\n      })\n    }, _toDisplayString(item.data), 5 /* TEXT, STYLE */), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"div\", {\n      class: \"weekdata\",\n      style: _normalizeStyle({\n        'color': item.textcolor\n      })\n    }, \"+\" + _toDisplayString(item.weekadd), 5 /* TEXT, STYLE */)])])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_11, [_createCommentVNode(\" 折线图容器 \"), _createElementVNode(\"div\", _hoisted_12, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_13, [_createCommentVNode(\" 柱状图容器 \"), _createElementVNode(\"div\", _hoisted_14, null, 512 /* NEED_PATCH */)])]);\n}","map":{"version":3,"names":["style","class","_createElementVNode","ref","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$setup","manuData","item","index","key","_hoisted_5","_normalizeStyle","bgccolor","src","imgSrc","alt","_hoisted_7","_hoisted_8","_toDisplayString","name","textcolor","data","_hoisted_9","_hoisted_10","weekadd","_hoisted_11","_createCommentVNode","_hoisted_12","_hoisted_13","_hoisted_14"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\CreateCenter\\components\\TheData\\IncomeData.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 100%;\">\r\n    <div class=\"showdata\">\r\n        <p class=\"font\">总收益</p>\r\n        <div class=\"content_box\">\r\n            <div class=\"content_row\" v-for=\"(item, index) in manuData\" :key=\"index\">\r\n                <div class=\"boxborder\">\r\n                    <div class=\"left\" :style=\"{ 'background-color': item.bgccolor }\">\r\n                        <img :src=\"item.imgSrc\" alt=\"\">\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <div class=\"name\">{{ item.name }}</div>\r\n                        <div class=\"data\" :style=\"{ 'color': item.textcolor }\">{{ item.data }}</div>\r\n                        <div style=\"display: flex; gap: 8px; font-size: 14px;\">\r\n                            <div class=\"thisweek\">本周</div>\r\n                            <div class=\"weekdata\" :style=\"{ 'color': item.textcolor }\">+{{ item.weekadd }}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"linechart\">\r\n        <!-- 折线图容器 -->\r\n        <div ref=\"lineContainer\" class=\"linebox\"></div>\r\n    </div>\r\n    <div class=\"barchart\">\r\n        <!-- 柱状图容器 -->\r\n        <div ref=\"barContainer\" class=\"barbox\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted,computed } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from '@/utils/request';\r\nimport * as echarts from 'echarts';\r\nimport baitNumImg from '@/assets/CreateCenter/baitNum.svg'\r\nimport yellowCoinsImg from '@/assets/CreateCenter/yellowCoins.svg'\r\nimport energyImg from '@/assets/CreateCenter/energy.svg'\r\n\r\nconst lineContainer = ref(null);\r\nconst barContainer = ref(null);\r\nconst userCurrencyData = ref({});//保存用户当前的货币数据\r\nconst userSevenIncomeData = ref([]);//获取近7天的分别收益\r\nconst userSevenTotalIncomeData = ref({});//获取近7天的总收益\r\nconst coinData = ref([]);//获取近7天的鱼饵收益\r\nconst pointData = ref([]);//获取近7天的渔币收益\r\nconst energyData = ref([]);//获取近7天的能量收益\r\nconst userYearTotalIncomeData = ref([]);//获取近一年的总收益\r\n// const coinYearData = ref([]);//获取近一年的鱼饵收益\r\n// const pointYearData = ref([]);//获取近一年的渔币收益\r\n// const energyYearData = ref([]);//获取近一年的能量收益\r\n\r\nconst manuData = computed(() => [\r\n    { id: 1, name: '鱼饵数', data: userCurrencyData.value.point, weekadd:userSevenTotalIncomeData.value.point, imgSrc: baitNumImg , bgccolor:'#E4E8FF' , textcolor:'#606FA0'},\r\n    { id: 2, name: '渔币数', data: userCurrencyData.value.coin, weekadd:userSevenTotalIncomeData.value.coin, imgSrc:  yellowCoinsImg , bgccolor:'#FDEFD4' , textcolor:'#FFC960'},\r\n    { id: 3, name: '能量值', data: userCurrencyData.value.energy, weekadd:userSevenTotalIncomeData.value.energy, imgSrc: energyImg , bgccolor:'#D9FFD2' , textcolor:'#51B541'},\r\n]);\r\n\r\n// 转换数据为 ECharts 需要的格式\r\nconst transformDataForECharts = (data) => {\r\n    const dataSource = [['product', '鱼饵', '渔币', '能量']];\r\n    // 获取当前月份\r\n    const currentMonth = new Date().getMonth();\r\n    const monthAbbreviations = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    // 创建一个包含当前月份以及之前 11 个月份的数组\r\n    const lastTwelveMonths = Array.from({ length: 12 }, (_, i) => {\r\n        const monthIndex = (currentMonth - i + 12) % 12;\r\n        return monthAbbreviations[monthIndex];\r\n    }).reverse();\r\n    data.forEach((item, index) => {\r\n        const row = [\r\n            lastTwelveMonths[index], \r\n            item.point, \r\n            item.coin,  \r\n            item.energy \r\n        ];\r\n        dataSource.push(row);\r\n    });\r\n    return dataSource;\r\n};\r\n\r\n//获取用户当前货币数据\r\nasync function getCurrencydata() {\r\n  try {\r\n    const response = await axios.get(`/currency`)\r\n    if(response.data.code === 1){\r\n        userCurrencyData.value = response.data.data;\r\n        // ElMessage.success('获取用户当前货币数据成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户当前货币数据失败\");\r\n        ElMessage.error(\"获取用户当前货币数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户当前货币数据失败\", error); \r\n    ElMessage.error(\"获取用户当前货币数据失败\");\r\n  }\r\n}\r\n\r\n//获取用户近7天货币数据\r\nasync function getRecentIncomedata() {\r\n  try {\r\n    const response = await axios.get(`/currency/last7day`)\r\n    if(response.data.code === 1){\r\n        userSevenIncomeData.value = response.data.data;\r\n        userSevenIncomeData.value.forEach((item) => {\r\n            coinData.value.push(item.coin);\r\n            pointData.value.push(item.point);\r\n            energyData.value.push(item.energy);\r\n        });\r\n        // ElMessage.success('获取用户近7天货币数据成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户近7天货币数据失败\");\r\n        ElMessage.error(\"获取用户近7天货币数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户近7天货币数据失败\", error); \r\n    ElMessage.error(\"获取用户近7天货币数据失败\");\r\n  }\r\n}\r\n\r\n//获取用户近7天货币总收益\r\nasync function getRecentTotalIncomedata() {\r\n  try {\r\n    const response = await axios.get(`/currency/last7days`)\r\n    if(response.data.code === 1){\r\n        userSevenTotalIncomeData.value = response.data.data;\r\n        // ElMessage.success('获取用户近7天货币数据成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户近7天货币数据失败\");\r\n        ElMessage.error(\"获取用户近7天货币数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户近7天货币数据失败\", error); \r\n    ElMessage.error(\"获取用户近7天货币数据失败\");\r\n  }\r\n}\r\n\r\n//获取用户1年货币总收益\r\nasync function getYearIncomedata() {\r\n  try {\r\n    const response = await axios.get(`/currency/last12month`)\r\n    if(response.data.code === 1){\r\n        userYearTotalIncomeData.value = response.data.data;\r\n        // ElMessage.success('获取用户近7天货币数据成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户近7天货币数据失败\");\r\n        ElMessage.error(\"获取用户近7天货币数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户近7天货币数据失败\", error); \r\n    ElMessage.error(\"获取用户近7天货币数据失败\");\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n    await getCurrencydata();\r\n    await getRecentIncomedata();\r\n    await getRecentTotalIncomedata();\r\n    await getYearIncomedata();\r\n\r\n    // 折线图配置\r\n    const lineOption = {\r\n        title: {\r\n            text: '近7天收益'\r\n        },\r\n        tooltip: {\r\n            trigger: 'axis'\r\n        },\r\n        legend: {\r\n            data: ['能量', '渔币', '鱼饵'],\r\n        },\r\n        grid: {\r\n            bottom: '3%',\r\n            containLabel: true,\r\n            height: \"80%\"\r\n        },\r\n        toolbox: {\r\n            feature: {\r\n                saveAsImage: {}\r\n            }\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            splitLine :{\r\n                lineStyle:{\r\n                    type:'dashed'//虚线\r\n                },\r\n                show: true\r\n            }\r\n        },\r\n        series: [\r\n            {\r\n                name: '能量',\r\n                type: 'line',\r\n                stack: 'Total',\r\n                data:  energyData.value,\r\n                lineStyle: {\r\n                    width: 1\r\n                },\r\n                symbol: 'image://' + require('@/assets/CreateCenter/incomeData3.svg'),\r\n                symbolSize: [18,12],\r\n            },\r\n            {\r\n                name: '渔币',\r\n                type: 'line',\r\n                stack: 'Total',\r\n                data:  coinData.value,\r\n                lineStyle: {\r\n                    width: 1\r\n                },\r\n                symbol: 'image://' + require('@/assets/CreateCenter/incomeData1.svg'),\r\n                symbolSize: [18,12],\r\n            },\r\n            {\r\n                name: '鱼饵',\r\n                type: 'line',\r\n                stack: 'Total',\r\n                data:  pointData.value,\r\n                lineStyle: {\r\n                    width: 1\r\n                },\r\n                symbol: 'image://' + require('@/assets/CreateCenter/incomeData2.svg'),\r\n                symbolSize: [18,12],\r\n            },\r\n        ]\r\n    };\r\n\r\n    //柱状图配置\r\n    const barOption = {\r\n        title: {\r\n            text: '年收益一览'\r\n        },\r\n        legend: {\r\n            itemGap:20\r\n        },\r\n        tooltip: {},\r\n        grid: {\r\n            bottom: '3%',\r\n            left:'10%',\r\n            top:'60px',\r\n            containLabel: true,\r\n            width : \"70%\",\r\n            height: \"80%\"\r\n        },\r\n        dataset: {\r\n           source: transformDataForECharts(userYearTotalIncomeData.value)\r\n        },\r\n        xAxis: { type: 'category' },\r\n        yAxis: {},\r\n        series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }]\r\n    };\r\n\r\n    // 初始化图表\r\n    const lineChart = echarts.init(lineContainer.value);\r\n    lineChart.setOption(lineOption);\r\n\r\n    const barChart = echarts.init(barContainer.value);\r\n    barChart.setOption(barOption);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.showdata,\r\n.linechart,\r\n.barchart{\r\n    border: 1px solid #eaeaea;\r\n    box-shadow: 0px 0px 20px 0px rgba(96, 111, 160, 0.25), 0px 4px 4px 0px rgb(0 0 0 / 21%);\r\n    border-radius: 20px;\r\n    padding: 20px 30px;\r\n}\r\n.barbox{\r\n    width: 370px;\r\n    height: 260px;\r\n}\r\n.showdata,\r\n.linechart,\r\n.barchart{\r\n    width: 900px;\r\n    margin: 20px auto 40px; \r\n}\r\n.showdata{\r\n    height: 140px;\r\n}\r\n.font{\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    margin: 5px 0px;\r\n}\r\n.content_row:nth-child(1),\r\n.content_row:nth-child(2){\r\n    border-right: 1px solid #D4DCEC;\r\n}\r\n.boxborder{\r\n    width: 180px;\r\n    height: 80px;\r\n    padding: 10px 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 22px;\r\n}\r\n.boxborder:hover{\r\n    background-color: #F5F7FF;\r\n    border-radius: 15px;\r\n    cursor: pointer;\r\n}\r\n.content_box {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 1rem;\r\n}\r\n.left{\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n.right{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 5px;\r\n}\r\n.left img,\r\n.name,\r\n.data,\r\n.thisweek{\r\n    display: inline-block;\r\n}\r\n.left img{\r\n    width: 24px;\r\n    height: 24px;\r\n}\r\n.name,\r\n.thisweek{\r\n    color: #ACACAC;\r\n    font-size: 14px;\r\n}\r\n.data{\r\n    color:#606FA0; \r\n    font-size: larger; \r\n    font-weight: 600; \r\n    text-align: center;\r\n}\r\n.linebox,\r\n.barbox{\r\n    width: 100%;\r\n    height: 350px;\r\n    padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAoB,EAApB;IAAA;EAAA;AAAoB;;EAClBC,KAAK,EAAC;AAAU;gEACjBC,mBAAA,CAAuB;EAApBD,KAAK,EAAC;AAAM,GAAC,KAAG;;EACdA,KAAK,EAAC;AAAa;;EAEXA,KAAK,EAAC;AAAW;;;EAIbA,KAAK,EAAC;AAAO;;EACTA,KAAK,EAAC;AAAM;;EAEZD,KAAiD,EAAjD;IAAA;IAAA;IAAA;EAAA;AAAiD;iEAClDE,mBAAA,CAA8B;EAAzBD,KAAK,EAAC;AAAU,GAAC,IAAE;;EAQ3CA,KAAK,EAAC;AAAW;;EAEbE,GAAG,EAAC,eAAe;EAACF,KAAK,EAAC;;;EAE9BA,KAAK,EAAC;AAAU;;EAEZE,GAAG,EAAC,cAAc;EAACF,KAAK,EAAC;;;uBA3BpCG,mBAAA,CA6BM,OA7BNC,UA6BM,GA5BJH,mBAAA,CAmBM,OAnBNI,UAmBM,GAlBFC,UAAuB,EACvBL,mBAAA,CAgBM,OAhBNM,UAgBM,I,kBAfFJ,mBAAA,CAcMK,SAAA,QAAAC,WAAA,CAd2CC,MAAA,CAAAC,QAAQ,GAAxBC,IAAI,EAAEC,KAAK;yBAA5CV,mBAAA,CAcM;MAdDH,KAAK,EAAC,aAAa;MAAoCc,GAAG,EAAED;QAC7DZ,mBAAA,CAYM,OAZNc,UAYM,GAXFd,mBAAA,CAEM;MAFDD,KAAK,EAAC,MAAM;MAAED,KAAK,EAAAiB,eAAA;QAAA,oBAAwBJ,IAAI,CAACK;MAAQ;QACzDhB,mBAAA,CAA+B;MAAzBiB,GAAG,EAAEN,IAAI,CAACO,MAAM;MAAEC,GAAG,EAAC;0DAEhCnB,mBAAA,CAOM,OAPNoB,UAOM,GANFpB,mBAAA,CAAuC,OAAvCqB,UAAuC,EAAAC,gBAAA,CAAlBX,IAAI,CAACY,IAAI,kBAC9BvB,mBAAA,CAA4E;MAAvED,KAAK,EAAC,MAAM;MAAED,KAAK,EAAAiB,eAAA;QAAA,SAAaJ,IAAI,CAACa;MAAS;wBAAOb,IAAI,CAACc,IAAI,yBACnEzB,mBAAA,CAGM,OAHN0B,UAGM,GAFFC,WAA8B,EAC9B3B,mBAAA,CAAoF;MAA/ED,KAAK,EAAC,UAAU;MAAED,KAAK,EAAAiB,eAAA;QAAA,SAAaJ,IAAI,CAACa;MAAS;OAAI,GAAC,GAAAF,gBAAA,CAAGX,IAAI,CAACiB,OAAO,wB;sCAOnG5B,mBAAA,CAGM,OAHN6B,WAGM,GAFFC,mBAAA,WAAc,EACd9B,mBAAA,CAA+C,OAA/C+B,WAA+C,8B,GAEnD/B,mBAAA,CAGM,OAHNgC,WAGM,GAFFF,mBAAA,WAAc,EACd9B,mBAAA,CAA6C,OAA7CiC,WAA6C,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}