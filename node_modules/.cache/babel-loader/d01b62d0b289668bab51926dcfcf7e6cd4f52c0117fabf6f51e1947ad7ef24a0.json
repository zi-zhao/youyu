{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/VerifiedUser.svg';\nimport _imports_1 from '@/assets/Comment.svg';\nimport _imports_2 from '@//assets/More.svg';\nimport _imports_3 from '@/assets/More.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-516fa77d\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"commont_body\"\n};\nconst _hoisted_2 = {\n  class: \"commentListCont\"\n};\nconst _hoisted_3 = {\n  class: \"levelOneCommentInput commentInput\"\n};\nconst _hoisted_4 = {\n  class: \"input\"\n};\nconst _hoisted_5 = {\n  class: \"commentList\",\n  \"infinite-scroll-distance\": \"100\",\n  \"infinite-scroll-immediate\": \"false\"\n};\nconst _hoisted_6 = [\"onMouseenter\", \"onMouseleave\"];\nconst _hoisted_7 = {\n  class: \"userPhoto_1\"\n};\nconst _hoisted_8 = [\"src\", \"onClick\"];\nconst _hoisted_9 = {\n  class: \"userComment\"\n};\nconst _hoisted_10 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"gap\": \"3px\"\n  }\n};\nconst _hoisted_11 = {\n  class: \"userName\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  src: _imports_0,\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\"\n  },\n  alt: \"\"\n};\nconst _hoisted_13 = {\n  class: \"content\"\n};\nconst _hoisted_14 = {\n  class: \"operationBar\"\n};\nconst _hoisted_15 = {\n  class: \"commentDate\"\n};\nconst _hoisted_16 = [\"src\", \"onClick\"];\nconst _hoisted_17 = {\n  class: \"like-count\"\n};\nconst _hoisted_18 = [\"onClick\"];\nconst _hoisted_19 = {\n  class: \"like-count\"\n};\nconst _hoisted_20 = [\"onClick\"];\nconst _hoisted_21 = [\"onClick\"];\nconst _hoisted_22 = [\"onMouseleave\"];\nconst _hoisted_23 = [\"onClick\"];\nconst _hoisted_24 = {\n  key: 0,\n  class: \"userinput2\"\n};\nconst _hoisted_25 = {\n  class: \"input\"\n};\nconst _hoisted_26 = [\"onClick\"];\nconst _hoisted_27 = {\n  key: 1\n};\nconst _hoisted_28 = [\"onMouseenter\", \"onMouseleave\"];\nconst _hoisted_29 = {\n  class: \"userPhoto_2\"\n};\nconst _hoisted_30 = [\"src\", \"onClick\"];\nconst _hoisted_31 = {\n  class: \"userComment2\"\n};\nconst _hoisted_32 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"gap\": \"3px\"\n  }\n};\nconst _hoisted_33 = {\n  class: \"userName2\"\n};\nconst _hoisted_34 = {\n  key: 0,\n  src: _imports_0,\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\"\n  },\n  alt: \"\"\n};\nconst _hoisted_35 = {\n  class: \"content2\"\n};\nconst _hoisted_36 = {\n  class: \"operationBar2\"\n};\nconst _hoisted_37 = {\n  class: \"commentDate2\"\n};\nconst _hoisted_38 = [\"src\", \"onClick\"];\nconst _hoisted_39 = {\n  class: \"like-count2\"\n};\nconst _hoisted_40 = [\"onClick\"];\nconst _hoisted_41 = [\"onMouseleave\"];\nconst _hoisted_42 = [\"onClick\"];\nconst _hoisted_43 = {\n  key: 0,\n  class: \"bottom\"\n};\nconst _hoisted_44 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _directive_infinite_scroll = _resolveDirective(\"infinite-scroll\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 一级评论 输入 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_input, {\n    modelValue: $setup.levelOneCommentContent,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.levelOneCommentContent = $event),\n    modelModifiers: {\n      lazy: true,\n      trim: true\n    },\n    autosize: {\n      minRows: 1,\n      maxRows: 5\n    },\n    type: \"textarea\",\n    maxlength: \"200\",\n    \"show-word-limit\": \"true\",\n    resize: \"none\",\n    placeholder: \"发表你的评论吧\",\n    class: \"comment-input\",\n    style: {\n      \"width\": \"90%\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"button\", {\n    onClick: $setup.handlerlevelOneComment\n  }, \"评论\")])]), _createCommentVNode(\" 评论渲染 \"), _createCommentVNode(\" 评论渲染 \"), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createCommentVNode(\" 评论item \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.records, record => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: record.id,\n      style: {\n        \"margin-left\": \"60px\"\n      }\n    }, [_createElementVNode(\"div\", {\n      class: \"levelOneComment commentItem\",\n      onMouseenter: $event => record.showMore = true,\n      onMouseleave: $event => record.showMore = false\n    }, [_createElementVNode(\"div\", _hoisted_7, [record.newAvatar ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: record.newAvatar,\n      alt: \"\",\n      class: \"navbar-avatar\",\n      onClick: $event => $setup.navigateToUserProfile(record.userId),\n      style: {\n        cursor: 'pointer'\n      }\n    }, null, 8 /* PROPS */, _hoisted_8)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 一级评论内容 \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"p\", _hoisted_11, _toDisplayString(record.username), 1 /* TEXT */), record.verified === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_12)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"p\", _hoisted_13, _toDisplayString(record.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", _hoisted_15, _toDisplayString(record.createTime), 1 /* TEXT */), _createElementVNode(\"img\", {\n      class: \"like-pic\",\n      src: record.state === 0 ? $setup.unlikedImage : $setup.likedImage,\n      onClick: $event => $setup.increaseCount(record)\n    }, null, 8 /* PROPS */, _hoisted_16), _createElementVNode(\"span\", _hoisted_17, _toDisplayString(record.likeCount), 1 /* TEXT */), _createElementVNode(\"img\", {\n      class: \"like-pic\",\n      src: _imports_1,\n      onClick: $event => $setup.handleSubComment(record.id)\n    }, null, 8 /* PROPS */, _hoisted_18), _createElementVNode(\"span\", _hoisted_19, _toDisplayString(record.replyCount), 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: \"commentBtn\",\n      onClick: $event => $setup.toggleReplyBox(record.id)\n    }, \"回复\", 8 /* PROPS */, _hoisted_20), record.showMore ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: _imports_2,\n      class: \"more\",\n      onClick: $event => record.showReported = true,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_21)) : _createCommentVNode(\"v-if\", true), record.showReported ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      class: \"hover-box\",\n      onMouseleave: $event => record.showReported = false\n    }, [_createElementVNode(\"div\", {\n      class: \"report-hover\",\n      onClick: $event => $setup.commentReport(record.id, 0)\n    }, \" 举报 \", 8 /* PROPS */, _hoisted_23)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_22)) : _createCommentVNode(\"v-if\", true)])])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_6), _createCommentVNode(\" 一级回复输入框 - 显示在每个一级评论的底下 \"), $setup.activeReplyBoxId === record.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_createVNode(_component_el_input, {\n      modelValue: $setup.replyCommentContent,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.replyCommentContent = $event),\n      modelModifiers: {\n        lazy: true,\n        trim: true\n      },\n      autosize: {\n        minRows: 1,\n        maxRows: 5\n      },\n      type: \"textarea\",\n      maxlength: \"200\",\n      \"show-word-limit\": \"true\",\n      resize: \"none\",\n      placeholder: \"文本中的评论将被发送\",\n      class: \"comment-input\",\n      style: {\n        \"width\": \"89%\"\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"button\", {\n      onClick: $event => $setup.handleReplyToFirstLevelComment(record)\n    }, \" 评论 \", 8 /* PROPS */, _hoisted_26)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 二级评论 \"), record.showComments ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.repliesMap[record.id] || [], reply => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: reply.id,\n        class: \"userComment\"\n      }, [_createElementVNode(\"div\", {\n        class: \"leveltwoComment commentItem\",\n        onMouseenter: $event => reply.showMore = true,\n        onMouseleave: $event => reply.showMore = false\n      }, [_createElementVNode(\"div\", _hoisted_29, [reply.newAvatar ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        src: reply.newAvatar,\n        alt: \"\",\n        class: \"navbar-avatar\",\n        onClick: $event => $setup.navigateToUserProfile(reply.userId),\n        style: {\n          cursor: 'pointer'\n        }\n      }, null, 8 /* PROPS */, _hoisted_30)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"p\", _hoisted_33, _toDisplayString(reply.username), 1 /* TEXT */), reply.verified === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_34)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"p\", _hoisted_35, _toDisplayString(reply.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"span\", _hoisted_37, _toDisplayString(reply.createTime), 1 /* TEXT */), _createCommentVNode(\" 点赞图片 \"), _createElementVNode(\"img\", {\n        class: \"like-pic2\",\n        src: reply.state === 0 ? $setup.unlikedImage : $setup.likedImage,\n        onClick: $event => $setup.increaseCount2(reply)\n      }, null, 8 /* PROPS */, _hoisted_38), _createElementVNode(\"span\", _hoisted_39, _toDisplayString(reply.likeCount), 1 /* TEXT */), _createCommentVNode(\" 评论举报 \"), reply.showMore ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        src: _imports_3,\n        class: \"more\",\n        onClick: $event => reply.showReported = true,\n        alt: \"\"\n      }, null, 8 /* PROPS */, _hoisted_40)) : _createCommentVNode(\"v-if\", true), reply.showReported ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 1,\n        class: \"hover-box\",\n        onMouseleave: $event => reply.showReported = false\n      }, [_createElementVNode(\"div\", {\n        class: \"report-hover\",\n        onClick: $event => $setup.commentReport(reply.id, 1)\n      }, \" 举报 \", 8 /* PROPS */, _hoisted_42)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_41)) : _createCommentVNode(\"v-if\", true)])])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_28), record.replyCount > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_43, [_createVNode($setup[\"ElPagination\"], {\n        \"current-page\": $setup.paginationStates[record.id].currentPage,\n        \"onUpdate:currentPage\": $event => $setup.paginationStates[record.id].currentPage = $event,\n        \"page-size\": $setup.paginationStates[record.id].pageSize,\n        \"onUpdate:pageSize\": $event => $setup.paginationStates[record.id].pageSize = $event,\n        small: _ctx.small,\n        layout: \"prev, pager, next\",\n        \"pager-count\": $setup.paginationStates[record.id].pageCount,\n        \"page-count\": $setup.paginationStates[record.id].pageCount,\n        onCurrentChange: newPage => $setup.handleCurrentChange(record.id, newPage)\n      }, null, 8 /* PROPS */, [\"current-page\", \"onUpdate:currentPage\", \"page-size\", \"onUpdate:pageSize\", \"small\", \"pager-count\", \"page-count\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])), [[_directive_infinite_scroll, $setup.load]])]), $setup.dialogVisible2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_44, [_createVNode($setup[\"CreportedDialog\"], {\n    modelValue: $setup.dialogVisible2,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.dialogVisible2 = $event),\n    id: $setup.workId,\n    type: $setup.type\n  }, null, 8 /* PROPS */, [\"modelValue\", \"id\", \"type\"])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","class","style","src","alt","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_createVNode","_component_el_input","$setup","levelOneCommentContent","$event","lazy","trim","autosize","minRows","maxRows","type","maxlength","resize","placeholder","onClick","handlerlevelOneComment","_hoisted_5","_Fragment","_renderList","records","record","key","id","onMouseenter","showMore","onMouseleave","_hoisted_7","newAvatar","navigateToUserProfile","userId","cursor","_hoisted_9","_hoisted_10","_hoisted_11","_toDisplayString","username","verified","_hoisted_12","_hoisted_13","content","_hoisted_14","_hoisted_15","createTime","state","unlikedImage","likedImage","increaseCount","_hoisted_17","likeCount","handleSubComment","_hoisted_19","replyCount","toggleReplyBox","_hoisted_20","showReported","commentReport","_hoisted_23","activeReplyBoxId","_hoisted_24","_hoisted_25","replyCommentContent","handleReplyToFirstLevelComment","_hoisted_26","showComments","_hoisted_27","repliesMap","reply","_hoisted_29","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","increaseCount2","_hoisted_39","_hoisted_42","_hoisted_43","paginationStates","currentPage","pageSize","small","_ctx","layout","pageCount","onCurrentChange","newPage","handleCurrentChange","load","dialogVisible2","_hoisted_44","workId"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\ShareShow\\components\\ShareCommentL.vue"],"sourcesContent":["<template>\r\n  <div class=\"commont_body\">\r\n    <div class=\"commentListCont\">\r\n      <!-- 一级评论 输入 -->\r\n      <div class=\"levelOneCommentInput commentInput\">\r\n        <div class=\"input\">\r\n          <el-input\r\n              v-model.lazy.trim=\"levelOneCommentContent\"\r\n              :autosize=\"{ minRows: 1, maxRows: 5 }\"\r\n              type=\"textarea\"\r\n              maxlength=\"200\"\r\n              show-word-limit=\"true\"\r\n              resize=\"none\"\r\n              placeholder=\"发表你的评论吧\"\r\n              class=\"comment-input\"\r\n              style=\"width: 90%;\"\r\n          />\r\n          <button @click=\"handlerlevelOneComment\">评论</button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 评论渲染 -->\r\n      <!-- 评论渲染 -->\r\n      <div class=\"commentList\"  v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n        <!-- 评论item -->\r\n        <div v-for=\"record in records\" :key=\"record.id\" style=\"margin-left: 60px;\">\r\n          <div class=\"levelOneComment commentItem\" @mouseenter=\"record.showMore = true\" @mouseleave=\"record.showMore = false\">\r\n            <div class=\"userPhoto_1\">\r\n              <img \r\n                v-if=\"record.newAvatar\"\r\n                :src=\"record.newAvatar\"\r\n                alt=\"\"\r\n                class=\"navbar-avatar\"\r\n                @click=\"navigateToUserProfile(record.userId)\"\r\n                :style=\"{ cursor: 'pointer' }\"\r\n            >\r\n            </div>\r\n            <!-- 一级评论内容 -->\r\n            <div class=\"userComment\">\r\n              <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                  <p class=\"userName\">{{ record.username }}</p>\r\n                  <img v-if=\"record.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n              </div>\r\n              <p class=\"content\">{{ record.content }}</p>\r\n              <div class=\"operationBar\">\r\n                <span class=\"commentDate\">{{ record.createTime }}</span>\r\n                <img\r\n                  class=\"like-pic\"\r\n                  :src=\" record.state === 0 ? unlikedImage : likedImage\"\r\n                  @click=\"increaseCount(record)\"\r\n                />\r\n                <span class=\"like-count\">{{ record.likeCount }}</span>\r\n                <img class=\"like-pic\" src=\"@/assets/Comment.svg\"  @click=\"handleSubComment(record.id)\"/>\r\n                <span class=\"like-count\">{{ record.replyCount }}</span>\r\n                <span class=\"commentBtn\" @click=\"toggleReplyBox(record.id)\"\r\n                  >回复</span\r\n                >\r\n                <img src=\"@//assets/More.svg\" class=\"more\" v-if=\"record.showMore\" @click=\"record.showReported = true\" alt=\"\">\r\n                <div class=\"hover-box\" v-if=\"record.showReported\" @mouseleave=\"record.showReported = false\">\r\n                    <div class=\"report-hover\" @click=\"commentReport(record.id,0)\">\r\n                      举报\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- 一级回复输入框 - 显示在每个一级评论的底下 -->\r\n          <div v-if=\"activeReplyBoxId === record.id\" class=\"userinput2\">\r\n            <div class=\"input\">\r\n              <el-input\r\n                v-model.lazy.trim=\"replyCommentContent\"\r\n                :autosize=\"{ minRows: 1, maxRows: 5 }\"\r\n                type=\"textarea\"\r\n                maxlength=\"200\"\r\n                show-word-limit=\"true\"\r\n                resize=\"none\"\r\n                placeholder=\"文本中的评论将被发送\"\r\n                class=\"comment-input\"\r\n                style=\"width: 89%;\"\r\n              />\r\n              <button @click=\"handleReplyToFirstLevelComment(record)\">\r\n                评论\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 二级评论 -->\r\n          <div v-if=\"record.showComments\" >\r\n            <div\r\n              v-for=\"reply in repliesMap[record.id] || []\"\r\n              :key=\"reply.id\"\r\n              class=\"userComment\"\r\n            >\r\n              <div class=\"leveltwoComment commentItem\" @mouseenter=\"reply.showMore = true\" @mouseleave=\"reply.showMore = false\">\r\n                <div class=\"userPhoto_2\">\r\n                  <img \r\n                    v-if=\"reply.newAvatar\"\r\n                    :src=\"reply.newAvatar\"\r\n                    alt=\"\"\r\n                    class=\"navbar-avatar\"\r\n                    @click=\"navigateToUserProfile(reply.userId)\"\r\n                    :style=\"{ cursor: 'pointer' }\"\r\n                  >\r\n                </div>\r\n                <div class=\"userComment2\">\r\n                  <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                      <p class=\"userName2\">{{ reply.username }}</p>\r\n                      <img  v-if=\"reply.verified === 1\"  src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n                  </div>\r\n                  <p class=\"content2\">{{ reply.content }}</p>\r\n                  <div class=\"operationBar2\">\r\n                    <span class=\"commentDate2\">{{ reply.createTime }}</span>\r\n                    <!-- 点赞图片 -->\r\n                    <img\r\n                      class=\"like-pic2\"\r\n                      :src=\"reply.state === 0 ? unlikedImage : likedImage\"\r\n                      @click=\"increaseCount2(reply)\"\r\n                    />\r\n                    <span class=\"like-count2\">{{ reply.likeCount }}</span>\r\n                    <!-- 评论举报 -->\r\n                    <img src=\"@/assets/More.svg\" class=\"more\" v-if=\" reply.showMore\" @click=\" reply.showReported = true\" alt=\"\">\r\n                    <div class=\"hover-box\" v-if=\" reply.showReported\" @mouseleave=\" reply.showReported = false\">\r\n                      <div class=\"report-hover\" @click=\"commentReport(reply.id,1)\">\r\n                        举报\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"bottom\" v-if=\"record.replyCount>0\">\r\n                <el-pagination\r\n                  v-model:current-page=\"paginationStates[record.id].currentPage\"\r\n                  v-model:page-size=\"paginationStates[record.id].pageSize\"\r\n                  :small=\"small\"\r\n                  layout=\"prev, pager, next\"\r\n                  :pager-count=\"paginationStates[record.id].pageCount\"\r\n                  :page-count=\"paginationStates[record.id].pageCount\"\r\n                  @current-change=\"newPage => handleCurrentChange(record.id, newPage)\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"dialogVisible2\">\r\n      <CreportedDialog v-model=\"dialogVisible2\" :id=\"workId\" :type=\"type\" ></CreportedDialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script setup>\r\nimport { ElMessage,ElPagination } from 'element-plus';\r\nimport axios from \"@/utils/request\";\r\nimport { ref,defineProps,onMounted,reactive } from \"vue\";\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport unlikedImage from '@/assets/LikeBefore.svg';//点赞前图片\r\nimport likedImage from '@/assets/LikeAfter.svg';//点赞后图片\r\nimport { useRouter } from 'vue-router';\r\nimport CreportedDialog from '@/page/components/CreportedDialog.vue';\r\nimport { formatDateTime} from '@/utils/timeFormat'; \r\nimport { openUrl } from '@/utils/routeJudge'\r\n\r\nconst dialogVisible2 = ref(false);//控制评论举报弹框是否显示\r\nconst type = ref(null);\r\nconst workId = ref(null);\r\n\r\nconst props = defineProps({\r\n    shareId : Number,\r\n    shareAuthorId : Number,\r\n    shareAuthorName : String,\r\n    shareTitle : String\r\n});\r\n\r\nconst currentPage = ref(1);\r\nconst router = useRouter();\r\nlet userId = localStorage.getItem(\"userId\");\r\nlet userName = localStorage.getItem(\"userName\");\r\nconst records = ref([]); //储存一级评论列表\r\nconst repliesMap = ref({}); // 存储每个一级评论ID对应的二级评论列表\r\nconst newUserAvater = ref();//存放用户自己的头像\r\nconst paginationStates = reactive({});//存储每个分页器\r\n\r\nconst initPaginationState = (recordId) => {\r\n  if (!paginationStates[recordId]) {\r\n    paginationStates[recordId] = {\r\n      currentPage: 1, //分页器中的当前页数\r\n      pageSize: 5, //分页器中的每页呈现数据条数\r\n      pageCount:0,//分页器中总页数\r\n      pagerCount: 5,//分页器最多显示几个页码\r\n    };\r\n  }\r\n};\r\n  \r\n//分页器中获取新的页码\r\nconst handleCurrentChange = (commentId, currentChange) => {\r\n  if (paginationStates[commentId]) {\r\n    paginationStates[commentId].currentPage = currentChange;\r\n    fetchReplies(commentId, paginationStates[commentId].currentPage, paginationStates[commentId].pageSize);\r\n  }\r\n};\r\n\r\n//向举报弹窗赋值的函数\r\nconst commentReport = (id,typeNum) =>{\r\n  workId.value = id;\r\n  type.value = typeNum;\r\n  dialogVisible2.value = true;\r\n}\r\n\r\n//点击用户头像进行跳转\r\nconst navigateToUserProfile = (user_id) => {\r\n  console.log('点击用户头像跳转');\r\n  if(user_id == userId){\r\n    // const routeLocation = router.resolve({ path: '/PersonalPage' });\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl('/PersonalPage')\r\n  }else{\r\n    // const routeLocation = router.resolve({ path: `/OtherUserPersonalPage/${user_id}`});\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl(`/OtherUserPersonalPage/${user_id}`)\r\n  }\r\n};\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n      if(currentPage.value === 1){\r\n          currentPage.value++;\r\n      }\r\n      await fetchComments(props.shareId,currentPage.value);\r\n      currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n//获取一级评论并获取对应的二级评论（调用fetchReplies）\r\nconst fetchComments = async (shareId,currentPage) => {\r\n  try {\r\n    const response = await axios.get(\"/comment/list\", {\r\n      params: {\r\n        pageSize: 10,\r\n        currentPage: currentPage,\r\n        articleId: shareId,\r\n        type:1,\r\n      },\r\n    });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n      response.data.data.records.forEach(record => initPaginationState(record.id));\r\n      const updates = response.data.data.records.map(async (record) => {\r\n        const newAvatar = await getUsersAvatarFromCOS(record.userId);\r\n        const verified = await fetchUserInformation(record.userId);\r\n        return {\r\n          ...record,\r\n          verified,\r\n          showReported: false, // 控制评论的举报按钮是否显示\r\n          showMore: false, // 控制评论“more”图标是否显示\r\n          newAvatar,\r\n          showComments: false,\r\n        };\r\n      });\r\n      const updatedRecords = await Promise.all(updates);\r\n      records.value = [...records.value, ...updatedRecords];\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n      // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error( \"获取一级评论数据失败:\", response.data.msg || \"Unknown error\" );\r\n      ElMessage.error('获取分享评论失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"请求一级评论接口失败:\", error.message);\r\n    ElMessage.error('获取分享评论失败');\r\n  }\r\n};\r\n\r\n//根据一级评论id获取对应二级评论\r\nconst fetchReplies = async (commentId,currentPage,pageSize) => {\r\n  try {\r\n    const response = await axios.get(\"/comment/reply/list\", {\r\n      params: {\r\n        pageSize: pageSize,\r\n        currentPage: currentPage,\r\n        commentId: commentId,\r\n      },\r\n    });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n      repliesMap.value[commentId] = response.data.data.records;\r\n      if (paginationStates[commentId]) {\r\n        paginationStates[commentId].pageCount = Math.ceil(response.data.data.total / pageSize);\r\n      }\r\n      const updates =repliesMap.value[commentId].map(async (record) => {\r\n        const newAvatar = await getUsersAvatarFromCOS(record.userId);\r\n        const verified = await fetchUserInformation(record.userId);\r\n        return {\r\n          ...record,\r\n          verified,\r\n          showReported: false, // 控制评论的举报按钮是否显示\r\n          showMore: false, // 控制评论“more”图标是否显示\r\n          newAvatar\r\n        };\r\n      });\r\n      repliesMap.value[commentId] = await Promise.all(updates);\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n      // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error(\"获取二级评论接口失败\", response.data.msg || \"Unknown error\");\r\n      ElMessage.error('获取二级评论接口失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取二级评论接口失败\", error.message);\r\n    ElMessage.error('获取二级评论接口失败');\r\n  }\r\n};\r\n\r\n//点击一级评论的评论按钮，展开对应的二级评论\r\nconst handleSubComment =(recordId) =>{\r\n  const record = records.value.find(r => r.id === recordId);\r\n  if (record) {\r\n    record.showComments = !record.showComments;\r\n  }\r\n  if (record.showComments) {\r\n    // 初始化分页状态，如果尚未初始化\r\n    initPaginationState(recordId);\r\n    // 使用该一级评论的分页状态来获取二级评论\r\n    fetchReplies(recordId, paginationStates[recordId].currentPage, paginationStates[recordId].pageSize);\r\n  }\r\n}\r\n  \r\n//最顶部的评论框提交的相关接口\r\nconst levelOneCommentContent = ref(\"\");\r\nconst handlerlevelOneComment = async () => {\r\n  if (!levelOneCommentContent.value) {\r\n    ElMessage.error(\"评论内容不能为空!\");\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.post(\"/comment/send\", {\r\n      authorId:props.shareAuthorId,\r\n      authorName:props.shareAuthorName,\r\n      worksId: props.shareId,\r\n      worksTitle:props.shareTitle,\r\n      userId: userId,\r\n      username: userName,\r\n      content: levelOneCommentContent.value,\r\n      type:1,\r\n    });\r\n    if (response.data.code === 1) {\r\n      const newReplyId = response.data.map.id;\r\n      ElMessage.success(\"评论成功!\");\r\n      const time = new Date();\r\n      // 假设并构造新的评论\r\n      const newComment = {\r\n        id: newReplyId, \r\n        username: userName, \r\n        newAvatar: newUserAvater.value,\r\n        content: levelOneCommentContent.value,\r\n        createTime: formatDateTime(time), // 使用当前时间作为评论时间\r\n        state:0, // 初始状态下，该评论未被点赞\r\n        likeCount: 0,\r\n        replyCount: 0,\r\n        shareId: props.shareId, \r\n      };\r\n      // 将新评论添加到records数组的开头\r\n      records.value.unshift(newComment);\r\n      // 清除评论输入框的内容\r\n      levelOneCommentContent.value = \"\";\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      ElMessage.error(\"评论失败: \" + (response.data.msg || \"未知错误\"));\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"提交评论时出现错误: \" + error.message);\r\n  }\r\n};\r\n\r\n//一级评论框的内容获取\r\nconst replyCommentContent = ref(\"\");\r\nconst handleReplyToFirstLevelComment = async (comment) => {\r\n  if (!replyCommentContent.value) {\r\n    ElMessage.error(\"回复内容不能为空!\");\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.post(\"/comment/reply/send\", {\r\n      userId: userId, // 假设用户ID\r\n      username: userName,\r\n      worksId: props.shareId,\r\n      worksTitle:props.shareTitle,\r\n      commentId: comment.id,\r\n      content: replyCommentContent.value,\r\n      type:1,\r\n    });\r\n    if (response.data.code === 1) {\r\n      ElMessage.success(\"回复成功!\");\r\n      // 折叠回复框\r\n      activeReplyBoxId.value = null;\r\n      replyCommentContent.value = \"\"; // 重置回复内容\r\n      comment.showComments = false;\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      ElMessage.error(\"回复失败: \" + (response.data.msg || \"未知错误\"));\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"提交回复时出现错误: \" + error.message);\r\n  }\r\n};\r\n\r\n//一级评论的点赞接口，接受一个 record 作为参数\r\nasync function increaseCount(record) {\r\n  try {\r\n      const config = record.state === 0\r\n        ? {\r\n          method: 'put',\r\n          url: `/comment/like`,\r\n          params: { id: record.id , userId : record.userId}\r\n        }\r\n        : {\r\n          method: 'delete',\r\n          url: `/comment/unlike`,\r\n          params: { id: record.id , userId : record.userId}\r\n        };\r\n      const response = await axios(config);\r\n      if (response.data && response.data.code === 1) {\r\n        record.state  = record.state === 0 ? 1 : 0;\r\n        record.likeCount = response.data.data;\r\n        console.log('点赞/取消赞 成功');\r\n      } else if(response.data.code === 0 && response.data.msg){\r\n          ElMessage.error(response.data.msg.toString());\r\n      }else {\r\n          console.error(response.data.msg || 'Unknown error');\r\n      }\r\n  } catch (error) {\r\n      console.error('获取点赞状态失败', error.message);\r\n  }\r\n}\r\n\r\n  //二级评论的点赞接口，接受一个 reply 作为参数\r\n  async function increaseCount2(reply) {\r\n  try {\r\n      const config = reply.state === 0\r\n        ? {\r\n            method: 'put',\r\n            url: `comment/reply/like`,\r\n            params: { id: reply.id , userId : reply.userId}\r\n        }\r\n        : {\r\n            method: 'delete',\r\n            url: `/comment/reply/unlike`,\r\n            params: { id: reply.id , userId : reply.userId}\r\n        };\r\n      const response = await axios(config);\r\n      if (response.data && response.data.code === 1) {\r\n        reply.state  = reply.state === 0 ? 1 : 0;\r\n        reply.likeCount = response.data.data;\r\n        console.log('点赞/取消赞 成功');\r\n      } else if(response.data.code === 0 && response.data.msg){\r\n          ElMessage.error(response.data.msg.toString());\r\n      }else {\r\n          console.error(response.data.msg || 'Unknown error');\r\n      }\r\n  } catch (error) {\r\n      console.error('获取点赞状态失败', error.message);\r\n  }\r\n}\r\n\r\n//一级回复框的折叠（点击回复后出现）\r\nconst activeReplyBoxId = ref(null);\r\nconst toggleReplyBox = (id) => {\r\n  activeReplyBoxId.value = activeReplyBoxId.value === id ? null : id;\r\n};\r\n\r\n// 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n  try {\r\n    const response = await axios.get(`/users/${userId}`);\r\n    if(response.data.code === 1){\r\n      return (response.data.data.verified);\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n      ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n      ElMessage.error('获取用户信息失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户信息失败\", error);\r\n    ElMessage.error('获取用户信息失败');\r\n  }\r\n};\r\n\r\n\r\nonMounted(async () => {\r\n  newUserAvater.value = await getUsersAvatarFromCOS(userId);\r\n  fetchComments(props.shareId,currentPage.value);\r\n})\r\n    \r\n</script>\r\n\r\n<style scoped>\r\n.bottom{\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 20px 0 20px 2rem;\r\n}\r\n::v-deep .el-pagination__rightwrapper .el-pagination__total{\r\n  display: none !important;;\r\n}\r\n.cnav {\r\n  display: flex;\r\n  width: 85%;\r\n  padding: 11px 12px 11px 12px;\r\n  align-items: flex-start;\r\n  gap: 32px;\r\n  flex-shrink: 0;\r\n  margin: 10px auto 20px;\r\n}\r\n.ctext1 {\r\n  font-size: 18px;\r\n}\r\n.ml-4 span {\r\n  display: inline-block;\r\n  text-align: center;\r\n  width: 50px;\r\n  height: 20px;\r\n  font-size: 14px;\r\n}\r\n.ml-4 .button_gap {\r\n  width: 10px;\r\n  height: 20px;\r\n  font-size: 14px;\r\n}\r\n\r\n.commont_body {\r\n  width: 85%;\r\n  height: auto;\r\n  margin: 0 auto;\r\n}\r\n\r\n.commentListCont {\r\n  margin: 10px auto;\r\n  width: 100%;\r\n  min-width: 650px;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* 头像 */\r\n.userPhoto_1,\r\n.userPhoto_2 {\r\n  border-radius: 100%;\r\n  overflow: hidden;\r\n  margin-right: 15px;\r\n}\r\n.userPhoto_1 {\r\n  width: 2.5rem;\r\n  height: 2.5rem;\r\n}\r\n.userPhoto_2 {\r\n  width: 2rem;\r\n  height: 2rem;\r\n}\r\n.navbar-avatar {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n/*一级,二级,评论输入*/\r\n.commentInput {\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.commentInput .input {\r\n  border-radius: 16px;\r\n  flex: 1;\r\n  position: relative;\r\n}\r\n.commentInput .input > button {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 4px;\r\n  border-radius: 20px;\r\n  height: 30px;\r\n  padding: 0 15px;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  background-color: #9fa9ca;\r\n  cursor: pointer;\r\n}\r\n.commentInput .input > button:active {\r\n  box-shadow: 1px 1px 5px 5px #999 inset;\r\n}\r\n\r\n/* 评论列表 */\r\n.commentList {\r\n  flex: 1;\r\n  width: 100%;\r\n  padding: 0 5px;\r\n  margin-top: 15px;\r\n}\r\n.levelOneComment {\r\n  display: flex; \r\n  align-items: flex-start;\r\n  padding: 10px;\r\n  margin-bottom: 2rem;\r\n}\r\n.userComment {\r\n  flex: 1; \r\n}\r\n.userName {\r\n  color: #393939;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;\r\n}\r\n.content {\r\n  margin: 1rem 0 1.5rem;\r\n  color: #000;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  max-width: 100%;\r\n  line-height: 1.6;\r\n}\r\n.operationBar {\r\n  margin-bottom: 3px;\r\n  width: 90%;\r\n  display: flex; \r\n  align-items: center; \r\n  position: relative;\r\n}\r\n::v-deep .el-icon{\r\n  position: absolute;\r\n  right: 0px;\r\n}\r\n.more{\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 0px;\r\n}\r\n.hover-box{\r\n  position: absolute;\r\n  top: 20px ;\r\n  right: -20px;\r\n  width: 50px;\r\n  height: 26px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px; \r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n.report-hover{\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  color: #5d5d5d;\r\n}\r\n.commentDate {\r\n  color: #9b9b9b;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  margin-right: 70px;\r\n}\r\n.like-pic {\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 0.2rem;\r\n  cursor: pointer;\r\n}\r\n.like-count {\r\n  display: inline-block;\r\n  width: 45px;\r\n  height: 14px;\r\n  color: #2d2d2d;;\r\n  font-size: 14px;\r\n  line-height: 14px;\r\n  margin-right: 45px;\r\n}\r\n.commentBtn {\r\n  color: #005b82;\r\n  height: 21px;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  cursor: pointer; \r\n}\r\n.userinput2 {\r\n  width: 89%;\r\n  padding: 14px;\r\n  display: flex;\r\n  margin: 25px 0px 25px 63px;\r\n  align-items: center;\r\n}\r\n.userinput2 .input {\r\n  flex: 1;\r\n  position: relative;\r\n}\r\n.userinput2 .input > button {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  border-radius: 20px;\r\n  height: 30px;\r\n  padding: 0 15px;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  background-color: #9fa9ca;\r\n}\r\n.userinput2 .input > button:active {\r\n  box-shadow: 1px 1px 5px 5px #999 inset;\r\n}\r\n.leveltwoComment {\r\n  display: flex;  \r\n  align-items: flex-start;  \r\n  margin-bottom: 10px;\r\n  margin-left: 65px;\r\n}\r\n.userComment2 {\r\n  flex: 1; \r\n}\r\n\r\n.userName2 {\r\n  color: #393939;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n}\r\n.content2 {\r\n  color: #000;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  margin: 1rem 0 1.5rem;\r\n  line-height: normal;\r\n}\r\n\r\n.operationBar2 {\r\n  margin-bottom: 3px;\r\n  width: 75%;\r\n  display: flex; \r\n  align-items: center; \r\n  position: relative;\r\n}\r\n.commentDate2 {\r\n  color: #9b9b9b;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  margin-right: 70px;\r\n}\r\n.like-count2 {\r\n  display: inline-block;\r\n  width: 45px;\r\n  height: 12px;\r\n  color: #2d2d2d;;\r\n  font-size: 12px;\r\n  line-height: 12px;\r\n  margin-right: 90px;\r\n}\r\n.like-pic2 {\r\n  width: 16px;\r\n  height: 16px;\r\n  cursor: pointer;\r\n  margin-right: 0.2rem;\r\n}\r\n.commentBtn2 {\r\n  color: #005B82;;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  cursor: pointer;  \r\n}\r\n.cursor-pointer {\r\n    cursor: pointer;\r\n}\r\n.cursor-pointer:hover {\r\n    color: #9fa9ca;  \r\n}\r\n  \r\n  </style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}