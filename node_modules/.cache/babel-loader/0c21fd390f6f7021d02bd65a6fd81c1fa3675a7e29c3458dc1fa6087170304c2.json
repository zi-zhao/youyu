{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport axios from '@/utils/request';\nimport { ElMessage } from 'element-plus';\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\nexport default {\n  __name: 'AllCare',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const currentPage = ref(1);\n    const userlist = ref([]);\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getAllFocus(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n    const getAllFocus = async currentPage => {\n      try {\n        //const response = await axios.get('/users/subscribe?apifoxApiId=105505953');\n        const response = await axios.get('/users/subscribe', {\n          params: {\n            id: userId,\n            page: currentPage,\n            pazeSize: 10\n          }\n        });\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\n          const updatesAsync = response.data.data.records.map(async record => {\n            const newAvatar = await getUsersAvatarFromCOS(record.starId);\n            const verified = await fetchUserInformation(record.starId);\n            return {\n              ...record,\n              newAvatar,\n              verified,\n              focusStatus: 1\n            };\n          });\n          const updatedRecords = await Promise.all(updatesAsync);\n          userlist.value = [...userlist.value, ...updatedRecords];\n        } else if (response.data.code === 1 && response.data.data.records.length === 0) {\n          // ElMessage.info('已加载所有数据');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户的关注列表失败\");\n          ElMessage.error(\"获取用户的关注列表失败\");\n        }\n      } catch (error) {\n        console.log(error);\n        ElMessage.error('获取用户的关注列表失败');\n      }\n    };\n\n    //关注用户接口\n    async function followUser(user) {\n      try {\n        const response = await axios.put(`users/subscribe/${user.id}`);\n        user.focusStatus.value = user.focusStatus.value === 0 ? 1 : 0;\n        if (response.data && response.data.code === 1) {\n          console.log('用户已关注/用户已取消关注');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(response.data.msg || 'Unknown error');\n          ElMessage.error('关注/取消关注 失败了哦');\n        }\n      } catch (error) {\n        console.error('关注/取消关注 失败了哦', error.message);\n        ElMessage.error('关注/取消关注 失败了哦');\n      }\n    }\n\n    // 获取用户信息\n    const fetchUserInformation = async userId => {\n      try {\n        const response = await axios.get(`/users/${userId}`);\n        if (response.data.code === 1) {\n          return response.data.data.verified;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取用户信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户信息失败\", error);\n        ElMessage.error('获取用户信息失败');\n      }\n    };\n    onMounted(() => {\n      getAllFocus(currentPage.value);\n    });\n    const __returned__ = {\n      currentPage,\n      userlist,\n      userId,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getAllFocus,\n      followUser,\n      fetchUserInformation,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getUsersAvatarFromCOS() {\n        return getUsersAvatarFromCOS;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","ElMessage","getUsersAvatarFromCOS","currentPage","userlist","userId","localStorage","getItem","isLoading","load","value","getAllFocus","error","console","response","get","params","id","page","pazeSize","data","code","records","length","updatesAsync","map","record","newAvatar","starId","verified","fetchUserInformation","focusStatus","updatedRecords","Promise","all","msg","toString","log","followUser","user","put","message"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/Personalpage/last/AllCare.vue"],"sourcesContent":["<template>\r\n  <div class=\"alove\">\r\n    <div class=\"cbutton\">\r\n      <span class=\"tatitle\" style=\"font-size: 23px;\">我的关注</span>\r\n      <!-- <div style=\"display: flex;align-items: center;gap: 20px;\">\r\n        <span class=\"tatitle\">最近关注</span>\r\n        <span class=\"tatitle\">最近访问</span>\r\n      </div> -->\r\n      <span class=\"line2\"></span>\r\n    </div>\r\n    <div v-if=\"userlist || userlist.length !== 0\" class=\"container\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n      <div v-for=\"(user, index) in userlist\" :key=\"index\" class=\"care_box\">\r\n        <div class=\"asset\">\r\n          <img :src=\"user.newAvatar\" class=\"upic\">\r\n          <div class=\"show\">\r\n            <div class=\"user\">\r\n              <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                  <span class=\"uname\">{{ user.starUsername }}</span>\r\n                  <img v-if=\"user.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n              </div>\r\n            </div>\r\n            <div class=\"achieve\">\r\n              <span class=\"intro\">个人成就：</span>\r\n              <span class=\"intro\">{{ user.achievement }}</span>\r\n            </div>\r\n            <div class=\"achieve\">\r\n              <span class=\"intro\">个人简介：</span>\r\n              <span class=\"intro\">{{ user.description }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"carebutton\">\r\n            <el-button v-if=\"user.focusStatus\" type=\"primary\" round @click=\"followUser(user)\" class=\"focus\">已关注</el-button>\r\n            <el-button v-else type=\"primary\" round  @click=\"followUser(user)\" class=\"gofocus\">+关注</el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <el-empty \r\n        v-else\r\n        :image-size=\"200\" \r\n        description=\"您还没有关注其他人呢！\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from '@/utils/request';\r\nimport { ElMessage } from 'element-plus';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\n\r\nconst currentPage = ref(1);\r\nconst userlist = ref([]);\r\nconst userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\n\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n        if(currentPage.value === 1){\r\n            currentPage.value++;\r\n        }\r\n        await getAllFocus(currentPage.value);\r\n        currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\nconst getAllFocus = async(currentPage)=>{\r\n  try{\r\n    //const response = await axios.get('/users/subscribe?apifoxApiId=105505953');\r\n    const response = await axios.get('/users/subscribe', {\r\n        params: {\r\n            id:userId,\r\n            page:currentPage,\r\n            pazeSize:10,\r\n        }\r\n    });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n      const updatesAsync = response.data.data.records.map(async (record) => {\r\n        const newAvatar = await getUsersAvatarFromCOS(record.starId);\r\n        const verified = await fetchUserInformation(record.starId);\r\n        return {\r\n          ...record,\r\n          newAvatar,\r\n          verified,\r\n          focusStatus: 1\r\n        };\r\n      });\r\n      const updatedRecords = await Promise.all(updatesAsync);\r\n      userlist.value = [...userlist.value, ...updatedRecords];\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n      // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户的关注列表失败\");\r\n        ElMessage.error(\"获取用户的关注列表失败\");\r\n    }\r\n  }\r\n  catch(error){\r\n      console.log(error)\r\n      ElMessage.error('获取用户的关注列表失败');\r\n  }\r\n}\r\n\r\n\r\n//关注用户接口\r\nasync function followUser(user) {\r\n  try {\r\n    const response = await axios.put(`users/subscribe/${user.id}`);\r\n    user.focusStatus.value = user.focusStatus.value === 0 ? 1 : 0;\r\n    if (response.data && response.data.code === 1) {\r\n      console.log('用户已关注/用户已取消关注');\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error(response.data.msg || 'Unknown error');\r\n      ElMessage.error('关注/取消关注 失败了哦');\r\n    }\r\n  } catch (error) {\r\n    console.error('关注/取消关注 失败了哦', error.message);\r\n    ElMessage.error('关注/取消关注 失败了哦');\r\n  }\r\n}\r\n\r\n\r\n  // 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\nonMounted(()=>{\r\n  getAllFocus(currentPage.value);\r\n});\r\n\r\n\r\n\r\n  </script>\r\n  \r\n\r\n<style scoped>\r\n.alove{\r\n  width: 100%;\r\n}\r\n.cbutton{\r\n  position: relative;\r\n  width: 98%;\r\n  padding: 1%;\r\n  right: 0px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.tatitle{\r\n  color: #000; \r\n  text-align: center;\r\n  line-height: 1.6;\r\n}\r\n.line2 {\r\n  position: absolute;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 1px;\r\n  background: rgb(212, 212, 212);\r\n}\r\n.asset{\r\n  margin: 8px 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.container{\r\n  position: relative;\r\n  height: 80vh;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n}\r\n.care_box{\r\n  margin: 20px 0px;\r\n  height: 81px;\r\n  padding: 5px 30px;\r\n}\r\n.upic{\r\n  width: 60px;\r\n  height: 60px;\r\n  flex-shrink: 0;\r\n  border-radius: 60px;\r\n}\r\n.show{\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  width: 78%;\r\n  margin-top: 10px;\r\n}\r\n.uname{\r\n  color: #000;\r\n  text-align: center;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  line-height: 1.6; \r\n}\r\n.intro{\r\n  color: #000;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  line-height: 1.6; \r\n}\r\n.user{\r\n  display: flex;\r\n  align-items: flex-end;\r\n  gap: 4px;\r\n}\r\n.achieve{\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n.carebutton .el-button{\r\n  padding: 5px 15px;\r\n  border: none;\r\n  border: 1px solid #D9DCE1;\r\n}\r\n.focus{\r\n  background-color: #E5E9EF;\r\n  color: #6D758B;\r\n}\r\n.gofocus{\r\n  background-color: #fff;\r\n  color: #6D758B;\r\n}\r\n/* 调整滚动条宽度和颜色 */\r\n::-webkit-scrollbar {\r\n    width: 6px; /* 增加纵向滚动条的宽度 */\r\n    height: 8px; /* 增加横向滚动条的高度 */\r\n    background: transparent;\r\n}\r\n\r\n/* 定义滚动条轨道，设置为透明 */\r\n::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 8px rgba(0, 0, 0, 0); /* 内阴影 */\r\n    background: transparent; /* 将轨道背景设置为透明 */\r\n}\r\n\r\n/* 定义滑块，设置为浅灰色并增加内阴影 */\r\n::-webkit-scrollbar-thumb {\r\n    box-shadow: inset 0 0 8px rgba(145, 145, 145, 0.3); /* 添加淡灰色内阴影 */\r\n    background-color: #e2e2e2; /* 滑块的颜色改为浅灰色 */\r\n    border-radius: 10px; /* 保持圆角不变 */\r\n}\r\n/* 当鼠标悬停在滚动条滑块上时改变滑块的颜色 */\r\n::-webkit-scrollbar-thumb:hover {\r\n    background: #c8c8c8;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}