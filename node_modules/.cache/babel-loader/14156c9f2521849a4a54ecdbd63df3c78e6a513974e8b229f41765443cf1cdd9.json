{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { Check, Close } from '@element-plus/icons-vue';\nimport axios from '../../utils/request';\nimport { ElMessage } from 'element-plus';\nimport { getFistQuestionCOSPermission } from '@/utils/cosService';\nimport { useRoute, useRouter } from 'vue-router';\nimport { compressImage } from '@/utils/fileService';\nexport default {\n  __name: 'GoQuestion',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const route = useRoute();\n    const userId = parseInt(route.params.id, 10); //从路径中获取被咨询的用户ID\n    const textarea = ref('');\n    const text = ref(0);\n    // const value1 = ref(false);\n    const answererInfo = ref({});\n    const questionId = ref();\n    const fileName = ref();\n    const fileInput = ref(null);\n    const selectedImages = ref([]);\n    const imagePreviews = ref([]);\n    const fileSize = ref();\n\n    // 当点击按钮时触发文件输入框\n    const triggerImageUpload = () => {\n      if (selectedImages.value.length < 2) {\n        fileInput.value.click();\n      } else {\n        ElMessage.error('只能提交一张照片');\n      }\n    };\n\n    // 当文件选择后处理图片\n    const handleImage = async event => {\n      const file = event.target.files[0];\n      fileSize.value = file.size; // 获取并设置文件大小\n      if (file && selectedImages.value.length < 2) {\n        const timestamp = new Date().getTime(); // 获取当前时间戳\n        fileName.value = `${timestamp}-${file.name}`; // 在文件名前加时间戳\n        const compressedFile = await compressImage(file);\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          imagePreviews.value.push(e.target.result); // 添加DataURL到imagePreviews\n          selectedImages.value.push(compressedFile); // 添加文件对象到selectedImages\n        };\n        reader.readAsDataURL(compressedFile);\n      }\n    };\n\n    //删除图片\n    const removeImage = index => {\n      selectedImages.value.splice(index, 1);\n      imagePreviews.value.splice(index, 1); // 也删除对应的预览\n    };\n\n    // const getValue = computed(() => {\n    //   return value1.value ? 1 : 0;\n    // });\n\n    const uploadImages = async () => {\n      await getFistQuestionCOSPermission(selectedImages.value[0], fileName.value, questionId.value);\n    };\n    async function askQuestions() {\n      const data = {\n        answererId: Number(userId),\n        questionContent: textarea.value,\n        moneyCount: Number(text.value),\n        type: 0,\n        // anonymity:Number(getValue.value),\n        anonymity: 0,\n        answererUsername: answererInfo.value.username\n      };\n      try {\n        const response = await axios.post(`/answer`, data);\n        if (response.data.code === 1) {\n          questionId.value = response.data.data;\n          if (selectedImages.value.length > 0) {\n            await uploadImages();\n          }\n          ElMessage.success('提问成功');\n          router.push('/DefaultPresentation');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('问题发送失败', response.data.msg || 'Unknown error');\n          ElMessage.error('问题发送失败');\n        }\n      } catch (error) {\n        console.error('问题发送失败', error.message);\n        ElMessage.error('问题发送失败');\n      }\n    }\n\n    //获取答主具体信息\n    async function getAnswererInfo() {\n      try {\n        const response = await axios.get(`/answer/${userId}`);\n        if (response.data.code === 1) {\n          answererInfo.value = response.data.data;\n        } else {\n          console.error(\"获取答主具体信息失败\");\n          ElMessage.error('获取答主具体信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取答主具体信息失败\", error);\n        ElMessage.error('获取答主具体信息失败');\n      }\n    }\n    onMounted(() => {\n      getAnswererInfo();\n    });\n    const __returned__ = {\n      router,\n      route,\n      userId,\n      textarea,\n      text,\n      answererInfo,\n      questionId,\n      fileName,\n      fileInput,\n      selectedImages,\n      imagePreviews,\n      fileSize,\n      triggerImageUpload,\n      handleImage,\n      removeImage,\n      uploadImages,\n      askQuestions,\n      getAnswererInfo,\n      ref,\n      computed,\n      onMounted,\n      get Check() {\n        return Check;\n      },\n      get Close() {\n        return Close;\n      },\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getFistQuestionCOSPermission() {\n        return getFistQuestionCOSPermission;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get compressImage() {\n        return compressImage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","Check","Close","axios","ElMessage","getFistQuestionCOSPermission","useRoute","useRouter","compressImage","router","route","userId","parseInt","params","id","textarea","text","answererInfo","questionId","fileName","fileInput","selectedImages","imagePreviews","fileSize","triggerImageUpload","value","length","click","error","handleImage","event","file","target","files","size","timestamp","Date","getTime","name","compressedFile","reader","FileReader","onload","e","push","result","readAsDataURL","removeImage","index","splice","uploadImages","askQuestions","data","answererId","Number","questionContent","moneyCount","type","anonymity","answererUsername","username","response","post","code","success","msg","toString","console","message","getAnswererInfo","get"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/components/GoQuestion.vue"],"sourcesContent":["<!-- 有两种方式跳转至此页面：\r\n1、问答中心——答主推荐——点击咨询——咨询服务——去咨询——跳转至第一次提问页面\r\n2、其他人的个人主页——去提问——跳转至第一次提问页面 -->\r\n<template>\r\n    <div class=\"bgc_box\">\r\n        <div class=\"large_box\">\r\n            <div class=\"top\">\r\n                <div class=\"one\">\r\n                    <span>向</span>\r\n                    <div style=\"display: flex;align-items: center;\">\r\n                        <span class=\"text1\">{{ answererInfo.username }}</span>\r\n                        <!-- <img src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin: 0 10px 0 -9px;\" alt=\"\"> -->\r\n                    </div>\r\n                    <span>发起提问</span>\r\n                </div>\r\n                <div class=\"btn-pc\" @click=\"askQuestions\">\r\n                    提问\r\n                </div>\r\n            </div>\r\n            <div class=\"main_box\">\r\n                <!-- <div class=\"pay\">\r\n                    <span>支付鱼饵数:</span>\r\n                    <input v-model=\"text\" type=\"text\" placeholder=\"请输入鱼饵\">\r\n                </div> -->\r\n                <div class=\"desc\">\r\n                    <el-input\r\n                        v-model=\"textarea\"\r\n                        maxlength=\"300\"\r\n                        placeholder=\"阐述一下你的问题吧…\"\r\n                        show-word-limit=\"20\"\r\n                        type=\"textarea\"\r\n                        size=\"large\"\r\n                        resize=\"none\"\r\n                        class=\"desc_input\"\r\n                    />\r\n                </div>\r\n                <div class=\"uploadpic\">\r\n                    <input type=\"file\" ref=\"fileInput\" accept=\"image/*\" style=\"display: none;\" @change=\"handleImage\" />\r\n                    <!-- 如果没有图片预览，则显示上传提示 -->\r\n                    <div v-if=\"imagePreviews.length === 0\" class=\"tpic\" >\r\n                        <img @click=\"triggerImageUpload\"  class=\"add\" src=\"@/assets/QACenter/QuestionAddPic.svg\" alt=\"\" />\r\n                    </div>\r\n                    \r\n                    <!-- 如果有图片预览，则全屏显示图片 -->\r\n                    <div  class=\"pic-contain \">\r\n                        <div v-for=\"(imagePreview, index) in imagePreviews\" :key=\"index\" class=\"spic\" :style=\"{ backgroundImage: `url(${imagePreview})` }\">\r\n                            <el-icon class=\"delete-btn\" @click=\"removeImage(index)\"><CircleCloseFilled /></el-icon>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"anonymous\">\r\n                    <div class=\"left\">\r\n                        <div class=\"an\">\r\n                            匿名咨询<img src=\"../../assets/CircleQuestionmark.svg\" alt=\"\">\r\n                        </div>\r\n                        <span v-if=\"value1\" class=\"text2\">已启用匿名咨询</span>\r\n                        <span v-else class=\"text2\">启用后将对答主匿名</span>\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <el-switch\r\n                            v-model=\"value1\"\r\n                            class=\"mt-2\"\r\n                            style=\"margin-left: 24px\"\r\n                            inline-prompt\r\n                            :active-icon=\"Check\"\r\n                            :inactive-icon=\"Close\"\r\n                        />\r\n                    </div>\r\n                </div> -->\r\n                <div style=\"width: 100%;display: flex;justify-content: flex-end;\">\r\n                    <div class=\"btn-phone\" @click=\"askQuestions\">\r\n                        提问\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref,computed,onMounted } from 'vue'\r\nimport { Check, Close } from '@element-plus/icons-vue'\r\nimport axios from '../../utils/request';\r\nimport { ElMessage } from 'element-plus';\r\nimport {getFistQuestionCOSPermission} from '@/utils/cosService';\r\nimport { useRoute,useRouter } from 'vue-router';\r\nimport {compressImage} from '@/utils/fileService';\r\n\r\nconst router = useRouter()\r\nconst route = useRoute ();\r\nconst userId = parseInt(route.params.id,10);//从路径中获取被咨询的用户ID\r\nconst textarea = ref('');\r\nconst text = ref(0);\r\n// const value1 = ref(false);\r\nconst answererInfo = ref({});\r\nconst questionId =ref();\r\n\r\nconst fileName = ref();\r\nconst fileInput = ref(null);\r\nconst selectedImages = ref([]);\r\nconst imagePreviews = ref([]);\r\nconst fileSize = ref();\r\n\r\n\r\n// 当点击按钮时触发文件输入框\r\nconst triggerImageUpload = () => {\r\n  if (selectedImages.value.length < 2) {\r\n    fileInput.value.click();\r\n  } else {\r\n    ElMessage.error('只能提交一张照片');\r\n  }\r\n};\r\n\r\n// 当文件选择后处理图片\r\nconst handleImage = async (event) => {\r\n  const file = event.target.files[0];\r\n  fileSize.value = file.size;    // 获取并设置文件大小\r\n  if (file && selectedImages.value.length < 2) {\r\n    const timestamp = new Date().getTime(); // 获取当前时间戳\r\n    fileName.value = `${timestamp}-${file.name}`; // 在文件名前加时间戳\r\n    const compressedFile = await compressImage(file);\r\n    const reader = new FileReader();\r\n    reader.onload = function(e) {\r\n      imagePreviews.value.push(e.target.result);  // 添加DataURL到imagePreviews\r\n      selectedImages.value.push(compressedFile);  // 添加文件对象到selectedImages\r\n    };\r\n    reader.readAsDataURL(compressedFile);\r\n  }\r\n};\r\n\r\n//删除图片\r\nconst removeImage = (index) => {\r\n    selectedImages.value.splice(index, 1);\r\n    imagePreviews.value.splice(index, 1);  // 也删除对应的预览\r\n};\r\n\r\n// const getValue = computed(() => {\r\n//   return value1.value ? 1 : 0;\r\n// });\r\n\r\nconst uploadImages = async () => {\r\n    await getFistQuestionCOSPermission(selectedImages.value[0],fileName.value,questionId.value);\r\n};\r\n\r\nasync function askQuestions() {\r\n    const data ={\r\n        answererId:Number(userId),\r\n        questionContent:textarea.value,\r\n        moneyCount:Number(text.value),\r\n        type:0,\r\n        // anonymity:Number(getValue.value),\r\n        anonymity:0,\r\n        answererUsername:answererInfo.value.username,\r\n    }\r\n    try {\r\n        const response = await axios.post(`/answer`,data)\r\n        if (response.data.code === 1) {\r\n            questionId.value = response.data.data;\r\n            if(selectedImages.value.length > 0){\r\n                await uploadImages();\r\n            }\r\n            ElMessage.success('提问成功');\r\n            router.push('/DefaultPresentation');\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            console.error('问题发送失败', response.data.msg || 'Unknown error');\r\n            ElMessage.error('问题发送失败')\r\n        }\r\n    } catch (error) {\r\n      console.error('问题发送失败', error.message);\r\n      ElMessage.error('问题发送失败')\r\n    }\r\n}\r\n\r\n\r\n//获取答主具体信息\r\nasync function getAnswererInfo() {\r\n  try{\r\n    const response = await axios.get(`/answer/${userId}`)\r\n    if(response.data.code === 1){\r\n        answererInfo.value = response.data.data;\r\n    }else{\r\n        console.error(\"获取答主具体信息失败\");\r\n        ElMessage.error('获取答主具体信息失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取答主具体信息失败\", error); \r\n    ElMessage.error('获取答主具体信息失败');\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n    getAnswererInfo();\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.bgc_box{\r\n    width: 100%;\r\n    background: #F8F8F8;\r\n}\r\n.large_box{\r\n    width: 1020px;\r\n    height: 97vh;\r\n    margin: 0px auto;\r\n    padding: 0px 40px;\r\n    border-radius: 16px;\r\n    background: #FFF;\r\n}\r\n.top{\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    padding-bottom: 4px;\r\n    height: 50px;\r\n    gap: 8px;\r\n    position: relative;\r\n}\r\n.text1{\r\n    color: #3F87E1;\r\n    margin: 0px 10px;\r\n    position: relative;\r\n}\r\n.one{\r\n    display: flex;\r\n}\r\n.one span{\r\n    font-weight: 700;\r\n}\r\n.top span{\r\n    font-size: 20px;\r\n}\r\n.btn-pc,\r\n.btn-phone{\r\n    width: 32px;\r\n    height: 19px;\r\n    padding: 8px 20px;\r\n    border-radius: 16px;\r\n    background: #9FA9CA;\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 60px;\r\n    top: 8px;\r\n    cursor: pointer;\r\n}\r\n.main_box{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n}\r\n.pay{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 15px;\r\n    margin-top: 30px;\r\n}\r\n.pay input{\r\n    width: 148px;\r\n    height: 21px;\r\n    padding: 4px 8px;\r\n    border-radius: 8px;\r\n    background: #EDEDED;\r\n    border: 1px solid #EDEDED;\r\n}\r\n.pay input:focus{\r\n    outline: none;\r\n}\r\n::v-deep .el-textarea__inner{\r\n    width: 100%;\r\n    height: 220px;\r\n    border-radius: 12px;\r\n    background: #fbfbfb;\r\n    padding: 8px 12px 12px 12px;\r\n}\r\n::v-deep .el-textarea .el-input__count{\r\n    bottom: 9px;\r\n    right: 33px;\r\n    background-color: #fbfbfb;\r\n}\r\n.uploadpic{\r\n    width: 100px;\r\n    height: 100px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 4px;\r\n    border: 1px solid #DCDFE6;\r\n    background: #fbfbfb;\r\n    cursor: pointer;\r\n}\r\n.spic{\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  border: 1px solid #bbbbbb;\r\n  border-radius: 4px;\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n.pic-contain{\r\n    position: relative;\r\n}\r\n.delete-btn {\r\n    position: absolute;\r\n    top: 2px;\r\n    right:1px;\r\n    cursor: pointer;\r\n}\r\n.add{\r\n    width: 35px;\r\n    height: 35px;\r\n}\r\n.anonymous{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 45px;\r\n}\r\n.left{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    width: 108px;\r\n}\r\n.an{\r\n    font-size: 14px;\r\n}\r\n.an img{\r\n    width: 12px;\r\n    height: 12px;\r\n    margin-left: 5px;\r\n}\r\n.text2{\r\n    color: #7E7E7E;\r\n    font-size: 12px;\r\n}\r\n.btn-phone{\r\n    display: none;\r\n}\r\n@media (max-width: 768px) {\r\n    .large_box{\r\n        width: 90%;\r\n        padding: 0 5%;\r\n    }\r\n    .btn-pc{\r\n        display: none ;\r\n    }\r\n    .btn-phone{\r\n        display: flex;\r\n        position: initial;\r\n        margin-bottom: 1rem;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}