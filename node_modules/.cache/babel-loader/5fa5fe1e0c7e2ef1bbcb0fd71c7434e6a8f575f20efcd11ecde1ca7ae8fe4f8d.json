{"ast":null,"code":"import { reactive, ref, computed, nextTick, watch, onMounted } from 'vue';\nimport { isArray, isFunction, isObject } from '@vue/shared';\nimport { isNil, debounce, isEqual, get } from 'lodash-unified';\nimport { useResizeObserver } from '@vueuse/core';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../form/index.mjs';\nimport { ArrowUp } from '@element-plus/icons-vue';\nimport { useAllowCreate } from './useAllowCreate.mjs';\nimport { useInput } from './useInput.mjs';\nimport { useProps } from './useProps.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormItem } from '../../form/src/hooks/use-form-item.mjs';\nimport { ValidateComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { escapeStringRegexp } from '../../../utils/strings.mjs';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nconst DEFAULT_INPUT_PLACEHOLDER = \"\";\nconst MINIMUM_INPUT_WIDTH = 11;\nconst TAG_BASE_WIDTH = {\n  larget: 51,\n  default: 42,\n  small: 33\n};\nconst useSelect = (props, emit) => {\n  const {\n    t\n  } = useLocale();\n  const nsSelectV2 = useNamespace(\"select-v2\");\n  const nsInput = useNamespace(\"input\");\n  const {\n    form: elForm,\n    formItem: elFormItem\n  } = useFormItem();\n  const {\n    getLabel,\n    getValue,\n    getDisabled,\n    getOptions\n  } = useProps(props);\n  const states = reactive({\n    inputValue: DEFAULT_INPUT_PLACEHOLDER,\n    displayInputValue: DEFAULT_INPUT_PLACEHOLDER,\n    calculatedWidth: 0,\n    cachedPlaceholder: \"\",\n    cachedOptions: [],\n    createdOptions: [],\n    createdLabel: \"\",\n    createdSelected: false,\n    currentPlaceholder: \"\",\n    hoveringIndex: -1,\n    comboBoxHovering: false,\n    isOnComposition: false,\n    isSilentBlur: false,\n    isComposing: false,\n    inputLength: 20,\n    selectWidth: 200,\n    initialInputHeight: 0,\n    previousQuery: null,\n    previousValue: void 0,\n    query: \"\",\n    selectedLabel: \"\",\n    softFocus: false,\n    tagInMultiLine: false\n  });\n  const selectedIndex = ref(-1);\n  const popperSize = ref(-1);\n  const controlRef = ref(null);\n  const inputRef = ref(null);\n  const menuRef = ref(null);\n  const popper = ref(null);\n  const selectRef = ref(null);\n  const selectionRef = ref(null);\n  const calculatorRef = ref(null);\n  const expanded = ref(false);\n  const selectDisabled = computed(() => props.disabled || (elForm == null ? void 0 : elForm.disabled));\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * 34;\n    return totalHeight > props.height ? props.height : totalHeight;\n  });\n  const hasModelValue = computed(() => {\n    return !isNil(props.modelValue);\n  });\n  const showClearBtn = computed(() => {\n    const hasValue = props.multiple ? Array.isArray(props.modelValue) && props.modelValue.length > 0 : hasModelValue.value;\n    const criteria = props.clearable && !selectDisabled.value && states.comboBoxHovering && hasValue;\n    return criteria;\n  });\n  const iconComponent = computed(() => props.remote && props.filterable ? \"\" : ArrowUp);\n  const iconReverse = computed(() => iconComponent.value && nsSelectV2.is(\"reverse\", expanded.value));\n  const validateState = computed(() => (elFormItem == null ? void 0 : elFormItem.validateState) || \"\");\n  const validateIcon = computed(() => ValidateComponentsMap[validateState.value]);\n  const debounce$1 = computed(() => props.remote ? 300 : 0);\n  const emptyText = computed(() => {\n    const options = filteredOptions.value;\n    if (props.loading) {\n      return props.loadingText || t(\"el.select.loading\");\n    } else {\n      if (props.remote && states.inputValue === \"\" && options.length === 0) return false;\n      if (props.filterable && states.inputValue && options.length > 0) {\n        return props.noMatchText || t(\"el.select.noMatch\");\n      }\n      if (options.length === 0) {\n        return props.noDataText || t(\"el.select.noData\");\n      }\n    }\n    return null;\n  });\n  const filteredOptions = computed(() => {\n    const isValidOption = o => {\n      const query = states.inputValue;\n      const regexp = new RegExp(escapeStringRegexp(query), \"i\");\n      const containsQueryString = query ? regexp.test(getLabel(o) || \"\") : true;\n      return containsQueryString;\n    };\n    if (props.loading) {\n      return [];\n    }\n    return [...props.options, ...states.createdOptions].reduce((all, item) => {\n      const options = getOptions(item);\n      if (isArray(options)) {\n        const filtered = options.filter(isValidOption);\n        if (filtered.length > 0) {\n          all.push({\n            label: getLabel(item),\n            isTitle: true,\n            type: \"Group\"\n          }, ...filtered, {\n            type: \"Group\"\n          });\n        }\n      } else if (props.remote || isValidOption(item)) {\n        all.push(item);\n      }\n      return all;\n    }, []);\n  });\n  const filteredOptionsValueMap = computed(() => {\n    const valueMap = /* @__PURE__ */new Map();\n    filteredOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), {\n        option,\n        index\n      });\n    });\n    return valueMap;\n  });\n  const optionsAllDisabled = computed(() => filteredOptions.value.every(option => getDisabled(option)));\n  const selectSize = useFormSize();\n  const collapseTagSize = computed(() => selectSize.value === \"small\" ? \"small\" : \"default\");\n  const tagMaxWidth = computed(() => {\n    const select = selectionRef.value;\n    const size = collapseTagSize.value || \"default\";\n    const paddingLeft = select ? Number.parseInt(getComputedStyle(select).paddingLeft) : 0;\n    const paddingRight = select ? Number.parseInt(getComputedStyle(select).paddingRight) : 0;\n    return states.selectWidth - paddingRight - paddingLeft - TAG_BASE_WIDTH[size];\n  });\n  const calculatePopperSize = () => {\n    var _a;\n    popperSize.value = ((_a = selectRef.value) == null ? void 0 : _a.offsetWidth) || 200;\n  };\n  const inputWrapperStyle = computed(() => {\n    return {\n      width: `${states.calculatedWidth === 0 ? MINIMUM_INPUT_WIDTH : Math.ceil(states.calculatedWidth) + MINIMUM_INPUT_WIDTH}px`\n    };\n  });\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.displayInputValue;\n    }\n    return props.filterable ? states.displayInputValue.length === 0 : true;\n  });\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder || t(\"el.select.placeholder\");\n    return props.multiple || isNil(props.modelValue) ? _placeholder : states.selectedLabel;\n  });\n  const popperRef = computed(() => {\n    var _a, _b;\n    return (_b = (_a = popper.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n  });\n  const indexRef = computed(() => {\n    if (props.multiple) {\n      const len = props.modelValue.length;\n      if (props.modelValue.length > 0 && filteredOptionsValueMap.value.has(props.modelValue[len - 1])) {\n        const {\n          index\n        } = filteredOptionsValueMap.value.get(props.modelValue[len - 1]);\n        return index;\n      }\n    } else {\n      if (props.modelValue && filteredOptionsValueMap.value.has(props.modelValue)) {\n        const {\n          index\n        } = filteredOptionsValueMap.value.get(props.modelValue);\n        return index;\n      }\n    }\n    return -1;\n  });\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && emptyText.value !== false;\n    },\n    set(val) {\n      expanded.value = val;\n    }\n  });\n  const showTagList = computed(() => states.cachedOptions.slice(0, props.maxCollapseTags));\n  const collapseTagList = computed(() => states.cachedOptions.slice(props.maxCollapseTags));\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption\n  } = useAllowCreate(props, states);\n  const {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd\n  } = useInput(e => onInput(e));\n  const focusAndUpdatePopup = () => {\n    var _a, _b, _c;\n    (_b = (_a = inputRef.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    (_c = popper.value) == null ? void 0 : _c.updatePopper();\n  };\n  const toggleMenu = () => {\n    if (props.automaticDropdown) return;\n    if (!selectDisabled.value) {\n      if (states.isComposing) states.softFocus = true;\n      return nextTick(() => {\n        var _a, _b;\n        expanded.value = !expanded.value;\n        (_b = (_a = inputRef.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n      });\n    }\n  };\n  const onInputChange = () => {\n    if (props.filterable && states.inputValue !== states.selectedLabel) {\n      states.query = states.selectedLabel;\n    }\n    handleQueryChange(states.inputValue);\n    return nextTick(() => {\n      createNewOption(states.inputValue);\n    });\n  };\n  const debouncedOnInputChange = debounce(onInputChange, debounce$1.value);\n  const handleQueryChange = val => {\n    if (states.previousQuery === val) {\n      return;\n    }\n    states.previousQuery = val;\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val);\n    } else if (props.filterable && props.remote && isFunction(props.remoteMethod)) {\n      props.remoteMethod(val);\n    }\n  };\n  const emitChange = val => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val);\n    }\n  };\n  const update = val => {\n    emit(UPDATE_MODEL_EVENT, val);\n    emitChange(val);\n    states.previousValue = String(val);\n  };\n  const getValueIndex = (arr = [], value) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value);\n    }\n    const valueKey = props.valueKey;\n    let index = -1;\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i;\n        return true;\n      }\n      return false;\n    });\n    return index;\n  };\n  const getValueKey = item => {\n    return isObject(item) ? get(item, props.valueKey) : item;\n  };\n  const resetInputHeight = () => {\n    return nextTick(() => {\n      var _a, _b;\n      if (!inputRef.value) return;\n      const selection = selectionRef.value;\n      selectRef.value.height = selection.offsetHeight;\n      if (expanded.value && emptyText.value !== false) {\n        (_b = (_a = popper.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n      }\n    });\n  };\n  const handleResize = () => {\n    var _a, _b;\n    resetInputWidth();\n    calculatePopperSize();\n    (_b = (_a = popper.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n    if (props.multiple) {\n      return resetInputHeight();\n    }\n  };\n  const resetInputWidth = () => {\n    const select = selectionRef.value;\n    if (select) {\n      states.selectWidth = select.getBoundingClientRect().width;\n    }\n  };\n  const onSelect = (option, idx, byClick = true) => {\n    var _a, _b;\n    if (props.multiple) {\n      let selectedOptions = props.modelValue.slice();\n      const index = getValueIndex(selectedOptions, getValue(option));\n      if (index > -1) {\n        selectedOptions = [...selectedOptions.slice(0, index), ...selectedOptions.slice(index + 1)];\n        states.cachedOptions.splice(index, 1);\n        removeNewOption(option);\n      } else if (props.multipleLimit <= 0 || selectedOptions.length < props.multipleLimit) {\n        selectedOptions = [...selectedOptions, getValue(option)];\n        states.cachedOptions.push(option);\n        selectNewOption(option);\n        updateHoveringIndex(idx);\n      }\n      update(selectedOptions);\n      if (option.created) {\n        states.query = \"\";\n        handleQueryChange(\"\");\n        states.inputLength = 20;\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        (_b = (_a = inputRef.value).focus) == null ? void 0 : _b.call(_a);\n        onUpdateInputValue(\"\");\n      }\n      if (props.filterable) {\n        states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;\n      }\n      resetInputHeight();\n      setSoftFocus();\n    } else {\n      selectedIndex.value = idx;\n      states.selectedLabel = getLabel(option);\n      update(getValue(option));\n      expanded.value = false;\n      states.isComposing = false;\n      states.isSilentBlur = byClick;\n      selectNewOption(option);\n      if (!option.created) {\n        clearAllNewOption();\n      }\n      updateHoveringIndex(idx);\n    }\n  };\n  const deleteTag = (event, option) => {\n    let selectedOptions = props.modelValue.slice();\n    const index = getValueIndex(selectedOptions, getValue(option));\n    if (index > -1 && !selectDisabled.value) {\n      selectedOptions = [...props.modelValue.slice(0, index), ...props.modelValue.slice(index + 1)];\n      states.cachedOptions.splice(index, 1);\n      update(selectedOptions);\n      emit(\"remove-tag\", getValue(option));\n      states.softFocus = true;\n      removeNewOption(option);\n      return nextTick(focusAndUpdatePopup);\n    }\n    event.stopPropagation();\n  };\n  const handleFocus = event => {\n    const focused = states.isComposing;\n    states.isComposing = true;\n    if (!states.softFocus) {\n      if (!focused) emit(\"focus\", event);\n    } else {\n      states.softFocus = false;\n    }\n  };\n  const handleBlur = event => {\n    states.softFocus = false;\n    return nextTick(() => {\n      var _a, _b;\n      (_b = (_a = inputRef.value) == null ? void 0 : _a.blur) == null ? void 0 : _b.call(_a);\n      if (calculatorRef.value) {\n        states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;\n      }\n      if (states.isSilentBlur) {\n        states.isSilentBlur = false;\n      } else {\n        if (states.isComposing) {\n          emit(\"blur\", event);\n        }\n      }\n      states.isComposing = false;\n    });\n  };\n  const handleEsc = () => {\n    if (states.displayInputValue.length > 0) {\n      onUpdateInputValue(\"\");\n    } else {\n      expanded.value = false;\n    }\n  };\n  const handleDel = e => {\n    if (states.displayInputValue.length === 0) {\n      e.preventDefault();\n      const selected = props.modelValue.slice();\n      selected.pop();\n      removeNewOption(states.cachedOptions.pop());\n      update(selected);\n    }\n  };\n  const handleClear = () => {\n    let emptyValue;\n    if (isArray(props.modelValue)) {\n      emptyValue = [];\n    } else {\n      emptyValue = void 0;\n    }\n    states.softFocus = true;\n    if (props.multiple) {\n      states.cachedOptions = [];\n    } else {\n      states.selectedLabel = \"\";\n    }\n    expanded.value = false;\n    update(emptyValue);\n    emit(\"clear\");\n    clearAllNewOption();\n    return nextTick(focusAndUpdatePopup);\n  };\n  const onUpdateInputValue = val => {\n    states.displayInputValue = val;\n    states.inputValue = val;\n  };\n  const onKeyboardNavigate = (direction, hoveringIndex = void 0) => {\n    const options = filteredOptions.value;\n    if (![\"forward\", \"backward\"].includes(direction) || selectDisabled.value || options.length <= 0 || optionsAllDisabled.value) {\n      return;\n    }\n    if (!expanded.value) {\n      return toggleMenu();\n    }\n    if (hoveringIndex === void 0) {\n      hoveringIndex = states.hoveringIndex;\n    }\n    let newIndex = -1;\n    if (direction === \"forward\") {\n      newIndex = hoveringIndex + 1;\n      if (newIndex >= options.length) {\n        newIndex = 0;\n      }\n    } else if (direction === \"backward\") {\n      newIndex = hoveringIndex - 1;\n      if (newIndex < 0 || newIndex >= options.length) {\n        newIndex = options.length - 1;\n      }\n    }\n    const option = options[newIndex];\n    if (getDisabled(option) || option.type === \"Group\") {\n      return onKeyboardNavigate(direction, newIndex);\n    } else {\n      updateHoveringIndex(newIndex);\n      scrollToItem(newIndex);\n    }\n  };\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu();\n    } else if (~states.hoveringIndex && filteredOptions.value[states.hoveringIndex]) {\n      onSelect(filteredOptions.value[states.hoveringIndex], states.hoveringIndex, false);\n    }\n  };\n  const updateHoveringIndex = idx => {\n    states.hoveringIndex = idx;\n  };\n  const resetHoveringIndex = () => {\n    states.hoveringIndex = -1;\n  };\n  const setSoftFocus = () => {\n    var _a;\n    const _input = inputRef.value;\n    if (_input) {\n      (_a = _input.focus) == null ? void 0 : _a.call(_input);\n    }\n  };\n  const onInput = event => {\n    const value = event.target.value;\n    onUpdateInputValue(value);\n    if (states.displayInputValue.length > 0 && !expanded.value) {\n      expanded.value = true;\n    }\n    states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;\n    if (props.multiple) {\n      resetInputHeight();\n    }\n    if (props.remote) {\n      debouncedOnInputChange();\n    } else {\n      return onInputChange();\n    }\n  };\n  const handleClickOutside = () => {\n    expanded.value = false;\n    return handleBlur();\n  };\n  const handleMenuEnter = () => {\n    states.inputValue = states.displayInputValue;\n    return nextTick(() => {\n      if (~indexRef.value) {\n        updateHoveringIndex(indexRef.value);\n        scrollToItem(states.hoveringIndex);\n      }\n    });\n  };\n  const scrollToItem = index => {\n    menuRef.value.scrollToItem(index);\n  };\n  const initStates = () => {\n    resetHoveringIndex();\n    if (props.multiple) {\n      if (props.modelValue.length > 0) {\n        let initHovering = false;\n        states.cachedOptions.length = 0;\n        states.previousValue = props.modelValue.toString();\n        for (const value of props.modelValue) {\n          const selectValue = getValueKey(value);\n          if (filteredOptionsValueMap.value.has(selectValue)) {\n            const {\n              index,\n              option\n            } = filteredOptionsValueMap.value.get(selectValue);\n            states.cachedOptions.push(option);\n            if (!initHovering) {\n              updateHoveringIndex(index);\n            }\n            initHovering = true;\n          }\n        }\n      } else {\n        states.cachedOptions = [];\n        states.previousValue = void 0;\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue;\n        const options = filteredOptions.value;\n        const selectedItemIndex = options.findIndex(option => getValueKey(getValue(option)) === getValueKey(props.modelValue));\n        if (~selectedItemIndex) {\n          states.selectedLabel = getLabel(options[selectedItemIndex]);\n          updateHoveringIndex(selectedItemIndex);\n        } else {\n          states.selectedLabel = getValueKey(props.modelValue);\n        }\n      } else {\n        states.selectedLabel = \"\";\n        states.previousValue = void 0;\n      }\n    }\n    clearAllNewOption();\n    calculatePopperSize();\n  };\n  watch(expanded, val => {\n    var _a, _b;\n    emit(\"visible-change\", val);\n    if (val) {\n      (_b = (_a = popper.value).update) == null ? void 0 : _b.call(_a);\n    } else {\n      states.displayInputValue = \"\";\n      states.previousQuery = null;\n      createNewOption(\"\");\n    }\n  });\n  watch(() => props.modelValue, (val, oldVal) => {\n    var _a;\n    if (!val || val.toString() !== states.previousValue) {\n      initStates();\n    }\n    if (!isEqual(val, oldVal) && props.validateEvent) {\n      (_a = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\").catch(err => debugWarn(err));\n    }\n  }, {\n    deep: true\n  });\n  watch(() => props.options, () => {\n    const input = inputRef.value;\n    if (!input || input && document.activeElement !== input) {\n      initStates();\n    }\n  }, {\n    deep: true\n  });\n  watch(filteredOptions, () => {\n    return menuRef.value && nextTick(menuRef.value.resetScrollTop);\n  });\n  watch(() => dropdownMenuVisible.value, val => {\n    if (!val) {\n      resetHoveringIndex();\n    }\n  });\n  onMounted(() => {\n    initStates();\n  });\n  useResizeObserver(selectRef, handleResize);\n  return {\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce: debounce$1,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    inputWrapperStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    showClearBtn,\n    states,\n    tagMaxWidth,\n    nsSelectV2,\n    nsInput,\n    calculatorRef,\n    controlRef,\n    inputRef,\n    menuRef,\n    popper,\n    selectRef,\n    selectionRef,\n    popperRef,\n    validateState,\n    validateIcon,\n    showTagList,\n    collapseTagList,\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValue,\n    getDisabled,\n    getValueKey,\n    handleBlur,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    handleFocus,\n    handleMenuEnter,\n    handleResize,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: updateHoveringIndex,\n    onUpdateInputValue,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate\n  };\n};\nexport { useSelect as default };","map":{"version":3,"names":["DEFAULT_INPUT_PLACEHOLDER","MINIMUM_INPUT_WIDTH","TAG_BASE_WIDTH","larget","default","small","useSelect","props","emit","t","useLocale","nsSelectV2","useNamespace","nsInput","form","elForm","formItem","elFormItem","useFormItem","getLabel","getValue","getDisabled","getOptions","useProps","states","reactive","inputValue","displayInputValue","calculatedWidth","cachedPlaceholder","cachedOptions","createdOptions","createdLabel","createdSelected","currentPlaceholder","hoveringIndex","comboBoxHovering","isOnComposition","isSilentBlur","isComposing","inputLength","selectWidth","initialInputHeight","previousQuery","previousValue","query","selectedLabel","softFocus","tagInMultiLine","selectedIndex","ref","popperSize","controlRef","inputRef","menuRef","popper","selectRef","selectionRef","calculatorRef","expanded","selectDisabled","computed","disabled","popupHeight","totalHeight","filteredOptions","value","length","height","hasModelValue","isNil","modelValue","showClearBtn","hasValue","multiple","Array","isArray","criteria","clearable","iconComponent","remote","filterable","ArrowUp","iconReverse","is","validateState","validateIcon","ValidateComponentsMap","debounce$1","emptyText","options","loading","loadingText","noMatchText","noDataText","isValidOption","o","regexp","RegExp","escapeStringRegexp","containsQueryString","test","reduce","all","item","filtered","filter","push","label","isTitle","type","filteredOptionsValueMap","valueMap","Map","forEach","option","index","set","getValueKey","optionsAllDisabled","every","selectSize","useFormSize","collapseTagSize","tagMaxWidth","select","size","paddingLeft","Number","parseInt","getComputedStyle","paddingRight","calculatePopperSize","_a","offsetWidth","inputWrapperStyle","width","Math","ceil","shouldShowPlaceholder","_placeholder","placeholder","popperRef","_b","contentRef","indexRef","len","has","get","dropdownMenuVisible","val","showTagList","slice","maxCollapseTags","collapseTagList","createNewOption","removeNewOption","selectNewOption","clearAllNewOption","useAllowCreate","handleCompositionStart","handleCompositionUpdate","handleCompositionEnd","useInput","e","onInput","focusAndUpdatePopup","_c","focus","call","updatePopper","toggleMenu","automaticDropdown","nextTick","onInputChange","handleQueryChange","debouncedOnInputChange","debounce","isFunction","filterMethod","remoteMethod","emitChange","isEqual","CHANGE_EVENT","update","UPDATE_MODEL_EVENT","String","getValueIndex","arr","isObject","indexOf","valueKey","some","i","resetInputHeight","selection","offsetHeight","handleResize","resetInputWidth","getBoundingClientRect","onSelect","idx","byClick","selectedOptions","splice","multipleLimit","updateHoveringIndex","created","reserveKeyword","onUpdateInputValue","setSoftFocus","deleteTag","event","stopPropagation","handleFocus","focused","handleBlur","blur","handleEsc","handleDel","preventDefault","selected","pop","handleClear","emptyValue","onKeyboardNavigate","direction","includes","newIndex","scrollToItem","onKeyboardSelect","resetHoveringIndex","_input","target","handleClickOutside","handleMenuEnter","initStates","initHovering","toString","selectValue","selectedItemIndex","findIndex","watch","oldVal","validateEvent","validate","catch","err","debugWarn","deep","input","document","activeElement","resetScrollTop","onMounted","useResizeObserver","scrollTo","onHover"],"sources":["../../../../../../packages/components/select-v2/src/useSelect.ts"],"sourcesContent":["// @ts-nocheck\nimport { computed, nextTick, onMounted, reactive, ref, watch } from 'vue'\nimport { isArray, isFunction, isObject } from '@vue/shared'\nimport { get, isEqual, isNil, debounce as lodashDebounce } from 'lodash-unified'\nimport { useResizeObserver } from '@vueuse/core'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport {\n  ValidateComponentsMap,\n  debugWarn,\n  escapeStringRegexp,\n} from '@element-plus/utils'\nimport { useFormItem, useFormSize } from '@element-plus/components/form'\n\nimport { ArrowUp } from '@element-plus/icons-vue'\nimport { useAllowCreate } from './useAllowCreate'\nimport { useInput } from './useInput'\nimport { useProps } from './useProps'\n\nimport type { CSSProperties } from 'vue'\nimport type ElTooltip from '@element-plus/components/tooltip'\nimport type { Option, OptionType } from './select.types'\nimport type { ISelectProps } from './token'\n\nconst DEFAULT_INPUT_PLACEHOLDER = ''\nconst MINIMUM_INPUT_WIDTH = 11\nconst TAG_BASE_WIDTH = {\n  larget: 51,\n  default: 42,\n  small: 33,\n}\n\nconst useSelect = (props: ISelectProps, emit) => {\n  // inject\n  const { t } = useLocale()\n  const nsSelectV2 = useNamespace('select-v2')\n  const nsInput = useNamespace('input')\n  const { form: elForm, formItem: elFormItem } = useFormItem()\n  const { getLabel, getValue, getDisabled, getOptions } = useProps(props)\n\n  const states = reactive({\n    inputValue: DEFAULT_INPUT_PLACEHOLDER,\n    displayInputValue: DEFAULT_INPUT_PLACEHOLDER,\n    calculatedWidth: 0,\n    cachedPlaceholder: '',\n    cachedOptions: [] as Option[],\n    createdOptions: [] as Option[],\n    createdLabel: '',\n    createdSelected: false,\n    currentPlaceholder: '',\n    hoveringIndex: -1,\n    comboBoxHovering: false,\n    isOnComposition: false,\n    isSilentBlur: false,\n    isComposing: false,\n    inputLength: 20,\n    selectWidth: 200,\n    initialInputHeight: 0,\n    previousQuery: null,\n    previousValue: undefined,\n    query: '',\n    selectedLabel: '',\n    softFocus: false,\n    tagInMultiLine: false,\n  })\n\n  // data refs\n  const selectedIndex = ref(-1)\n  const popperSize = ref(-1)\n\n  // DOM & Component refs\n  const controlRef = ref(null)\n  const inputRef = ref(null) // el-input ref\n  const menuRef = ref(null)\n  const popper = ref<InstanceType<typeof ElTooltip> | null>(null)\n  const selectRef = ref(null)\n  const selectionRef = ref(null) // tags ref\n  const calculatorRef = ref<HTMLElement>(null)\n\n  // the controller of the expanded popup\n  const expanded = ref(false)\n\n  const selectDisabled = computed(() => props.disabled || elForm?.disabled)\n\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * 34\n    return totalHeight > props.height ? props.height : totalHeight\n  })\n\n  const hasModelValue = computed(() => {\n    return !isNil(props.modelValue)\n  })\n\n  const showClearBtn = computed(() => {\n    const hasValue = props.multiple\n      ? Array.isArray(props.modelValue) && props.modelValue.length > 0\n      : hasModelValue.value\n\n    const criteria =\n      props.clearable &&\n      !selectDisabled.value &&\n      states.comboBoxHovering &&\n      hasValue\n    return criteria\n  })\n\n  const iconComponent = computed(() =>\n    props.remote && props.filterable ? '' : ArrowUp\n  )\n\n  const iconReverse = computed(\n    () => iconComponent.value && nsSelectV2.is('reverse', expanded.value)\n  )\n\n  const validateState = computed(() => elFormItem?.validateState || '')\n  const validateIcon = computed(\n    () => ValidateComponentsMap[validateState.value]\n  )\n\n  const debounce = computed(() => (props.remote ? 300 : 0))\n\n  // filteredOptions includes flatten the data into one dimensional array.\n  const emptyText = computed(() => {\n    const options = filteredOptions.value\n    if (props.loading) {\n      return props.loadingText || t('el.select.loading')\n    } else {\n      if (props.remote && states.inputValue === '' && options.length === 0)\n        return false\n      if (props.filterable && states.inputValue && options.length > 0) {\n        return props.noMatchText || t('el.select.noMatch')\n      }\n      if (options.length === 0) {\n        return props.noDataText || t('el.select.noData')\n      }\n    }\n    return null\n  })\n\n  const filteredOptions = computed(() => {\n    const isValidOption = (o: Option): boolean => {\n      // fill the conditions here.\n      const query = states.inputValue\n      // when query was given, we should test on the label see whether the label contains the given query\n      const regexp = new RegExp(escapeStringRegexp(query), 'i')\n      const containsQueryString = query ? regexp.test(getLabel(o) || '') : true\n      return containsQueryString\n    }\n    if (props.loading) {\n      return []\n    }\n\n    return [...props.options, ...states.createdOptions].reduce((all, item) => {\n      const options = getOptions(item)\n\n      if (isArray(options)) {\n        const filtered = options.filter(isValidOption)\n\n        if (filtered.length > 0) {\n          all.push(\n            {\n              label: getLabel(item),\n              isTitle: true,\n              type: 'Group',\n            },\n            ...filtered,\n            { type: 'Group' }\n          )\n        }\n      } else if (props.remote || isValidOption(item)) {\n        all.push(item)\n      }\n\n      return all\n    }, []) as OptionType[]\n  })\n\n  const filteredOptionsValueMap = computed(() => {\n    const valueMap = new Map()\n\n    filteredOptions.value.forEach((option, index) => {\n      valueMap.set(getValueKey(getValue(option)), { option, index })\n    })\n    return valueMap\n  })\n\n  const optionsAllDisabled = computed(() =>\n    filteredOptions.value.every((option) => getDisabled(option))\n  )\n\n  const selectSize = useFormSize()\n\n  const collapseTagSize = computed(() =>\n    'small' === selectSize.value ? 'small' : 'default'\n  )\n\n  const tagMaxWidth = computed(() => {\n    const select = selectionRef.value\n    const size = collapseTagSize.value || 'default'\n    const paddingLeft = select\n      ? Number.parseInt(getComputedStyle(select).paddingLeft)\n      : 0\n    const paddingRight = select\n      ? Number.parseInt(getComputedStyle(select).paddingRight)\n      : 0\n    return (\n      states.selectWidth - paddingRight - paddingLeft - TAG_BASE_WIDTH[size]\n    )\n  })\n\n  const calculatePopperSize = () => {\n    popperSize.value = selectRef.value?.offsetWidth || 200\n  }\n\n  const inputWrapperStyle = computed(() => {\n    return {\n      width: `${\n        states.calculatedWidth === 0\n          ? MINIMUM_INPUT_WIDTH\n          : Math.ceil(states.calculatedWidth) + MINIMUM_INPUT_WIDTH\n      }px`,\n    } as CSSProperties\n  })\n\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.displayInputValue\n    }\n\n    // when it's not multiple mode, we only determine this flag based on filterable and expanded\n    // when filterable flag is true, which means we have input box on the screen\n    return props.filterable ? states.displayInputValue.length === 0 : true\n  })\n\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder || t('el.select.placeholder')\n    return props.multiple || isNil(props.modelValue)\n      ? _placeholder\n      : states.selectedLabel\n  })\n\n  // this obtains the actual popper DOM element.\n  const popperRef = computed(() => popper.value?.popperRef?.contentRef)\n\n  // the index with current value in options\n  const indexRef = computed<number>(() => {\n    if (props.multiple) {\n      const len = (props.modelValue as []).length\n      if (\n        (props.modelValue as Array<any>).length > 0 &&\n        filteredOptionsValueMap.value.has(props.modelValue[len - 1])\n      ) {\n        const { index } = filteredOptionsValueMap.value.get(\n          props.modelValue[len - 1]\n        )\n        return index\n      }\n    } else {\n      if (\n        props.modelValue &&\n        filteredOptionsValueMap.value.has(props.modelValue)\n      ) {\n        const { index } = filteredOptionsValueMap.value.get(props.modelValue)\n        return index\n      }\n    }\n    return -1\n  })\n\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && emptyText.value !== false\n    },\n    set(val: boolean) {\n      expanded.value = val\n    },\n  })\n\n  const showTagList = computed(() =>\n    states.cachedOptions.slice(0, props.maxCollapseTags)\n  )\n\n  const collapseTagList = computed(() =>\n    states.cachedOptions.slice(props.maxCollapseTags)\n  )\n\n  // hooks\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption,\n  } = useAllowCreate(props, states)\n  const {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n  } = useInput((e) => onInput(e))\n\n  // methods\n  const focusAndUpdatePopup = () => {\n    inputRef.value?.focus?.()\n    popper.value?.updatePopper()\n  }\n\n  const toggleMenu = () => {\n    if (props.automaticDropdown) return\n    if (!selectDisabled.value) {\n      if (states.isComposing) states.softFocus = true\n      return nextTick(() => {\n        expanded.value = !expanded.value\n        inputRef.value?.focus?.()\n      })\n    }\n  }\n\n  const onInputChange = () => {\n    if (props.filterable && states.inputValue !== states.selectedLabel) {\n      states.query = states.selectedLabel\n    }\n    handleQueryChange(states.inputValue)\n    return nextTick(() => {\n      createNewOption(states.inputValue)\n    })\n  }\n\n  const debouncedOnInputChange = lodashDebounce(onInputChange, debounce.value)\n\n  const handleQueryChange = (val: string) => {\n    if (states.previousQuery === val) {\n      return\n    }\n    states.previousQuery = val\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val)\n    } else if (\n      props.filterable &&\n      props.remote &&\n      isFunction(props.remoteMethod)\n    ) {\n      props.remoteMethod(val)\n    }\n  }\n\n  const emitChange = (val: any | any[]) => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val)\n    }\n  }\n\n  const update = (val: any) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emitChange(val)\n    states.previousValue = String(val)\n  }\n\n  const getValueIndex = (arr = [], value: unknown) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value)\n    }\n    const valueKey = props.valueKey\n    let index = -1\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i\n        return true\n      }\n      return false\n    })\n    return index\n  }\n\n  const getValueKey = (item: unknown) => {\n    return isObject(item) ? get(item, props.valueKey) : item\n  }\n\n  const resetInputHeight = () => {\n    return nextTick(() => {\n      if (!inputRef.value) return\n      const selection = selectionRef.value\n\n      selectRef.value.height = selection.offsetHeight\n      if (expanded.value && emptyText.value !== false) {\n        popper.value?.updatePopper?.()\n      }\n    })\n  }\n\n  const handleResize = () => {\n    resetInputWidth()\n    calculatePopperSize()\n    popper.value?.updatePopper?.()\n    if (props.multiple) {\n      return resetInputHeight()\n    }\n  }\n\n  const resetInputWidth = () => {\n    const select = selectionRef.value\n    if (select) {\n      states.selectWidth = select.getBoundingClientRect().width\n    }\n  }\n\n  const onSelect = (option: Option, idx: number, byClick = true) => {\n    if (props.multiple) {\n      let selectedOptions = (props.modelValue as any[]).slice()\n\n      const index = getValueIndex(selectedOptions, getValue(option))\n      if (index > -1) {\n        selectedOptions = [\n          ...selectedOptions.slice(0, index),\n          ...selectedOptions.slice(index + 1),\n        ]\n        states.cachedOptions.splice(index, 1)\n        removeNewOption(option)\n      } else if (\n        props.multipleLimit <= 0 ||\n        selectedOptions.length < props.multipleLimit\n      ) {\n        selectedOptions = [...selectedOptions, getValue(option)]\n        states.cachedOptions.push(option)\n        selectNewOption(option)\n        updateHoveringIndex(idx)\n      }\n      update(selectedOptions)\n      if (option.created) {\n        states.query = ''\n        handleQueryChange('')\n        states.inputLength = 20\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        inputRef.value.focus?.()\n        onUpdateInputValue('')\n      }\n      if (props.filterable) {\n        states.calculatedWidth =\n          calculatorRef.value.getBoundingClientRect().width\n      }\n      resetInputHeight()\n      setSoftFocus()\n    } else {\n      selectedIndex.value = idx\n      states.selectedLabel = getLabel(option)\n      update(getValue(option))\n      expanded.value = false\n      states.isComposing = false\n      states.isSilentBlur = byClick\n      selectNewOption(option)\n      if (!option.created) {\n        clearAllNewOption()\n      }\n      updateHoveringIndex(idx)\n    }\n  }\n\n  const deleteTag = (event: MouseEvent, option: Option) => {\n    let selectedOptions = (props.modelValue as any[]).slice()\n\n    const index = getValueIndex(selectedOptions, getValue(option))\n\n    if (index > -1 && !selectDisabled.value) {\n      selectedOptions = [\n        ...(props.modelValue as Array<unknown>).slice(0, index),\n        ...(props.modelValue as Array<unknown>).slice(index + 1),\n      ]\n      states.cachedOptions.splice(index, 1)\n      update(selectedOptions)\n      emit('remove-tag', getValue(option))\n      states.softFocus = true\n      removeNewOption(option)\n      return nextTick(focusAndUpdatePopup)\n    }\n    event.stopPropagation()\n  }\n\n  const handleFocus = (event: FocusEvent) => {\n    const focused = states.isComposing\n    states.isComposing = true\n    if (!states.softFocus) {\n      // If already in the focus state, shouldn't trigger event\n      if (!focused) emit('focus', event)\n    } else {\n      states.softFocus = false\n    }\n  }\n\n  const handleBlur = (event: FocusEvent) => {\n    states.softFocus = false\n\n    // reset input value when blurred\n    // https://github.com/ElemeFE/element/pull/10822\n    return nextTick(() => {\n      inputRef.value?.blur?.()\n      if (calculatorRef.value) {\n        states.calculatedWidth =\n          calculatorRef.value.getBoundingClientRect().width\n      }\n      if (states.isSilentBlur) {\n        states.isSilentBlur = false\n      } else {\n        if (states.isComposing) {\n          emit('blur', event)\n        }\n      }\n      states.isComposing = false\n    })\n  }\n\n  // keyboard handlers\n  const handleEsc = () => {\n    if (states.displayInputValue.length > 0) {\n      onUpdateInputValue('')\n    } else {\n      expanded.value = false\n    }\n  }\n\n  const handleDel = (e: KeyboardEvent) => {\n    if (states.displayInputValue.length === 0) {\n      e.preventDefault()\n      const selected = (props.modelValue as Array<any>).slice()\n      selected.pop()\n      removeNewOption(states.cachedOptions.pop())\n      update(selected)\n    }\n  }\n\n  const handleClear = () => {\n    let emptyValue: string | any[]\n    if (isArray(props.modelValue)) {\n      emptyValue = []\n    } else {\n      emptyValue = undefined\n    }\n\n    states.softFocus = true\n    if (props.multiple) {\n      states.cachedOptions = []\n    } else {\n      states.selectedLabel = ''\n    }\n    expanded.value = false\n    update(emptyValue)\n    emit('clear')\n    clearAllNewOption()\n    return nextTick(focusAndUpdatePopup)\n  }\n\n  const onUpdateInputValue = (val: string) => {\n    states.displayInputValue = val\n    states.inputValue = val\n  }\n\n  const onKeyboardNavigate = (\n    direction: 'forward' | 'backward',\n    hoveringIndex: number = undefined\n  ) => {\n    const options = filteredOptions.value\n    if (\n      !['forward', 'backward'].includes(direction) ||\n      selectDisabled.value ||\n      options.length <= 0 ||\n      optionsAllDisabled.value\n    ) {\n      return\n    }\n    if (!expanded.value) {\n      return toggleMenu()\n    }\n    if (hoveringIndex === undefined) {\n      hoveringIndex = states.hoveringIndex\n    }\n    let newIndex = -1\n    if (direction === 'forward') {\n      newIndex = hoveringIndex + 1\n      if (newIndex >= options.length) {\n        // return to the first option\n        newIndex = 0\n      }\n    } else if (direction === 'backward') {\n      newIndex = hoveringIndex - 1\n      if (newIndex < 0 || newIndex >= options.length) {\n        // navigate to the last one\n        newIndex = options.length - 1\n      }\n    }\n    const option = options[newIndex]\n    if (getDisabled(option) || option.type === 'Group') {\n      // prevent dispatching multiple nextTick callbacks.\n      return onKeyboardNavigate(direction, newIndex)\n    } else {\n      updateHoveringIndex(newIndex)\n      scrollToItem(newIndex)\n    }\n  }\n\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu()\n    } else if (\n      ~states.hoveringIndex &&\n      filteredOptions.value[states.hoveringIndex]\n    ) {\n      onSelect(\n        filteredOptions.value[states.hoveringIndex],\n        states.hoveringIndex,\n        false\n      )\n    }\n  }\n\n  const updateHoveringIndex = (idx: number) => {\n    states.hoveringIndex = idx\n  }\n\n  const resetHoveringIndex = () => {\n    states.hoveringIndex = -1\n  }\n\n  const setSoftFocus = () => {\n    const _input = inputRef.value\n    if (_input) {\n      _input.focus?.()\n    }\n  }\n\n  const onInput = (event) => {\n    const value = event.target.value\n    onUpdateInputValue(value)\n    if (states.displayInputValue.length > 0 && !expanded.value) {\n      expanded.value = true\n    }\n\n    states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width\n    if (props.multiple) {\n      resetInputHeight()\n    }\n    if (props.remote) {\n      debouncedOnInputChange()\n    } else {\n      return onInputChange()\n    }\n  }\n\n  const handleClickOutside = () => {\n    expanded.value = false\n    return handleBlur()\n  }\n\n  const handleMenuEnter = () => {\n    states.inputValue = states.displayInputValue\n    return nextTick(() => {\n      if (~indexRef.value) {\n        updateHoveringIndex(indexRef.value)\n        scrollToItem(states.hoveringIndex)\n      }\n    })\n  }\n\n  const scrollToItem = (index: number) => {\n    menuRef.value.scrollToItem(index)\n  }\n\n  const initStates = () => {\n    resetHoveringIndex()\n    if (props.multiple) {\n      if ((props.modelValue as Array<any>).length > 0) {\n        let initHovering = false\n        states.cachedOptions.length = 0\n        states.previousValue = props.modelValue.toString()\n\n        for (const value of props.modelValue) {\n          const selectValue = getValueKey(value)\n\n          if (filteredOptionsValueMap.value.has(selectValue)) {\n            const { index, option } =\n              filteredOptionsValueMap.value.get(selectValue)\n\n            states.cachedOptions.push(option)\n            if (!initHovering) {\n              updateHoveringIndex(index)\n            }\n            initHovering = true\n          }\n        }\n      } else {\n        states.cachedOptions = []\n        states.previousValue = undefined\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue\n        const options = filteredOptions.value\n        const selectedItemIndex = options.findIndex(\n          (option) =>\n            getValueKey(getValue(option)) === getValueKey(props.modelValue)\n        )\n        if (~selectedItemIndex) {\n          states.selectedLabel = getLabel(options[selectedItemIndex])\n          updateHoveringIndex(selectedItemIndex)\n        } else {\n          states.selectedLabel = getValueKey(props.modelValue)\n        }\n      } else {\n        states.selectedLabel = ''\n        states.previousValue = undefined\n      }\n    }\n    clearAllNewOption()\n    calculatePopperSize()\n  }\n\n  // in order to track these individually, we need to turn them into refs instead of watching the entire\n  // reactive object which could cause perf penalty when unnecessary field gets changed the watch method will\n  // be invoked.\n\n  watch(expanded, (val) => {\n    emit('visible-change', val)\n    if (val) {\n      popper.value.update?.()\n      // the purpose of this function is to differ the blur event trigger mechanism\n    } else {\n      states.displayInputValue = ''\n      states.previousQuery = null\n      createNewOption('')\n    }\n  })\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (!val || val.toString() !== states.previousValue) {\n        initStates()\n      }\n      if (!isEqual(val, oldVal) && props.validateEvent) {\n        elFormItem?.validate?.('change').catch((err) => debugWarn(err))\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  watch(\n    () => props.options,\n    () => {\n      const input = inputRef.value\n      // filter or remote-search scenarios are not initialized\n      if (!input || (input && document.activeElement !== input)) {\n        initStates()\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  // fix the problem that scrollTop is not reset in filterable mode\n  watch(filteredOptions, () => {\n    return menuRef.value && nextTick(menuRef.value.resetScrollTop)\n  })\n\n  watch(\n    () => dropdownMenuVisible.value,\n    (val) => {\n      if (!val) {\n        resetHoveringIndex()\n      }\n    }\n  )\n\n  onMounted(() => {\n    initStates()\n  })\n  useResizeObserver(selectRef, handleResize)\n\n  return {\n    // data exports\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    inputWrapperStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    // readonly,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    showClearBtn,\n    states,\n    tagMaxWidth,\n    nsSelectV2,\n    nsInput,\n\n    // refs items exports\n    calculatorRef,\n    controlRef,\n    inputRef,\n    menuRef,\n    popper,\n    selectRef,\n    selectionRef,\n\n    popperRef,\n\n    validateState,\n    validateIcon,\n    showTagList,\n    collapseTagList,\n\n    // methods exports\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValue,\n    getDisabled,\n    getValueKey,\n    handleBlur,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    handleFocus,\n    handleMenuEnter,\n    handleResize,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: updateHoveringIndex,\n    onUpdateInputValue,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate,\n  }\n}\n\nexport default useSelect\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAgBA,MAAMA,yBAAyB,GAAG,EAAE;AACpC,MAAMC,mBAAmB,GAAG,EAAE;AAC9B,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,EAAE;EACXC,KAAK,EAAE;AACT,CAAC;AACI,MAACC,SAAS,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;EACjC,MAAM;IAAEC;EAAC,CAAE,GAAGC,SAAS,EAAE;EACzB,MAAMC,UAAU,GAAGC,YAAY,CAAC,WAAW,CAAC;EAC5C,MAAMC,OAAO,GAAGD,YAAY,CAAC,OAAO,CAAC;EACrC,MAAM;IAAEE,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAEC;EAAU,CAAE,GAAGC,WAAW,EAAE;EAC5D,MAAM;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAU,CAAE,GAAGC,QAAQ,CAAChB,KAAK,CAAC;EACvE,MAAMiB,MAAM,GAAGC,QAAQ,CAAC;IACtBC,UAAU,EAAE1B,yBAAyB;IACrC2B,iBAAiB,EAAE3B,yBAAyB;IAC5C4B,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE,EAAE;IACrBC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,KAAK;IACtBC,kBAAkB,EAAE,EAAE;IACtBC,aAAa,EAAE,CAAC,CAAC;IACjBC,gBAAgB,EAAE,KAAK;IACvBC,eAAe,EAAE,KAAK;IACtBC,YAAY,EAAE,KAAK;IACnBC,WAAW,EAAE,KAAK;IAClBC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE,GAAG;IAChBC,kBAAkB,EAAE,CAAC;IACrBC,aAAa,EAAE,IAAI;IACnBC,aAAa,EAAE,KAAK,CAAC;IACrBC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE,KAAK;IAChBC,cAAc,EAAE;EACpB,CAAG,CAAC;EACF,MAAMC,aAAa,GAAGC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAMC,UAAU,GAAGD,GAAG,CAAC,CAAC,CAAC,CAAC;EAC1B,MAAME,UAAU,GAAGF,GAAG,CAAC,IAAI,CAAC;EAC5B,MAAMG,QAAQ,GAAGH,GAAG,CAAC,IAAI,CAAC;EAC1B,MAAMI,OAAO,GAAGJ,GAAG,CAAC,IAAI,CAAC;EACzB,MAAMK,MAAM,GAAGL,GAAG,CAAC,IAAI,CAAC;EACxB,MAAMM,SAAS,GAAGN,GAAG,CAAC,IAAI,CAAC;EAC3B,MAAMO,YAAY,GAAGP,GAAG,CAAC,IAAI,CAAC;EAC9B,MAAMQ,aAAa,GAAGR,GAAG,CAAC,IAAI,CAAC;EAC/B,MAAMS,QAAQ,GAAGT,GAAG,CAAC,KAAK,CAAC;EAC3B,MAAMU,cAAc,GAAGC,QAAQ,CAAC,MAAMtD,KAAK,CAACuD,QAAQ,KAAK/C,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAC+C,QAAQ,CAAC,CAAC;EACpG,MAAMC,WAAW,GAAGF,QAAQ,CAAC,MAAM;IACjC,MAAMG,WAAW,GAAGC,eAAe,CAACC,KAAK,CAACC,MAAM,GAAG,EAAE;IACrD,OAAOH,WAAW,GAAGzD,KAAK,CAAC6D,MAAM,GAAG7D,KAAK,CAAC6D,MAAM,GAAGJ,WAAW;EAClE,CAAG,CAAC;EACF,MAAMK,aAAa,GAAGR,QAAQ,CAAC,MAAM;IACnC,OAAO,CAACS,KAAK,CAAC/D,KAAK,CAACgE,UAAU,CAAC;EACnC,CAAG,CAAC;EACF,MAAMC,YAAY,GAAGX,QAAQ,CAAC,MAAM;IAClC,MAAMY,QAAQ,GAAGlE,KAAK,CAACmE,QAAQ,GAAGC,KAAK,CAACC,OAAO,CAACrE,KAAK,CAACgE,UAAU,CAAC,IAAIhE,KAAK,CAACgE,UAAU,CAACJ,MAAM,GAAG,CAAC,GAAGE,aAAa,CAACH,KAAK;IACtH,MAAMW,QAAQ,GAAGtE,KAAK,CAACuE,SAAS,IAAI,CAAClB,cAAc,CAACM,KAAK,IAAI1C,MAAM,CAACY,gBAAgB,IAAIqC,QAAQ;IAChG,OAAOI,QAAQ;EACnB,CAAG,CAAC;EACF,MAAME,aAAa,GAAGlB,QAAQ,CAAC,MAAMtD,KAAK,CAACyE,MAAM,IAAIzE,KAAK,CAAC0E,UAAU,GAAG,EAAE,GAAGC,OAAO,CAAC;EACrF,MAAMC,WAAW,GAAGtB,QAAQ,CAAC,MAAMkB,aAAa,CAACb,KAAK,IAAIvD,UAAU,CAACyE,EAAE,CAAC,SAAS,EAAEzB,QAAQ,CAACO,KAAK,CAAC,CAAC;EACnG,MAAMmB,aAAa,GAAGxB,QAAQ,CAAC,MAAM,CAAC5C,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACoE,aAAa,KAAK,EAAE,CAAC;EACpG,MAAMC,YAAY,GAAGzB,QAAQ,CAAC,MAAM0B,qBAAqB,CAACF,aAAa,CAACnB,KAAK,CAAC,CAAC;EAC/E,MAAMsB,UAAQ,GAAG3B,QAAQ,CAAC,MAAMtD,KAAK,CAACyE,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC;EACvD,MAAMS,SAAS,GAAG5B,QAAQ,CAAC,MAAM;IAC/B,MAAM6B,OAAO,GAAGzB,eAAe,CAACC,KAAK;IACrC,IAAI3D,KAAK,CAACoF,OAAO,EAAE;MACjB,OAAOpF,KAAK,CAACqF,WAAW,IAAInF,CAAC,CAAC,mBAAmB,CAAC;IACxD,CAAK,MAAM;MACL,IAAIF,KAAK,CAACyE,MAAM,IAAIxD,MAAM,CAACE,UAAU,KAAK,EAAE,IAAIgE,OAAO,CAACvB,MAAM,KAAK,CAAC,EAClE,OAAO,KAAK;MACd,IAAI5D,KAAK,CAAC0E,UAAU,IAAIzD,MAAM,CAACE,UAAU,IAAIgE,OAAO,CAACvB,MAAM,GAAG,CAAC,EAAE;QAC/D,OAAO5D,KAAK,CAACsF,WAAW,IAAIpF,CAAC,CAAC,mBAAmB,CAAC;MAC1D;MACM,IAAIiF,OAAO,CAACvB,MAAM,KAAK,CAAC,EAAE;QACxB,OAAO5D,KAAK,CAACuF,UAAU,IAAIrF,CAAC,CAAC,kBAAkB,CAAC;MACxD;IACA;IACI,OAAO,IAAI;EACf,CAAG,CAAC;EACF,MAAMwD,eAAe,GAAGJ,QAAQ,CAAC,MAAM;IACrC,MAAMkC,aAAa,GAAIC,CAAC,IAAK;MAC3B,MAAMnD,KAAK,GAAGrB,MAAM,CAACE,UAAU;MAC/B,MAAMuE,MAAM,GAAG,IAAIC,MAAM,CAACC,kBAAkB,CAACtD,KAAK,CAAC,EAAE,GAAG,CAAC;MACzD,MAAMuD,mBAAmB,GAAGvD,KAAK,GAAGoD,MAAM,CAACI,IAAI,CAAClF,QAAQ,CAAC6E,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI;MACzE,OAAOI,mBAAmB;IAChC,CAAK;IACD,IAAI7F,KAAK,CAACoF,OAAO,EAAE;MACjB,OAAO,EAAE;IACf;IACI,OAAO,CAAC,GAAGpF,KAAK,CAACmF,OAAO,EAAE,GAAGlE,MAAM,CAACO,cAAc,CAAC,CAACuE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;MACxE,MAAMd,OAAO,GAAGpE,UAAU,CAACkF,IAAI,CAAC;MAChC,IAAI5B,OAAO,CAACc,OAAO,CAAC,EAAE;QACpB,MAAMe,QAAQ,GAAGf,OAAO,CAACgB,MAAM,CAACX,aAAa,CAAC;QAC9C,IAAIU,QAAQ,CAACtC,MAAM,GAAG,CAAC,EAAE;UACvBoC,GAAG,CAACI,IAAI,CAAC;YACPC,KAAK,EAAEzF,QAAQ,CAACqF,IAAI,CAAC;YACrBK,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UAClB,CAAW,EAAE,GAAGL,QAAQ,EAAE;YAAEK,IAAI,EAAE;UAAO,CAAE,CAAC;QAC5C;MACA,CAAO,MAAM,IAAIvG,KAAK,CAACyE,MAAM,IAAIe,aAAa,CAACS,IAAI,CAAC,EAAE;QAC9CD,GAAG,CAACI,IAAI,CAACH,IAAI,CAAC;MACtB;MACM,OAAOD,GAAG;IAChB,CAAK,EAAE,EAAE,CAAC;EACV,CAAG,CAAC;EACF,MAAMQ,uBAAuB,GAAGlD,QAAQ,CAAC,MAAM;IAC7C,MAAMmD,QAAQ,kBAAmB,IAAIC,GAAG,EAAE;IAC1ChD,eAAe,CAACC,KAAK,CAACgD,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MAC/CJ,QAAQ,CAACK,GAAG,CAACC,WAAW,CAAClG,QAAQ,CAAC+F,MAAM,CAAC,CAAC,EAAE;QAAEA,MAAM;QAAEC;MAAK,CAAE,CAAC;IACpE,CAAK,CAAC;IACF,OAAOJ,QAAQ;EACnB,CAAG,CAAC;EACF,MAAMO,kBAAkB,GAAG1D,QAAQ,CAAC,MAAMI,eAAe,CAACC,KAAK,CAACsD,KAAK,CAAEL,MAAM,IAAK9F,WAAW,CAAC8F,MAAM,CAAC,CAAC,CAAC;EACvG,MAAMM,UAAU,GAAGC,WAAW,EAAE;EAChC,MAAMC,eAAe,GAAG9D,QAAQ,CAAC,MAAM4D,UAAU,CAACvD,KAAK,KAAK,OAAO,GAAG,OAAO,GAAG,SAAS,CAAC;EAC1F,MAAM0D,WAAW,GAAG/D,QAAQ,CAAC,MAAM;IACjC,MAAMgE,MAAM,GAAGpE,YAAY,CAACS,KAAK;IACjC,MAAM4D,IAAI,GAAGH,eAAe,CAACzD,KAAK,IAAI,SAAS;IAC/C,MAAM6D,WAAW,GAAGF,MAAM,GAAGG,MAAM,CAACC,QAAQ,CAACC,gBAAgB,CAACL,MAAM,CAAC,CAACE,WAAW,CAAC,GAAG,CAAC;IACtF,MAAMI,YAAY,GAAGN,MAAM,GAAGG,MAAM,CAACC,QAAQ,CAACC,gBAAgB,CAACL,MAAM,CAAC,CAACM,YAAY,CAAC,GAAG,CAAC;IACxF,OAAO3G,MAAM,CAACiB,WAAW,GAAG0F,YAAY,GAAGJ,WAAW,GAAG7H,cAAc,CAAC4H,IAAI,CAAC;EACjF,CAAG,CAAC;EACF,MAAMM,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIC,EAAE;IACNlF,UAAU,CAACe,KAAK,GAAG,CAAC,CAACmE,EAAE,GAAG7E,SAAS,CAACU,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGmE,EAAE,CAACC,WAAW,KAAK,GAAG;EACxF,CAAG;EACD,MAAMC,iBAAiB,GAAG1E,QAAQ,CAAC,MAAM;IACvC,OAAO;MACL2E,KAAK,EAAG,GAAEhH,MAAM,CAACI,eAAe,KAAK,CAAC,GAAG3B,mBAAmB,GAAGwI,IAAI,CAACC,IAAI,CAAClH,MAAM,CAACI,eAAe,CAAC,GAAG3B,mBAAoB;IAC7H,CAAK;EACL,CAAG,CAAC;EACF,MAAM0I,qBAAqB,GAAG9E,QAAQ,CAAC,MAAM;IAC3C,IAAIe,OAAO,CAACrE,KAAK,CAACgE,UAAU,CAAC,EAAE;MAC7B,OAAOhE,KAAK,CAACgE,UAAU,CAACJ,MAAM,KAAK,CAAC,IAAI,CAAC3C,MAAM,CAACG,iBAAiB;IACvE;IACI,OAAOpB,KAAK,CAAC0E,UAAU,GAAGzD,MAAM,CAACG,iBAAiB,CAACwC,MAAM,KAAK,CAAC,GAAG,IAAI;EAC1E,CAAG,CAAC;EACF,MAAMjC,kBAAkB,GAAG2B,QAAQ,CAAC,MAAM;IACxC,MAAM+E,YAAY,GAAGrI,KAAK,CAACsI,WAAW,IAAIpI,CAAC,CAAC,uBAAuB,CAAC;IACpE,OAAOF,KAAK,CAACmE,QAAQ,IAAIJ,KAAK,CAAC/D,KAAK,CAACgE,UAAU,CAAC,GAAGqE,YAAY,GAAGpH,MAAM,CAACsB,aAAa;EAC1F,CAAG,CAAC;EACF,MAAMgG,SAAS,GAAGjF,QAAQ,CAAC,MAAM;IAC/B,IAAIwE,EAAE,EAAEU,EAAE;IACV,OAAO,CAACA,EAAE,GAAG,CAACV,EAAE,GAAG9E,MAAM,CAACW,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGmE,EAAE,CAACS,SAAS,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGC,EAAE,CAACC,UAAU;EACtG,CAAG,CAAC;EACF,MAAMC,QAAQ,GAAGpF,QAAQ,CAAC,MAAM;IAC9B,IAAItD,KAAK,CAACmE,QAAQ,EAAE;MAClB,MAAMwE,GAAG,GAAG3I,KAAK,CAACgE,UAAU,CAACJ,MAAM;MACnC,IAAI5D,KAAK,CAACgE,UAAU,CAACJ,MAAM,GAAG,CAAC,IAAI4C,uBAAuB,CAAC7C,KAAK,CAACiF,GAAG,CAAC5I,KAAK,CAACgE,UAAU,CAAC2E,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE;QAC/F,MAAM;UAAE9B;QAAK,CAAE,GAAGL,uBAAuB,CAAC7C,KAAK,CAACkF,GAAG,CAAC7I,KAAK,CAACgE,UAAU,CAAC2E,GAAG,GAAG,CAAC,CAAC,CAAC;QAC9E,OAAO9B,KAAK;MACpB;IACA,CAAK,MAAM;MACL,IAAI7G,KAAK,CAACgE,UAAU,IAAIwC,uBAAuB,CAAC7C,KAAK,CAACiF,GAAG,CAAC5I,KAAK,CAACgE,UAAU,CAAC,EAAE;QAC3E,MAAM;UAAE6C;QAAK,CAAE,GAAGL,uBAAuB,CAAC7C,KAAK,CAACkF,GAAG,CAAC7I,KAAK,CAACgE,UAAU,CAAC;QACrE,OAAO6C,KAAK;MACpB;IACA;IACI,OAAO,CAAC,CAAC;EACb,CAAG,CAAC;EACF,MAAMiC,mBAAmB,GAAGxF,QAAQ,CAAC;IACnCuF,GAAGA,CAAA,EAAG;MACJ,OAAOzF,QAAQ,CAACO,KAAK,IAAIuB,SAAS,CAACvB,KAAK,KAAK,KAAK;IACxD,CAAK;IACDmD,GAAGA,CAACiC,GAAG,EAAE;MACP3F,QAAQ,CAACO,KAAK,GAAGoF,GAAG;IAC1B;EACA,CAAG,CAAC;EACF,MAAMC,WAAW,GAAG1F,QAAQ,CAAC,MAAMrC,MAAM,CAACM,aAAa,CAAC0H,KAAK,CAAC,CAAC,EAAEjJ,KAAK,CAACkJ,eAAe,CAAC,CAAC;EACxF,MAAMC,eAAe,GAAG7F,QAAQ,CAAC,MAAMrC,MAAM,CAACM,aAAa,CAAC0H,KAAK,CAACjJ,KAAK,CAACkJ,eAAe,CAAC,CAAC;EACzF,MAAM;IACJE,eAAe;IACfC,eAAe;IACfC,eAAe;IACfC;EACJ,CAAG,GAAGC,cAAc,CAACxJ,KAAK,EAAEiB,MAAM,CAAC;EACjC,MAAM;IACJwI,sBAAsB;IACtBC,uBAAuB;IACvBC;EACJ,CAAG,GAAGC,QAAQ,CAAEC,CAAC,IAAKC,OAAO,CAACD,CAAC,CAAC,CAAC;EAC/B,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIjC,EAAE,EAAEU,EAAE,EAAEwB,EAAE;IACd,CAACxB,EAAE,GAAG,CAACV,EAAE,GAAGhF,QAAQ,CAACa,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGmE,EAAE,CAACmC,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGzB,EAAE,CAAC0B,IAAI,CAACpC,EAAE,CAAC;IACvF,CAACkC,EAAE,GAAGhH,MAAM,CAACW,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGqG,EAAE,CAACG,YAAY,EAAE;EAC5D,CAAG;EACD,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIpK,KAAK,CAACqK,iBAAiB,EACzB;IACF,IAAI,CAAChH,cAAc,CAACM,KAAK,EAAE;MACzB,IAAI1C,MAAM,CAACe,WAAW,EACpBf,MAAM,CAACuB,SAAS,GAAG,IAAI;MACzB,OAAO8H,QAAQ,CAAC,MAAM;QACpB,IAAIxC,EAAE,EAAEU,EAAE;QACVpF,QAAQ,CAACO,KAAK,GAAG,CAACP,QAAQ,CAACO,KAAK;QAChC,CAAC6E,EAAE,GAAG,CAACV,EAAE,GAAGhF,QAAQ,CAACa,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGmE,EAAE,CAACmC,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGzB,EAAE,CAAC0B,IAAI,CAACpC,EAAE,CAAC;MAC/F,CAAO,CAAC;IACR;EACA,CAAG;EACD,MAAMyC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIvK,KAAK,CAAC0E,UAAU,IAAIzD,MAAM,CAACE,UAAU,KAAKF,MAAM,CAACsB,aAAa,EAAE;MAClEtB,MAAM,CAACqB,KAAK,GAAGrB,MAAM,CAACsB,aAAa;IACzC;IACIiI,iBAAiB,CAACvJ,MAAM,CAACE,UAAU,CAAC;IACpC,OAAOmJ,QAAQ,CAAC,MAAM;MACpBlB,eAAe,CAACnI,MAAM,CAACE,UAAU,CAAC;IACxC,CAAK,CAAC;EACN,CAAG;EACD,MAAMsJ,sBAAsB,GAAGC,QAAc,CAACH,aAAa,EAAEtF,UAAQ,CAACtB,KAAK,CAAC;EAC5E,MAAM6G,iBAAiB,GAAIzB,GAAG,IAAK;IACjC,IAAI9H,MAAM,CAACmB,aAAa,KAAK2G,GAAG,EAAE;MAChC;IACN;IACI9H,MAAM,CAACmB,aAAa,GAAG2G,GAAG;IAC1B,IAAI/I,KAAK,CAAC0E,UAAU,IAAIiG,UAAU,CAAC3K,KAAK,CAAC4K,YAAY,CAAC,EAAE;MACtD5K,KAAK,CAAC4K,YAAY,CAAC7B,GAAG,CAAC;IAC7B,CAAK,MAAM,IAAI/I,KAAK,CAAC0E,UAAU,IAAI1E,KAAK,CAACyE,MAAM,IAAIkG,UAAU,CAAC3K,KAAK,CAAC6K,YAAY,CAAC,EAAE;MAC7E7K,KAAK,CAAC6K,YAAY,CAAC9B,GAAG,CAAC;IAC7B;EACA,CAAG;EACD,MAAM+B,UAAU,GAAI/B,GAAG,IAAK;IAC1B,IAAI,CAACgC,OAAO,CAAC/K,KAAK,CAACgE,UAAU,EAAE+E,GAAG,CAAC,EAAE;MACnC9I,IAAI,CAAC+K,YAAY,EAAEjC,GAAG,CAAC;IAC7B;EACA,CAAG;EACD,MAAMkC,MAAM,GAAIlC,GAAG,IAAK;IACtB9I,IAAI,CAACiL,kBAAkB,EAAEnC,GAAG,CAAC;IAC7B+B,UAAU,CAAC/B,GAAG,CAAC;IACf9H,MAAM,CAACoB,aAAa,GAAG8I,MAAM,CAACpC,GAAG,CAAC;EACtC,CAAG;EACD,MAAMqC,aAAa,GAAGA,CAACC,GAAG,GAAG,EAAE,EAAE1H,KAAK,KAAK;IACzC,IAAI,CAAC2H,QAAQ,CAAC3H,KAAK,CAAC,EAAE;MACpB,OAAO0H,GAAG,CAACE,OAAO,CAAC5H,KAAK,CAAC;IAC/B;IACI,MAAM6H,QAAQ,GAAGxL,KAAK,CAACwL,QAAQ;IAC/B,IAAI3E,KAAK,GAAG,CAAC,CAAC;IACdwE,GAAG,CAACI,IAAI,CAAC,CAACxF,IAAI,EAAEyF,CAAC,KAAK;MACpB,IAAI7C,GAAG,CAAC5C,IAAI,EAAEuF,QAAQ,CAAC,KAAK3C,GAAG,CAAClF,KAAK,EAAE6H,QAAQ,CAAC,EAAE;QAChD3E,KAAK,GAAG6E,CAAC;QACT,OAAO,IAAI;MACnB;MACM,OAAO,KAAK;IAClB,CAAK,CAAC;IACF,OAAO7E,KAAK;EAChB,CAAG;EACD,MAAME,WAAW,GAAId,IAAI,IAAK;IAC5B,OAAOqF,QAAQ,CAACrF,IAAI,CAAC,GAAG4C,GAAG,CAAC5C,IAAI,EAAEjG,KAAK,CAACwL,QAAQ,CAAC,GAAGvF,IAAI;EAC5D,CAAG;EACD,MAAM0F,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOrB,QAAQ,CAAC,MAAM;MACpB,IAAIxC,EAAE,EAAEU,EAAE;MACV,IAAI,CAAC1F,QAAQ,CAACa,KAAK,EACjB;MACF,MAAMiI,SAAS,GAAG1I,YAAY,CAACS,KAAK;MACpCV,SAAS,CAACU,KAAK,CAACE,MAAM,GAAG+H,SAAS,CAACC,YAAY;MAC/C,IAAIzI,QAAQ,CAACO,KAAK,IAAIuB,SAAS,CAACvB,KAAK,KAAK,KAAK,EAAE;QAC/C,CAAC6E,EAAE,GAAG,CAACV,EAAE,GAAG9E,MAAM,CAACW,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGmE,EAAE,CAACqC,YAAY,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG3B,EAAE,CAAC0B,IAAI,CAACpC,EAAE,CAAC;MACpG;IACA,CAAK,CAAC;EACN,CAAG;EACD,MAAMgE,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIhE,EAAE,EAAEU,EAAE;IACVuD,eAAe,EAAE;IACjBlE,mBAAmB,EAAE;IACrB,CAACW,EAAE,GAAG,CAACV,EAAE,GAAG9E,MAAM,CAACW,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGmE,EAAE,CAACqC,YAAY,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG3B,EAAE,CAAC0B,IAAI,CAACpC,EAAE,CAAC;IAC5F,IAAI9H,KAAK,CAACmE,QAAQ,EAAE;MAClB,OAAOwH,gBAAgB,EAAE;IAC/B;EACA,CAAG;EACD,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMzE,MAAM,GAAGpE,YAAY,CAACS,KAAK;IACjC,IAAI2D,MAAM,EAAE;MACVrG,MAAM,CAACiB,WAAW,GAAGoF,MAAM,CAAC0E,qBAAqB,EAAE,CAAC/D,KAAK;IAC/D;EACA,CAAG;EACD,MAAMgE,QAAQ,GAAGA,CAACrF,MAAM,EAAEsF,GAAG,EAAEC,OAAO,GAAG,IAAI,KAAK;IAChD,IAAIrE,EAAE,EAAEU,EAAE;IACV,IAAIxI,KAAK,CAACmE,QAAQ,EAAE;MAClB,IAAIiI,eAAe,GAAGpM,KAAK,CAACgE,UAAU,CAACiF,KAAK,EAAE;MAC9C,MAAMpC,KAAK,GAAGuE,aAAa,CAACgB,eAAe,EAAEvL,QAAQ,CAAC+F,MAAM,CAAC,CAAC;MAC9D,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAE;QACduF,eAAe,GAAG,CAChB,GAAGA,eAAe,CAACnD,KAAK,CAAC,CAAC,EAAEpC,KAAK,CAAC,EAClC,GAAGuF,eAAe,CAACnD,KAAK,CAACpC,KAAK,GAAG,CAAC,CAAC,CACpC;QACD5F,MAAM,CAACM,aAAa,CAAC8K,MAAM,CAACxF,KAAK,EAAE,CAAC,CAAC;QACrCwC,eAAe,CAACzC,MAAM,CAAC;MAC/B,CAAO,MAAM,IAAI5G,KAAK,CAACsM,aAAa,IAAI,CAAC,IAAIF,eAAe,CAACxI,MAAM,GAAG5D,KAAK,CAACsM,aAAa,EAAE;QACnFF,eAAe,GAAG,CAAC,GAAGA,eAAe,EAAEvL,QAAQ,CAAC+F,MAAM,CAAC,CAAC;QACxD3F,MAAM,CAACM,aAAa,CAAC6E,IAAI,CAACQ,MAAM,CAAC;QACjC0C,eAAe,CAAC1C,MAAM,CAAC;QACvB2F,mBAAmB,CAACL,GAAG,CAAC;MAChC;MACMjB,MAAM,CAACmB,eAAe,CAAC;MACvB,IAAIxF,MAAM,CAAC4F,OAAO,EAAE;QAClBvL,MAAM,CAACqB,KAAK,GAAG,EAAE;QACjBkI,iBAAiB,CAAC,EAAE,CAAC;QACrBvJ,MAAM,CAACgB,WAAW,GAAG,EAAE;MAC/B;MACM,IAAIjC,KAAK,CAAC0E,UAAU,IAAI,CAAC1E,KAAK,CAACyM,cAAc,EAAE;QAC7C,CAACjE,EAAE,GAAG,CAACV,EAAE,GAAGhF,QAAQ,CAACa,KAAK,EAAEsG,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGzB,EAAE,CAAC0B,IAAI,CAACpC,EAAE,CAAC;QACjE4E,kBAAkB,CAAC,EAAE,CAAC;MAC9B;MACM,IAAI1M,KAAK,CAAC0E,UAAU,EAAE;QACpBzD,MAAM,CAACI,eAAe,GAAG8B,aAAa,CAACQ,KAAK,CAACqI,qBAAqB,EAAE,CAAC/D,KAAK;MAClF;MACM0D,gBAAgB,EAAE;MAClBgB,YAAY,EAAE;IACpB,CAAK,MAAM;MACLjK,aAAa,CAACiB,KAAK,GAAGuI,GAAG;MACzBjL,MAAM,CAACsB,aAAa,GAAG3B,QAAQ,CAACgG,MAAM,CAAC;MACvCqE,MAAM,CAACpK,QAAQ,CAAC+F,MAAM,CAAC,CAAC;MACxBxD,QAAQ,CAACO,KAAK,GAAG,KAAK;MACtB1C,MAAM,CAACe,WAAW,GAAG,KAAK;MAC1Bf,MAAM,CAACc,YAAY,GAAGoK,OAAO;MAC7B7C,eAAe,CAAC1C,MAAM,CAAC;MACvB,IAAI,CAACA,MAAM,CAAC4F,OAAO,EAAE;QACnBjD,iBAAiB,EAAE;MAC3B;MACMgD,mBAAmB,CAACL,GAAG,CAAC;IAC9B;EACA,CAAG;EACD,MAAMU,SAAS,GAAGA,CAACC,KAAK,EAAEjG,MAAM,KAAK;IACnC,IAAIwF,eAAe,GAAGpM,KAAK,CAACgE,UAAU,CAACiF,KAAK,EAAE;IAC9C,MAAMpC,KAAK,GAAGuE,aAAa,CAACgB,eAAe,EAAEvL,QAAQ,CAAC+F,MAAM,CAAC,CAAC;IAC9D,IAAIC,KAAK,GAAG,CAAC,CAAC,IAAI,CAACxD,cAAc,CAACM,KAAK,EAAE;MACvCyI,eAAe,GAAG,CAChB,GAAGpM,KAAK,CAACgE,UAAU,CAACiF,KAAK,CAAC,CAAC,EAAEpC,KAAK,CAAC,EACnC,GAAG7G,KAAK,CAACgE,UAAU,CAACiF,KAAK,CAACpC,KAAK,GAAG,CAAC,CAAC,CACrC;MACD5F,MAAM,CAACM,aAAa,CAAC8K,MAAM,CAACxF,KAAK,EAAE,CAAC,CAAC;MACrCoE,MAAM,CAACmB,eAAe,CAAC;MACvBnM,IAAI,CAAC,YAAY,EAAEY,QAAQ,CAAC+F,MAAM,CAAC,CAAC;MACpC3F,MAAM,CAACuB,SAAS,GAAG,IAAI;MACvB6G,eAAe,CAACzC,MAAM,CAAC;MACvB,OAAO0D,QAAQ,CAACP,mBAAmB,CAAC;IAC1C;IACI8C,KAAK,CAACC,eAAe,EAAE;EAC3B,CAAG;EACD,MAAMC,WAAW,GAAIF,KAAK,IAAK;IAC7B,MAAMG,OAAO,GAAG/L,MAAM,CAACe,WAAW;IAClCf,MAAM,CAACe,WAAW,GAAG,IAAI;IACzB,IAAI,CAACf,MAAM,CAACuB,SAAS,EAAE;MACrB,IAAI,CAACwK,OAAO,EACV/M,IAAI,CAAC,OAAO,EAAE4M,KAAK,CAAC;IAC5B,CAAK,MAAM;MACL5L,MAAM,CAACuB,SAAS,GAAG,KAAK;IAC9B;EACA,CAAG;EACD,MAAMyK,UAAU,GAAIJ,KAAK,IAAK;IAC5B5L,MAAM,CAACuB,SAAS,GAAG,KAAK;IACxB,OAAO8H,QAAQ,CAAC,MAAM;MACpB,IAAIxC,EAAE,EAAEU,EAAE;MACV,CAACA,EAAE,GAAG,CAACV,EAAE,GAAGhF,QAAQ,CAACa,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGmE,EAAE,CAACoF,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG1E,EAAE,CAAC0B,IAAI,CAACpC,EAAE,CAAC;MACtF,IAAI3E,aAAa,CAACQ,KAAK,EAAE;QACvB1C,MAAM,CAACI,eAAe,GAAG8B,aAAa,CAACQ,KAAK,CAACqI,qBAAqB,EAAE,CAAC/D,KAAK;MAClF;MACM,IAAIhH,MAAM,CAACc,YAAY,EAAE;QACvBd,MAAM,CAACc,YAAY,GAAG,KAAK;MACnC,CAAO,MAAM;QACL,IAAId,MAAM,CAACe,WAAW,EAAE;UACtB/B,IAAI,CAAC,MAAM,EAAE4M,KAAK,CAAC;QAC7B;MACA;MACM5L,MAAM,CAACe,WAAW,GAAG,KAAK;IAChC,CAAK,CAAC;EACN,CAAG;EACD,MAAMmL,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIlM,MAAM,CAACG,iBAAiB,CAACwC,MAAM,GAAG,CAAC,EAAE;MACvC8I,kBAAkB,CAAC,EAAE,CAAC;IAC5B,CAAK,MAAM;MACLtJ,QAAQ,CAACO,KAAK,GAAG,KAAK;IAC5B;EACA,CAAG;EACD,MAAMyJ,SAAS,GAAIvD,CAAC,IAAK;IACvB,IAAI5I,MAAM,CAACG,iBAAiB,CAACwC,MAAM,KAAK,CAAC,EAAE;MACzCiG,CAAC,CAACwD,cAAc,EAAE;MAClB,MAAMC,QAAQ,GAAGtN,KAAK,CAACgE,UAAU,CAACiF,KAAK,EAAE;MACzCqE,QAAQ,CAACC,GAAG,EAAE;MACdlE,eAAe,CAACpI,MAAM,CAACM,aAAa,CAACgM,GAAG,EAAE,CAAC;MAC3CtC,MAAM,CAACqC,QAAQ,CAAC;IACtB;EACA,CAAG;EACD,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,UAAU;IACd,IAAIpJ,OAAO,CAACrE,KAAK,CAACgE,UAAU,CAAC,EAAE;MAC7ByJ,UAAU,GAAG,EAAE;IACrB,CAAK,MAAM;MACLA,UAAU,GAAG,KAAK,CAAC;IACzB;IACIxM,MAAM,CAACuB,SAAS,GAAG,IAAI;IACvB,IAAIxC,KAAK,CAACmE,QAAQ,EAAE;MAClBlD,MAAM,CAACM,aAAa,GAAG,EAAE;IAC/B,CAAK,MAAM;MACLN,MAAM,CAACsB,aAAa,GAAG,EAAE;IAC/B;IACIa,QAAQ,CAACO,KAAK,GAAG,KAAK;IACtBsH,MAAM,CAACwC,UAAU,CAAC;IAClBxN,IAAI,CAAC,OAAO,CAAC;IACbsJ,iBAAiB,EAAE;IACnB,OAAOe,QAAQ,CAACP,mBAAmB,CAAC;EACxC,CAAG;EACD,MAAM2C,kBAAkB,GAAI3D,GAAG,IAAK;IAClC9H,MAAM,CAACG,iBAAiB,GAAG2H,GAAG;IAC9B9H,MAAM,CAACE,UAAU,GAAG4H,GAAG;EAC3B,CAAG;EACD,MAAM2E,kBAAkB,GAAGA,CAACC,SAAS,EAAE/L,aAAa,GAAG,KAAK,CAAC,KAAK;IAChE,MAAMuD,OAAO,GAAGzB,eAAe,CAACC,KAAK;IACrC,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,CAACiK,QAAQ,CAACD,SAAS,CAAC,IAAItK,cAAc,CAACM,KAAK,IAAIwB,OAAO,CAACvB,MAAM,IAAI,CAAC,IAAIoD,kBAAkB,CAACrD,KAAK,EAAE;MAC3H;IACN;IACI,IAAI,CAACP,QAAQ,CAACO,KAAK,EAAE;MACnB,OAAOyG,UAAU,EAAE;IACzB;IACI,IAAIxI,aAAa,KAAK,KAAK,CAAC,EAAE;MAC5BA,aAAa,GAAGX,MAAM,CAACW,aAAa;IAC1C;IACI,IAAIiM,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAIF,SAAS,KAAK,SAAS,EAAE;MAC3BE,QAAQ,GAAGjM,aAAa,GAAG,CAAC;MAC5B,IAAIiM,QAAQ,IAAI1I,OAAO,CAACvB,MAAM,EAAE;QAC9BiK,QAAQ,GAAG,CAAC;MACpB;IACA,CAAK,MAAM,IAAIF,SAAS,KAAK,UAAU,EAAE;MACnCE,QAAQ,GAAGjM,aAAa,GAAG,CAAC;MAC5B,IAAIiM,QAAQ,GAAG,CAAC,IAAIA,QAAQ,IAAI1I,OAAO,CAACvB,MAAM,EAAE;QAC9CiK,QAAQ,GAAG1I,OAAO,CAACvB,MAAM,GAAG,CAAC;MACrC;IACA;IACI,MAAMgD,MAAM,GAAGzB,OAAO,CAAC0I,QAAQ,CAAC;IAChC,IAAI/M,WAAW,CAAC8F,MAAM,CAAC,IAAIA,MAAM,CAACL,IAAI,KAAK,OAAO,EAAE;MAClD,OAAOmH,kBAAkB,CAACC,SAAS,EAAEE,QAAQ,CAAC;IACpD,CAAK,MAAM;MACLtB,mBAAmB,CAACsB,QAAQ,CAAC;MAC7BC,YAAY,CAACD,QAAQ,CAAC;IAC5B;EACA,CAAG;EACD,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAAC3K,QAAQ,CAACO,KAAK,EAAE;MACnB,OAAOyG,UAAU,EAAE;IACzB,CAAK,MAAM,IAAI,CAACnJ,MAAM,CAACW,aAAa,IAAI8B,eAAe,CAACC,KAAK,CAAC1C,MAAM,CAACW,aAAa,CAAC,EAAE;MAC/EqK,QAAQ,CAACvI,eAAe,CAACC,KAAK,CAAC1C,MAAM,CAACW,aAAa,CAAC,EAAEX,MAAM,CAACW,aAAa,EAAE,KAAK,CAAC;IACxF;EACA,CAAG;EACD,MAAM2K,mBAAmB,GAAIL,GAAG,IAAK;IACnCjL,MAAM,CAACW,aAAa,GAAGsK,GAAG;EAC9B,CAAG;EACD,MAAM8B,kBAAkB,GAAGA,CAAA,KAAM;IAC/B/M,MAAM,CAACW,aAAa,GAAG,CAAC,CAAC;EAC7B,CAAG;EACD,MAAM+K,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI7E,EAAE;IACN,MAAMmG,MAAM,GAAGnL,QAAQ,CAACa,KAAK;IAC7B,IAAIsK,MAAM,EAAE;MACV,CAACnG,EAAE,GAAGmG,MAAM,CAAChE,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGnC,EAAE,CAACoC,IAAI,CAAC+D,MAAM,CAAC;IAC5D;EACA,CAAG;EACD,MAAMnE,OAAO,GAAI+C,KAAK,IAAK;IACzB,MAAMlJ,KAAK,GAAGkJ,KAAK,CAACqB,MAAM,CAACvK,KAAK;IAChC+I,kBAAkB,CAAC/I,KAAK,CAAC;IACzB,IAAI1C,MAAM,CAACG,iBAAiB,CAACwC,MAAM,GAAG,CAAC,IAAI,CAACR,QAAQ,CAACO,KAAK,EAAE;MAC1DP,QAAQ,CAACO,KAAK,GAAG,IAAI;IAC3B;IACI1C,MAAM,CAACI,eAAe,GAAG8B,aAAa,CAACQ,KAAK,CAACqI,qBAAqB,EAAE,CAAC/D,KAAK;IAC1E,IAAIjI,KAAK,CAACmE,QAAQ,EAAE;MAClBwH,gBAAgB,EAAE;IACxB;IACI,IAAI3L,KAAK,CAACyE,MAAM,EAAE;MAChBgG,sBAAsB,EAAE;IAC9B,CAAK,MAAM;MACL,OAAOF,aAAa,EAAE;IAC5B;EACA,CAAG;EACD,MAAM4D,kBAAkB,GAAGA,CAAA,KAAM;IAC/B/K,QAAQ,CAACO,KAAK,GAAG,KAAK;IACtB,OAAOsJ,UAAU,EAAE;EACvB,CAAG;EACD,MAAMmB,eAAe,GAAGA,CAAA,KAAM;IAC5BnN,MAAM,CAACE,UAAU,GAAGF,MAAM,CAACG,iBAAiB;IAC5C,OAAOkJ,QAAQ,CAAC,MAAM;MACpB,IAAI,CAAC5B,QAAQ,CAAC/E,KAAK,EAAE;QACnB4I,mBAAmB,CAAC7D,QAAQ,CAAC/E,KAAK,CAAC;QACnCmK,YAAY,CAAC7M,MAAM,CAACW,aAAa,CAAC;MAC1C;IACA,CAAK,CAAC;EACN,CAAG;EACD,MAAMkM,YAAY,GAAIjH,KAAK,IAAK;IAC9B9D,OAAO,CAACY,KAAK,CAACmK,YAAY,CAACjH,KAAK,CAAC;EACrC,CAAG;EACD,MAAMwH,UAAU,GAAGA,CAAA,KAAM;IACvBL,kBAAkB,EAAE;IACpB,IAAIhO,KAAK,CAACmE,QAAQ,EAAE;MAClB,IAAInE,KAAK,CAACgE,UAAU,CAACJ,MAAM,GAAG,CAAC,EAAE;QAC/B,IAAI0K,YAAY,GAAG,KAAK;QACxBrN,MAAM,CAACM,aAAa,CAACqC,MAAM,GAAG,CAAC;QAC/B3C,MAAM,CAACoB,aAAa,GAAGrC,KAAK,CAACgE,UAAU,CAACuK,QAAQ,EAAE;QAClD,KAAK,MAAM5K,KAAK,IAAI3D,KAAK,CAACgE,UAAU,EAAE;UACpC,MAAMwK,WAAW,GAAGzH,WAAW,CAACpD,KAAK,CAAC;UACtC,IAAI6C,uBAAuB,CAAC7C,KAAK,CAACiF,GAAG,CAAC4F,WAAW,CAAC,EAAE;YAClD,MAAM;cAAE3H,KAAK;cAAED;YAAM,CAAE,GAAGJ,uBAAuB,CAAC7C,KAAK,CAACkF,GAAG,CAAC2F,WAAW,CAAC;YACxEvN,MAAM,CAACM,aAAa,CAAC6E,IAAI,CAACQ,MAAM,CAAC;YACjC,IAAI,CAAC0H,YAAY,EAAE;cACjB/B,mBAAmB,CAAC1F,KAAK,CAAC;YACxC;YACYyH,YAAY,GAAG,IAAI;UAC/B;QACA;MACA,CAAO,MAAM;QACLrN,MAAM,CAACM,aAAa,GAAG,EAAE;QACzBN,MAAM,CAACoB,aAAa,GAAG,KAAK,CAAC;MACrC;IACA,CAAK,MAAM;MACL,IAAIyB,aAAa,CAACH,KAAK,EAAE;QACvB1C,MAAM,CAACoB,aAAa,GAAGrC,KAAK,CAACgE,UAAU;QACvC,MAAMmB,OAAO,GAAGzB,eAAe,CAACC,KAAK;QACrC,MAAM8K,iBAAiB,GAAGtJ,OAAO,CAACuJ,SAAS,CAAE9H,MAAM,IAAKG,WAAW,CAAClG,QAAQ,CAAC+F,MAAM,CAAC,CAAC,KAAKG,WAAW,CAAC/G,KAAK,CAACgE,UAAU,CAAC,CAAC;QACxH,IAAI,CAACyK,iBAAiB,EAAE;UACtBxN,MAAM,CAACsB,aAAa,GAAG3B,QAAQ,CAACuE,OAAO,CAACsJ,iBAAiB,CAAC,CAAC;UAC3DlC,mBAAmB,CAACkC,iBAAiB,CAAC;QAChD,CAAS,MAAM;UACLxN,MAAM,CAACsB,aAAa,GAAGwE,WAAW,CAAC/G,KAAK,CAACgE,UAAU,CAAC;QAC9D;MACA,CAAO,MAAM;QACL/C,MAAM,CAACsB,aAAa,GAAG,EAAE;QACzBtB,MAAM,CAACoB,aAAa,GAAG,KAAK,CAAC;MACrC;IACA;IACIkH,iBAAiB,EAAE;IACnB1B,mBAAmB,EAAE;EACzB,CAAG;EACD8G,KAAK,CAACvL,QAAQ,EAAG2F,GAAG,IAAK;IACvB,IAAIjB,EAAE,EAAEU,EAAE;IACVvI,IAAI,CAAC,gBAAgB,EAAE8I,GAAG,CAAC;IAC3B,IAAIA,GAAG,EAAE;MACP,CAACP,EAAE,GAAG,CAACV,EAAE,GAAG9E,MAAM,CAACW,KAAK,EAAEsH,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGzC,EAAE,CAAC0B,IAAI,CAACpC,EAAE,CAAC;IACtE,CAAK,MAAM;MACL7G,MAAM,CAACG,iBAAiB,GAAG,EAAE;MAC7BH,MAAM,CAACmB,aAAa,GAAG,IAAI;MAC3BgH,eAAe,CAAC,EAAE,CAAC;IACzB;EACA,CAAG,CAAC;EACFuF,KAAK,CAAC,MAAM3O,KAAK,CAACgE,UAAU,EAAE,CAAC+E,GAAG,EAAE6F,MAAM,KAAK;IAC7C,IAAI9G,EAAE;IACN,IAAI,CAACiB,GAAG,IAAIA,GAAG,CAACwF,QAAQ,EAAE,KAAKtN,MAAM,CAACoB,aAAa,EAAE;MACnDgM,UAAU,EAAE;IAClB;IACI,IAAI,CAACtD,OAAO,CAAChC,GAAG,EAAE6F,MAAM,CAAC,IAAI5O,KAAK,CAAC6O,aAAa,EAAE;MAChD,CAAC/G,EAAE,GAAGpH,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACoO,QAAQ,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGhH,EAAE,CAACoC,IAAI,CAACxJ,UAAU,EAAE,QAAQ,CAAC,CAACqO,KAAK,CAAEC,GAAG,IAAKC,SAAS,CAACD,GAAG,CAAC,CAAC;IAC9I;EACA,CAAG,EAAE;IACDE,IAAI,EAAE;EACV,CAAG,CAAC;EACFP,KAAK,CAAC,MAAM3O,KAAK,CAACmF,OAAO,EAAE,MAAM;IAC/B,MAAMgK,KAAK,GAAGrM,QAAQ,CAACa,KAAK;IAC5B,IAAI,CAACwL,KAAK,IAAIA,KAAK,IAAIC,QAAQ,CAACC,aAAa,KAAKF,KAAK,EAAE;MACvDd,UAAU,EAAE;IAClB;EACA,CAAG,EAAE;IACDa,IAAI,EAAE;EACV,CAAG,CAAC;EACFP,KAAK,CAACjL,eAAe,EAAE,MAAM;IAC3B,OAAOX,OAAO,CAACY,KAAK,IAAI2G,QAAQ,CAACvH,OAAO,CAACY,KAAK,CAAC2L,cAAc,CAAC;EAClE,CAAG,CAAC;EACFX,KAAK,CAAC,MAAM7F,mBAAmB,CAACnF,KAAK,EAAGoF,GAAG,IAAK;IAC9C,IAAI,CAACA,GAAG,EAAE;MACRiF,kBAAkB,EAAE;IAC1B;EACA,CAAG,CAAC;EACFuB,SAAS,CAAC,MAAM;IACdlB,UAAU,EAAE;EAChB,CAAG,CAAC;EACFmB,iBAAiB,CAACvM,SAAS,EAAE6I,YAAY,CAAC;EAC1C,OAAO;IACL1E,eAAe;IACfzF,kBAAkB;IAClByB,QAAQ;IACR8B,SAAS;IACT1B,WAAW;IACfkH,QAAA,EAAIzF,UAAQ;IACRvB,eAAe;IACfc,aAAa;IACbI,WAAW;IACXoD,iBAAiB;IACjBpF,UAAU;IACVkG,mBAAmB;IACnBhF,aAAa;IACbsE,qBAAqB;IACrB/E,cAAc;IACd6D,UAAU;IACVjD,YAAY;IACZhD,MAAM;IACNoG,WAAW;IACXjH,UAAU;IACVE,OAAO;IACP6C,aAAa;IACbN,UAAU;IACVC,QAAQ;IACRC,OAAO;IACPC,MAAM;IACNC,SAAS;IACTC,YAAY;IACZqF,SAAS;IACTzD,aAAa;IACbC,YAAY;IACZiE,WAAW;IACXG,eAAe;IACfsB,sBAAsB;IACtBmC,SAAS;IACThM,QAAQ;IACRC,QAAQ;IACRC,WAAW;IACXiG,WAAW;IACXkG,UAAU;IACVO,WAAW;IACXW,kBAAkB;IAClBf,SAAS;IACTD,SAAS;IACTJ,WAAW;IACXqB,eAAe;IACftC,YAAY;IACZ1B,UAAU;IACVqF,QAAQ,EAAE3B,YAAY;IACtBhE,OAAO;IACP4D,kBAAkB;IAClBK,gBAAgB;IAChB9B,QAAQ;IACRyD,OAAO,EAAEnD,mBAAmB;IAC5BG,kBAAkB;IAClBjD,sBAAsB;IACtBE,oBAAoB;IACpBD;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}