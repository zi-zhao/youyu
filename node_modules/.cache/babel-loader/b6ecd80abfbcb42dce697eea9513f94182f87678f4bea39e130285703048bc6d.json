{"ast":null,"code":"import { createVNode as _createVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveDirective as _resolveDirective, resolveComponent as _resolveComponent, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/TheEditor/CloseCatalog.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-03fddc7a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"body_bgc\"\n};\nconst _hoisted_2 = {\n  class: \"large\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"border-radius\": \"4px\",\n    \"box-shadow\": \"0px 2px 4px 0px rgba(0, 0, 0, 0.25)\"\n  }\n};\nconst _hoisted_4 = {\n  class: \"header\"\n};\nconst _hoisted_5 = {\n  style: {\n    \"background-color\": \"#fff\"\n  }\n};\nconst _hoisted_6 = {\n  class: \"drawer-btn\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"custom-title-class\"\n}, \"文章目录\", -1 /* HOISTED */));\nconst _hoisted_8 = [\"id\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_DArrowLeft = _resolveComponent(\"DArrowLeft\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_drawer = _resolveComponent(\"el-drawer\");\n  const _directive_add = _resolveDirective(\"add\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode($setup[\"Toolbar\"], {\n    style: {\n      \"border-bottom\": \"1px solid #ccc\",\n      \"width\": \"1100px\"\n    },\n    editor: $setup.editorRef,\n    defaultConfig: $setup.toolbarConfig,\n    mode: _ctx.mode\n  }, null, 8 /* PROPS */, [\"editor\", \"mode\"]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"请输入文章标题\",\n    class: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.title = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.title]])]), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createVNode($setup[\"Editor\"], {\n    style: {\n      \"height\": \"500px\",\n      \"overflow-y\": \"hidden\",\n      \"width\": \"1020px\",\n      \"margin-top\": \"0px\",\n      \"padding\": \"0px 40px\"\n    },\n    modelValue: $setup.valueHtml,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.valueHtml = $event),\n    defaultConfig: $setup.editorConfig,\n    mode: _ctx.mode,\n    onOnCreated: $setup.handleCreated,\n    class: \"content\"\n  }, null, 8 /* PROPS */, [\"modelValue\", \"mode\"]), [[_directive_add]])])])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_button, {\n    class: \"top-right-button\",\n    type: \"primary\",\n    onClick: _cache[2] || (_cache[2] = $event => $setup.drawer = true)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode(_component_DArrowLeft)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_el_drawer, {\n    modelValue: $setup.drawer,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.drawer = $event),\n    direction: $setup.direction,\n    \"before-close\": $setup.handleClose,\n    \"show-close\": false,\n    modal: false,\n    \"lock-scroll\": false\n  }, {\n    title: _withCtx(() => [_hoisted_7]),\n    default: _withCtx(() => [_createElementVNode(\"img\", {\n      src: _imports_0,\n      class: \"custom-close-btn\",\n      onClick: _cache[3] || (_cache[3] = $event => $setup.drawer = false)\n    }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.menuList, (articlemenu, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index\n      }, [_createElementVNode(\"span\", {\n        id: articlemenu.id,\n        class: _normalizeClass(articlemenu.level === 1 ? 'h1-class' : 'other-class'),\n        onClick: $event => $setup.scrollTo(articlemenu.id)\n      }, _toDisplayString(articlemenu.title), 11 /* TEXT, CLASS, PROPS */, _hoisted_8)]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"direction\"]), _createVNode($setup[\"PictureAndAttachment\"], {\n    Submit: $setup.submitState\n  }, null, 8 /* PROPS */, [\"Submit\"]), _createVNode($setup[\"ToSubmit\"]), _createCommentVNode(\" 底部滚动条 \"), _createElementVNode(\"div\", {\n    class: \"foot\"\n  }, [_createElementVNode(\"div\", {\n    class: \"b-container\"\n  }, [_createElementVNode(\"button\", {\n    class: \"b-1\",\n    onClick: $setup.saveArticleDraft\n  }, \"保存草稿\"), _createCommentVNode(\" <button class=\\\"b-1\\\">定时发布</button> \"), _createElementVNode(\"button\", {\n    class: \"b-2\",\n    onClick: $setup.postArticlePost\n  }, \"发表文章\")])])]);\n}","map":{"version":3,"names":["_imports_0","class","style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","$setup","editor","editorRef","defaultConfig","toolbarConfig","mode","_ctx","_hoisted_4","type","placeholder","title","$event","_hoisted_5","valueHtml","editorConfig","onOnCreated","handleCreated","_hoisted_6","_component_el_button","onClick","_cache","drawer","_component_el_icon","_component_DArrowLeft","_component_el_drawer","direction","handleClose","modal","_withCtx","_hoisted_7","src","_Fragment","_renderList","menuList","articlemenu","index","key","id","_normalizeClass","level","scrollTo","_hoisted_8","Submit","submitState","_createCommentVNode","saveArticleDraft","postArticlePost"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\CreateCenter\\components\\WorkManagement\\TheEditor\\WangEditor.vue"],"sourcesContent":["<template>\r\n  <div class=\"body_bgc\">\r\n    <div class=\"large\">\r\n      <div style=\"  border-radius: 4px; box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.25);\">\r\n        <Toolbar\r\n          style=\"border-bottom: 1px solid #ccc;width: 1100px;\"\r\n          :editor=\"editorRef\"\r\n          :defaultConfig=\"toolbarConfig\"\r\n          :mode=\"mode\"\r\n        />\r\n        <div class=\"header\">\r\n          <input type=\"text\" placeholder=\"请输入文章标题\" class=\"title\" v-model=\"title\">\r\n        </div>\r\n        <div style=\"background-color: #fff;\">\r\n          <Editor\r\n            style=\"height: 500px; overflow-y: hidden;width: 1020px;margin-top: 0px;padding: 0px 40px;\"\r\n            v-model=\"valueHtml\"\r\n            v-add\r\n            :defaultConfig=\"editorConfig\"\r\n            :mode=\"mode\"\r\n            @onCreated=\"handleCreated\"\r\n            class=\"content\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"drawer-btn\">\r\n      <el-button   \r\n        class=\"top-right-button\" \r\n        type=\"primary\" \r\n        @click=\"drawer = true\">\r\n        <el-icon><DArrowLeft /></el-icon>\r\n      </el-button>\r\n    </div>\r\n    <el-drawer\r\n      v-model=\"drawer\"\r\n      :direction=\"direction\"\r\n      :before-close=\"handleClose\"\r\n      :show-close=\"false\"\r\n      :modal=\"false\"\r\n      :lock-scroll=\"false\"\r\n    >\r\n      <template #title>\r\n          <div class=\"custom-title-class\">文章目录</div>\r\n      </template>\r\n      <img src=\"@/assets/TheEditor/CloseCatalog.svg\" class=\"custom-close-btn\" @click=\"drawer = false\">\r\n      <div v-for=\"(articlemenu, index) in menuList\" :key=\"index\">\r\n        <span :id=\"articlemenu.id\" \r\n          :class=\"articlemenu.level === 1 ? 'h1-class' : 'other-class'\"\r\n          @click=\"scrollTo(articlemenu.id)\"\r\n        >\r\n          {{ articlemenu.title }}\r\n        </span>\r\n      </div>\r\n    </el-drawer>\r\n    <PictureAndAttachment :Submit = \"submitState\"></PictureAndAttachment>\r\n    <ToSubmit />\r\n    <!-- 底部滚动条 -->\r\n    <div class=\"foot\">\r\n      <div class=\"b-container\">\r\n        <button class=\"b-1\" @click=\"saveArticleDraft\">保存草稿</button>\r\n        <!-- <button class=\"b-1\">定时发布</button> -->\r\n        <button class=\"b-2\" @click=\"postArticlePost\">发表文章</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport '@wangeditor/editor/dist/css/style.css' // 引入 css\r\nimport { onBeforeUnmount,ref, onMounted,shallowRef, watch,reactive,toRaw} from 'vue'\r\nimport { Editor , Toolbar } from '@wangeditor/editor-for-vue'\r\nimport{Boot} from '@wangeditor/editor'\r\nimport { useStore } from 'vuex';\r\nimport axios from '@/utils/request'\r\nimport ToSubmit from './components/ToSubmit.vue'\r\nimport PictureAndAttachment from './PictureAndAttachment.vue'\r\nimport formulaModule from '@wangeditor/plugin-formula'\r\nimport { ElMessage,ElMessageBox } from 'element-plus';\r\nimport { useRoute,useRouter} from 'vue-router';\r\nimport {compressImage} from '@/utils/fileService';\r\nimport {getArticleContentPermission} from '@/utils/cosService';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst title = ref('');//存放文章标题\r\nconst store = useStore();\r\nconst article = ref('');//存放文章数据\r\nconst valueHtml = ref('');\r\nconst articleId = parseInt(route.params.id,10);//路径中的文章ID\r\nconst submitState = ref('1');\r\n\r\n// 注册。要在创建编辑器之前注册，且只能注册一次，不可重复注册。\r\nif (!store.getters.hasRegisteredMenu) {\r\n  Boot.registerModule(formulaModule);\r\n  store.dispatch('registerMenu');\r\n}\r\n\r\n// 编辑器实例，使用 shallowRef\r\nconst editorRef = shallowRef();\r\nconst handleCreated = (editor) => {\r\n  editorRef.value = editor; // 记录 editor 实例\r\n}\r\n\r\n// 设置弹出框相关参数\r\nconst toolbarConfig = {insertKeys: {\r\n  index: 34, // 插入的位置，基于当前的 toolbarKeys\r\n  keys: [\r\n    'insertFormula'],\r\n}}\r\nconst editorConfig = { \r\n  placeholder: '请输入内容...',\r\n  MENU_CONF: {\r\n    uploadImage: {\r\n      async customUpload(file, insertFn) {   \r\n        const articleId = localStorage.getItem(\"articleId\"); // 获取文章ID\r\n        const timestamp = new Date().getTime(); // 获取当前时间戳\r\n        const filePictureName = `${timestamp}-${file.name}`; // 在文件名前加时间戳\r\n        const compressedFile = await compressImage(file);\r\n        const url = await getArticleContentPermission(compressedFile,articleId,filePictureName);\r\n        insertFn(url);\r\n      }\r\n    }\r\n  },\r\n  hoverbarKeys: {\r\n    formula: {\r\n      menuKeys: ['editFormula'], // “编辑公式”菜单\r\n    },\r\n  }, \r\n}\r\n\r\n// 组件销毁时，也及时销毁编辑器\r\nonBeforeUnmount(() => {\r\n    const editor = editorRef.value;\r\n    if (editor == null) return\r\n    editor.destroy()\r\n})\r\n\r\n//获取文章内容\r\nasync function fetchArticleContent(id) {\r\n  try {\r\n    const response = await axios.get(`/article/${id}`);\r\n    if ( response.data.code === 1) {\r\n      article.value = response.data.data;\r\n      title.value = article.value.title;\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n      ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error('无法找到匹配文章数据', response.data.msg || 'Unknown error');\r\n      ElMessage.error('无法找到匹配文章数据');\r\n    }\r\n  } catch (error) {\r\n    console.error('无法获取接口数据', error.message);\r\n    ElMessage.error('无法找到匹配文章数据');\r\n  }\r\n}\r\n\r\n/**\r\n * 这里定义了一些目录相关的参数\r\n * 以及目录关闭时调用的方法\r\n * 以及，你也想哈哈吗\r\n */\r\nconst drawer = ref(false)\r\nconst direction = ref('rtl')\r\nconst menuList = ref([])\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('哈哈，你也想关目录吗')\r\n    .then(() => {\r\n      done();\r\n    })\r\n    .catch(() => {\r\n    });\r\n};\r\n\r\nconst handlerMenu = () => {\r\n  let content = document.querySelector(\".content\")\r\n  let els = content.querySelectorAll(\"h1,h2,h3,h4,h5,h6\")\r\n  let menus = []\r\n  if (els) {\r\n    els.forEach((item, index) => {\r\n      let menu = {}\r\n      menu.isActive = null\r\n      menu.title = item.innerText\r\n      menu.scrollTop = item.offsetTop\r\n      let level = item.tagName.toLowerCase().replace(\"h\", \"\")\r\n      menu.level = parseInt(level)\r\n      item.setAttribute(\"id\", `menus_${index+1}`)\r\n      menu.id = `#menus_${index+1}`\r\n      menus.push(menu)\r\n    })\r\n  }\r\n  menuList.value = menus\r\n}\r\n\r\nconst scrollTo = (id) => {\r\n    const element = document.querySelector(id);\r\n    if (element!==0) {\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n};\r\n\r\n//保存草稿的提示弹框\r\nconst saveArticleDraft = async () => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要将文章保存为草稿吗（网站只会保存文章编辑器中的内容和文章标题，不会保存附件、封面图及其他选项的值）？',\r\n      {\r\n        confirmButtonText: '确认保存',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }\r\n    );\r\n    await saveArticle();\r\n  } catch {\r\n    console.log('关闭弹框')\r\n  }\r\n}\r\n\r\n//发表文章的提示弹框\r\nconst postArticlePost = async () => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要发表文章吗（请确认已经填写了所有文章的相关信息，否则无法通过审核）？',\r\n      {\r\n        confirmButtonText: '确认发表',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }\r\n    );\r\n    await postArticle();\r\n  } catch {\r\n    console.log('关闭弹框')\r\n  }\r\n}\r\n\r\nfunction checkProperties(...objects) {\r\n  for (let obj of objects) {\r\n    for (let key in obj) {\r\n      if (obj[key] === null || obj[key] === undefined || obj[key] === '') {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n//将文章添加到专栏接口\r\nasync function uploadColumn() {\r\n  const response2 = await axios.post('/column/article', {\r\n    columnId:store.state.submitColumnId,\r\n    contentId:articleId\r\n  });\r\n  if(response2.data.code ===1) {\r\n    ElMessage.success('添加专栏成功');\r\n  }\r\n  else if(response2.data.code === 0 && response2.data.msg){\r\n    ElMessage.error(response2.data.msg.toString());\r\n  }else ElMessage.error('添加专栏失败');\r\n}\r\n\r\n//提交文章的接口\r\nasync function postArticle(){\r\n  let articleCon = reactive({\r\n    get title(){ return title.value},\r\n    get content(){ return valueHtml.value}\r\n  })\r\n  const first = ref({\r\n    id:articleId,\r\n    editorType:0,//富文本编辑器\r\n  })\r\n  const submitData = toRaw(store.state.submitDate);\r\n  const isValid = checkProperties(submitData, first.value, articleCon);\r\n  if(isValid){\r\n    ElMessage.error('未填写所有信息');\r\n    return;\r\n  }\r\n  const data = {...submitData,...first.value,...articleCon};\r\n  try {\r\n    const response = await axios.post('/article', data);//发表文章接口\r\n    if(response.data.code ===1) {\r\n      ElMessage.success('发表文章成功');\r\n      uploadColumn();\r\n      submitState.value = '2';\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n      ElMessage.error(response.data.msg.toString());\r\n    }\r\n    else ElMessage.error('发表文章失败');\r\n  } catch (error) {\r\n    console.log(error);\r\n    ElMessage.error('发表文章失败');\r\n  }\r\n}\r\n\r\n//保存草稿的接口\r\nasync function saveArticle(){\r\n  let articleCon = reactive({\r\n    get title(){ return title.value},\r\n    get content(){ return valueHtml.value}\r\n  })\r\n  const first = ref({\r\n    id:articleId,\r\n    editorType:0,//富文本编辑器\r\n  })\r\n  const data = {...first.value,...articleCon}\r\n  try {\r\n    const response = await axios.put('/article/draft', data);\r\n    if(response.data.code ===1) {\r\n      ElMessage.success('保存草稿成功');\r\n      router.push('/CreateCenter');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n      ElMessage.error(response.data.msg.toString());\r\n    }\r\n    else ElMessage.error('保存草稿失败');\r\n  } catch (error) {\r\n    console.log(error);\r\n    ElMessage.error('保存草稿失败');\r\n  }\r\n}\r\n\r\n\r\nwatch(valueHtml, () => {\r\n  handlerMenu();\r\n});\r\n\r\n\r\nonMounted(async () => {\r\n  await fetchArticleContent(articleId);\r\n  valueHtml.value = article.value.content;  // 更新编辑器内容\r\n  handlerMenu();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.body_bgc{\r\n  background-color: #fdfbf6;\r\n}\r\n.large{\r\n  width: 1100px;\r\n  margin: 0px auto 20px;\r\n  z-index:1;\r\n}\r\n.header{\r\n  width: 1100px;\r\n  height: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: auto;\r\n  background-color: #fff;\r\n}\r\n.title{\r\n  width: 100%;\r\n  height: 30px;\r\n  padding: 20px 30px 15px 30px;\r\n  border-radius: 16px;\r\n  border: none;\r\n  margin: 0px 20px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  border-bottom: 1px solid rgb(244 244 244);\r\n}\r\n.title:focus{\r\n  outline: none;\r\n}\r\n/* .one{\r\n  width: 80px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #DCDFE6;\r\n  font-size: 15px;\r\n  margin: 20px;\r\n  cursor: pointer;\r\n}\r\n.two{\r\n  width: 80px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #DCDFE6;\r\n  background-color: #9FA9CA;\r\n  font-size: 15px;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n}\r\n.large_submit1{\r\n    border-radius: 4px 4px 0px 0px;\r\n    background: #fff;\r\n    box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\r\n    width: 1020px;\r\n    padding: 24px 40px 0px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 20px auto 0px;\r\n    gap:20px\r\n} */\r\nlabel{\r\n    color: #606266;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 16px;\r\n    margin-right: 80px;\r\n    cursor: pointer;\r\n}\r\n\r\n.el-input__inner{\r\n    text-align: center;\r\n}\r\n/* .image-container {\r\n    width: 180px;\r\n    height: 180px;\r\n    border: 1px dashed #bbbbbb;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    position: relative;\r\n}\r\n.pic_contain{\r\n  position: relative;\r\n}\r\ni.delete-btn2 {\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 8px;\r\n  cursor: pointer;\r\n} */\r\n\r\n/* .spic{\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    width: 180px;\r\n    height: 180px;\r\n    border-radius: 10px;\r\n    border: 1px dashed #bbbbbb;\r\n}\r\n.plus-sign {\r\n  font-size: 2rem;\r\n} */\r\n\r\n.foot{\r\n  width: 100%;\r\n  height: 38px;\r\n  border-radius: 8px;\r\n  border: 1px solid #DCDFE6;\r\n  background: #FFF;\r\n  position: fixed;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px 0 10px;\r\n  \r\n}\r\n.b-1{\r\n  display: inline-flex;\r\n  padding: 8px 16px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 16px;\r\n  border-radius: 16px;\r\n  border: 1px solid #DCDFE6;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n}\r\n.b-2{\r\n  display: inline-flex;\r\n  padding: 8px 16px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 16px;\r\n  border-radius: 16px;\r\n  border: #FFF;\r\n  background: #9FA9CA;\r\n  cursor: pointer;\r\n}\r\n.b-container{\r\n  position: absolute;\r\n  right: 40px;\r\n}\r\n.drawer-btn .el-button {\r\n    width: 22px;\r\n    height: 60px;\r\n    padding:3px;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 10px rgb(0 0 0 / 15%);\r\n    border: none;\r\n}\r\n::v-deep .top-right-button .el-icon svg{\r\n  color: black !important;;\r\n}\r\n.top-right-button {\r\n  position: fixed; \r\n  top: 40%; \r\n  right: 0px; \r\n}\r\n.custom-close-btn {\r\n  position: absolute;\r\n  top: 25px;\r\n  right: 15px;\r\n  cursor: pointer;\r\n}\r\n.custom-title-class {\r\n  color: black; /* 修改标题颜色 */\r\n  font-size: 24px; /* 修改标题字体大小 */\r\n  font-family: '黑体', 'Heiti', sans-serif; /* 修改标题字体 */\r\n}\r\n\r\n.h1-class{\r\n  color: #595959;\r\n  font-size: 18px; /* 修改文本字体大小 */\r\n  line-height: 2;\r\n  font-family: '宋体', 'SongTi', sans-serif;\r\n  cursor: pointer;\r\n}\r\n\r\n.other-class{\r\n  color: #595959;\r\n  font-size: 18px; /* 修改文本字体大小 */\r\n  line-height: 1.5;\r\n  font-family: '宋体', 'SongTi', sans-serif;\r\n  padding-left: 20px;\r\n  cursor: pointer;\r\n}\r\n::v-deep .top-right-button{\r\n  color: #000000;\r\n  background-color: #9fa9ca;\r\n  border-color: #9199b2;\r\n}\r\n::v-deep .other-class::before {\r\n  content: '';  /* 没有内容 */\r\n  display: inline-block;\r\n  width: 3px;  /* 黑点的宽度 */\r\n  height: 3px;  /* 黑点的高度 */\r\n  background-color: #595959;  /* 黑点的颜色 */\r\n  border-radius: 50%;  /* 使黑点呈圆形 */\r\n  margin-right: 8px;  /* 与文本内容之间的间距 */\r\n  vertical-align: middle; /* 使黑点居中 */\r\n}\r\n::v-deep .el-drawer__close-btn{\r\n  color: #000000;\r\n}\r\n::v-deep .h1-class::before {\r\n  content: '';  /* 没有内容 */\r\n  display: inline-block;\r\n  width: 6px;  /* 黑点的宽度 */\r\n  height: 6px;  /* 黑点的高度 */\r\n  background-color: #595959;  /* 黑点的颜色 */\r\n  border-radius: 50%;  /* 使黑点呈圆形 */\r\n  margin-right: 8px;  /* 与文本内容之间的间距 */\r\n  vertical-align: middle; /* 使黑点居中 */\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}