{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6ba8dcc6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"large\"\n};\nconst _hoisted_2 = {\n  class: \"input-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"custom-message-box\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"custom-message-content\"\n}, \"最多可选三个标签\", -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = {\n  id: \"labelBox\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"onKeyup\"];\nconst _hoisted_9 = {\n  class: \"l-container\"\n};\nconst _hoisted_10 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$setup.showMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [..._hoisted_5])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.inputLabel, (word, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index,\n      class: \"wordStyle\"\n    }, [_createTextVNode(_toDisplayString(word) + \" \", 1 /* TEXT */), _createElementVNode(\"i\", {\n      onClick: $event => $setup.deValue(index)\n    }, \"×\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"input\", {\n    ref: \"inputRef\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputText = $event),\n    onKeyup: _withKeys($setup.addInputText, [\"enter\"]),\n    placeholder: \"自定义标签内容在此输入,回车搜索\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_8), [[_vModelText, $setup.inputText]])])]), _createCommentVNode(\" 放置标签 \"), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.label, (context, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index,\n      onClick: $event => $setup.change(context)\n    }, _toDisplayString(context), 9 /* TEXT, PROPS */, _hoisted_10);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_4","id","_createElementBlock","_hoisted_1","_hoisted_2","$setup","showMessage","_hoisted_3","_hoisted_5","_hoisted_6","_Fragment","_renderList","inputLabel","word","index","key","onClick","$event","deValue","_hoisted_7","ref","type","inputText","onKeyup","_withKeys","addInputText","placeholder","_createCommentVNode","_hoisted_9","label","context","change","_hoisted_10"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\TheMain\\components\\TheInput.vue"],"sourcesContent":["<template>\r\n    <div class=\"large\">\r\n        <div class=\"input-container\">\r\n            <div v-if=\"showMessage\" class=\"custom-message-box\">\r\n                <div class=\"custom-message-content\">最多可选三个标签</div>\r\n            </div>\r\n            <div id=\"labelBox\">\r\n                <span v-for=\"(word, index) in inputLabel\" :key=\"index\" class=\"wordStyle\">\r\n                    {{ word }}\r\n                    <i @click=\"deValue(index)\">×</i>\r\n                </span>\r\n                <input\r\n                    ref=\"inputRef\"\r\n                    type=\"text\"\r\n                    v-model=\"inputText\"\r\n                    @keyup.enter=\"addInputText\"\r\n                    placeholder=\"自定义标签内容在此输入,回车搜索\"\r\n                />\r\n            </div>      \r\n        </div>\r\n        <!-- 放置标签 -->\r\n        <div class=\"l-container\">\r\n            <span \r\n                v-for=\"(context,index) in label\" :key=\"index\"\r\n                @click=\"change(context)\"\r\n            >\r\n            {{ context }}\r\n            </span>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import axios from '@/utils/request';\r\n    import { reactive,ref,onMounted,computed,watch} from 'vue';\r\n    import { useStore } from 'vuex';\r\n    import { ElMessage } from 'element-plus';\r\n\r\n    const inputRef = ref(null);//可以通过 inputRef 访问到这个输入框的 DOM 元素(labelbox里的Input),然后通过 inputRef.value 来访问这个元素。\r\n    const store = useStore()\r\n    let showMessage = ref(false);\r\n    let label = reactive([])//存放标签\r\n    let inputLabel = reactive([])//存放文本框中已选择的标签\r\n    let inputText = ref()//存放文本框中用户输入的内容\r\n    let tempInputText = reactive('')//临时存放inputText.value的值\r\n\r\n    /**\r\n     * 初次从数据库获取标签label\r\n     * 页面加载时触发\r\n     */ \r\n    onMounted(() => {\r\n        axios.get('/articlelabel')\r\n        .then((response)=>{\r\n            for(let i = 0;i<16 && i<response.data.data.length;i++){\r\n                label.push(response.data.data[i].name)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        })\r\n    })\r\n\r\n   /**\r\n    * 用户点击任意二级板块后更新标签\r\n    */\r\n    const id = computed(()=>{ return store.state.subBoardId })\r\n    watch(id,(newValue)=>{\r\n        if(newValue !== null){\r\n            label.splice(0,label.length)\r\n            inputLabel.splice(0,inputLabel.length)\r\n            store.commit('SELECT',inputLabel)\r\n            axios.get(`/articlelabel/${id.value}`)\r\n            .then((response)=>{\r\n                for(let i = 0;i<20&&i<response.data.data.length;i++){\r\n                    label.push(response.data.data[i].name)\r\n                }\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n            })\r\n        }\r\n    })\r\n\r\n\r\n\r\n    /**\r\n     * 这个方法首先判断文本框中的已选标签是否超过三个，若超过则弹出1秒的警示信息\r\n     * 若未超过则将用户选择的标签放入文本框，同时将数据存入Vuex store\r\n     */\r\n    const change = (context) => {\r\n        if (inputLabel.includes(context)) {\r\n            ElMessage.error( \"标签已被选择！\"); \r\n            return;\r\n        }\r\n        if (inputLabel.length >= 3) {\r\n            ElMessage.error( \"不能选择超过3个标签！\"); \r\n            return;\r\n        }\r\n        inputLabel.push(context); \r\n        store.commit('SELECT', inputLabel); \r\n    };\r\n    /**\r\n     * 删除inputvalue数组里从索引为index参数开始的1个数据\r\n     * 当用户点击文本框中已选标签旁边的“x”时触发\r\n     */\r\n     const deValue = (index) => {\r\n        inputLabel.splice(index, 1);\r\n        store.commit('SELECT',inputLabel);\r\n    }\r\n\r\n\r\n    /**\r\n     * 将文本框中的内容存入Vuex store中\r\n     * 这个方法在用户按下回车键时触发\r\n     */\r\n    function addInputText(){\r\n        tempInputText = inputText.value;\r\n        store.commit('CUSTOM',tempInputText);\r\n        store.commit('SELECTSTATE',1);\r\n    }\r\n\r\n  \r\n</script>\r\n\r\n\r\n<style scoped>\r\n.large{\r\n    text-align: center;\r\n    margin-top: 20px;\r\n}\r\n\r\n.custom-message-box {\r\n    position: absolute;\r\n    width: 165px;\r\n    height: 40px;\r\n    top: -55px; \r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    z-index: 1000; \r\n}\r\n\r\n.custom-message-content {\r\n    padding: 10px;\r\n    background-color: #d7d7da;\r\n    color: black;\r\n    border-radius: 10px;\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.input-container{\r\n    width: 620px;\r\n    height: 40px;\r\n    border-radius: 30px;\r\n    background-color: white;\r\n    margin: 0px auto 15px;\r\n    position: relative;\r\n}\r\n#labelBox{\r\n    height: 40px;\r\n    border-radius: 30px;\r\n    background-color: white;\r\n    display: flex;  /* 添加此行使得标签和输入框在线性布局中 */\r\n    align-items: center;  /* 垂直居中 */\r\n    padding: 0 10px;  /* 为容器添加一些内边距 */\r\n}\r\n/* 设置输入框下方标签样式 */\r\nspan{\r\n    display: inline-block;\r\n    margin: 5px;\r\n    padding: 2px 13px;\r\n    color: #000;\r\n    background-color: rgb(255 255 255 / 53%);\r\n    border-radius: 15px;\r\n    font-size: 14px;\r\n    line-height: 25px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n}\r\n.wordStyle{\r\n    display: flex;\r\n    align-items: center;  /* 垂直居中 */\r\n    height: 25px;\r\n    background-color: #8187A5;\r\n    color: white;\r\n}\r\ninput{\r\n    flex-grow: 1;  /* 使输入框能够填充容器的剩余空间 */\r\n    margin-left: 5px;  /* 和前一个标签之间的间距 */\r\n    display: inline-block;\r\n    height: 40px;\r\n    padding: 0px 3px;\r\n    font-size: 17px;\r\n    border-radius: 30px;\r\n    border: black;\r\n}\r\ninput:focus{\r\n    outline: none;\r\n}\r\n.l-container{\r\n    width: 600px;\r\n    margin: auto;\r\n    overflow-wrap: break-word;\r\n}\r\n/* 对手机屏幕和小尺寸屏幕的样式调整 */\r\n@media (max-width: 768px) {\r\n    .large {\r\n        margin-top: 50px;\r\n    }\r\n\r\n    .input-container {\r\n        width: 90%; /* 在小屏幕上使用更大的比例 */\r\n    }\r\n\r\n    #labelBox {\r\n        padding: 0 5px; /* 减小内边距 */\r\n    }\r\n\r\n    .l-container {\r\n        width: 90%; /* 在小屏幕上使用更大的比例 */\r\n    }\r\n\r\n    .custom-message-box {\r\n        width: auto; /* 自动宽度 */\r\n        top: -45px; /* 调整位置 */\r\n        font-size: 14px; /* 调整字体大小 */\r\n    }\r\n\r\n    input {\r\n        font-size: 15px; /* 在小屏幕上减小字体大小 */\r\n    }\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAO;;EACTA,KAAK,EAAC;AAAiB;;;EACAA,KAAK,EAAC;;gEAC1BC,mBAAA,CAAkD;EAA7CD,KAAK,EAAC;AAAwB,GAAC,UAAQ;oBAA5CE,UAAkD,C;;EAEjDC,EAAE,EAAC;AAAU;;;;EAejBH,KAAK,EAAC;AAAa;;;uBApB5BI,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BFJ,mBAAA,CAiBM,OAjBNK,UAiBM,GAhBSC,MAAA,CAAAC,WAAW,I,cAAtBJ,mBAAA,CAEM,OAFNK,UAEM,MAAAC,UAAA,M,mCACNT,mBAAA,CAYM,OAZNU,UAYM,I,kBAXFP,mBAAA,CAGOQ,SAAA,QAAAC,WAAA,CAHuBN,MAAA,CAAAO,UAAU,GAA1BC,IAAI,EAAEC,KAAK;yBAAzBZ,mBAAA,CAGO;MAHoCa,GAAG,EAAED,KAAK;MAAEhB,KAAK,EAAC;0CACtDe,IAAI,IAAG,GACV,iBAAAd,mBAAA,CAAgC;MAA5BiB,OAAK,EAAAC,MAAA,IAAEZ,MAAA,CAAAa,OAAO,CAACJ,KAAK;OAAG,GAAC,iBAAAK,UAAA,E;kDAEhCpB,mBAAA,CAME;IALEqB,GAAG,EAAC,UAAU;IACdC,IAAI,EAAC,MAAM;+DACFhB,MAAA,CAAAiB,SAAS,GAAAL,MAAA;IACjBM,OAAK,EAAAC,SAAA,CAAQnB,MAAA,CAAAoB,YAAY;IAC1BC,WAAW,EAAC;uEAFHrB,MAAA,CAAAiB,SAAS,E,OAM9BK,mBAAA,UAAa,EACb5B,mBAAA,CAOM,OAPN6B,UAOM,I,kBANF1B,mBAAA,CAKOQ,SAAA,QAAAC,WAAA,CAJuBN,MAAA,CAAAwB,KAAK,GAAvBC,OAAO,EAAChB,KAAK;yBADzBZ,mBAAA,CAKO;MAJ+Ba,GAAG,EAAED,KAAK;MAC3CE,OAAK,EAAAC,MAAA,IAAEZ,MAAA,CAAA0B,MAAM,CAACD,OAAO;wBAEvBA,OAAO,wBAAAE,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}