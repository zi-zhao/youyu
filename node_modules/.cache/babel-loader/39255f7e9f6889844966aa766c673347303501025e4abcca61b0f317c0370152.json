{"ast":null,"code":"import { ref } from 'vue';\nimport axios from '@/utils/request';\nimport { ElMessage } from 'element-plus';\nimport TheHeader from '../../components/TheHeader.vue';\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\nexport default {\n  __name: 'PersonNav',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userAvatar = ref(null); // 这里保存从后端获取的头像 URL\n    const userData = ref(''); //存放文章作者数据\n    const article = ref({});\n\n    //获取用户点击文章id\n    const getPathParams = () => {\n      // 获取当前页面的完整 URL\n      const currentURL = window.location.href;\n      // 使用正则表达式来匹配 URL 中的数字部分\n      const match = currentURL.match(/\\/TheArticle\\/(\\d+)/);\n      // 如果匹配成功，match[1] 就包含了数字部分\n      if (match) {\n        const pageNumber = match[1];\n        return pageNumber;\n      } else {\n        console.log('页面地址中没有找到数字部分。');\n      }\n    };\n    const articleId = getPathParams();\n    async function fetchArticleContent(id) {\n      try {\n        const response = await axios.get(`/article/${id}`);\n        if (response.data && response.data.code === 1) {\n          const data = response.data.data;\n          article.value.userId = data.userId;\n          article.value.username = data.username;\n          article.value.createTime = data.createTime;\n          article.value.summary = data.summary;\n          article.value.title = data.title;\n          article.value.label = data.label.split(',');\n          article.value.subBoardName = data.subBoardName;\n          fetchAvatar();\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('无法找到匹配文章数据', response.data.msg || 'Unknown error');\n        }\n      } catch (error) {\n        console.error('无法获取接口数据', error.message);\n      }\n      fetchUserData();\n    }\n    async function fetchUserData() {\n      try {\n        // const response = await axios.get(`/users/${article.value.userId}?apifoxApiId=100741633`);\n        const response = await axios.get(`/users/${article.value.userId}`);\n        if (response.data && response.data.code === 1) {\n          userData.value = response.data.data;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('无法找到匹配文章数据', response.data.msg || 'Unknown error');\n        }\n      } catch (error) {\n        console.error('无法获取接口数据', error.message);\n      }\n    }\n\n    // 获取用户头像\n    const fetchAvatar = async () => {\n      try {\n        const avatar = await getUsersAvatarFromCOS(article.value.userId);\n        userAvatar.value = avatar;\n      } catch (error) {\n        console.error(\"Error fetching user avatar:\", error);\n      }\n    };\n\n    // const navigateToUserProfile = () => {\n    //     console.log('点击用户头像跳转');\n    //     const routeLocation = router.resolve({ path: '/PersonalPage' });\n    //     window.open(routeLocation.href, '_blank');\n    // };       \n\n    fetchArticleContent(articleId);\n    const __returned__ = {\n      userAvatar,\n      userData,\n      article,\n      getPathParams,\n      articleId,\n      fetchArticleContent,\n      fetchUserData,\n      fetchAvatar,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      TheHeader,\n      get getUsersAvatarFromCOS() {\n        return getUsersAvatarFromCOS;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","ElMessage","TheHeader","getUsersAvatarFromCOS","userAvatar","userData","article","getPathParams","currentURL","window","location","href","match","pageNumber","console","log","articleId","fetchArticleContent","id","response","get","data","code","value","userId","username","createTime","summary","title","label","split","subBoardName","fetchAvatar","msg","error","toString","message","fetchUserData","avatar"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/TheArticle/components/PersonNav.vue"],"sourcesContent":["<template>\r\n  <TheHeader></TheHeader>\r\n  <h1 class=\"title1\">\r\n    <div>{{ article.title }}</div>\r\n  </h1>\r\n  <div class=\"nav2\">\r\n    <div class=\"contain1\">\r\n      标签：\r\n      <div class=\"tag-cla\" v-for=\"label in article.label\" :key=\"label\">{{ label }}</div>\r\n    </div>\r\n    <div class=\"contain2\">\r\n    分类:\r\n      <div class=\"tag-cla\">{{ article.subBoardName }}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"introduction\">\r\n    <div class=\"content1\" >\r\n      <div style=\"line-height: 1.6;\" v-html=\"article.summary \"></div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script setup>\r\n  import { ref  } from 'vue';\r\n  import axios from '@/utils/request';\r\n  import { ElMessage } from 'element-plus';\r\n  import TheHeader from '../../components/TheHeader.vue';\r\n  import { getUsersAvatarFromCOS } from '@/utils/cosService';\r\n\r\n  const userAvatar = ref(null);  // 这里保存从后端获取的头像 URL\r\n  const userData = ref('');//存放文章作者数据\r\n  const article = ref({});\r\n\r\n  //获取用户点击文章id\r\n  const getPathParams = () => {\r\n    // 获取当前页面的完整 URL\r\n    const currentURL = window.location.href;\r\n    // 使用正则表达式来匹配 URL 中的数字部分\r\n    const match = currentURL.match(/\\/TheArticle\\/(\\d+)/);\r\n    // 如果匹配成功，match[1] 就包含了数字部分\r\n    if (match) {\r\n        const pageNumber = match[1];\r\n        return pageNumber;\r\n    } else {\r\n        console.log('页面地址中没有找到数字部分。');\r\n    }\r\n  }\r\n\r\n  const articleId = getPathParams()\r\n  async function fetchArticleContent(id) {\r\n    try {\r\n      const response = await axios.get(`/article/${id}`);\r\n      if (response.data && response.data.code === 1) {\r\n        const data = response.data.data;\r\n        article.value.userId = data.userId;\r\n        article.value.username = data.username;\r\n        article.value.createTime = data.createTime;\r\n        article.value.summary = data.summary;\r\n        article.value.title = data.title;\r\n        article.value.label = data.label.split(','); \r\n        article.value.subBoardName = data.subBoardName; \r\n        fetchAvatar();\r\n      } else if(response.data.code === 0 && response.data.msg){\r\n          ElMessage.error(response.data.msg.toString());\r\n      }else {\r\n        console.error('无法找到匹配文章数据', response.data.msg || 'Unknown error');\r\n      }\r\n    } catch (error) {\r\n      console.error('无法获取接口数据', error.message);\r\n    }\r\n    fetchUserData();\r\n  }\r\n\r\n  async function fetchUserData() {\r\n    try {\r\n     // const response = await axios.get(`/users/${article.value.userId}?apifoxApiId=100741633`);\r\n       const response = await axios.get(`/users/${article.value.userId}`);\r\n      if (response.data && response.data.code === 1) {\r\n        userData.value = response.data.data;\r\n      }else if(response.data.code === 0 && response.data.msg){\r\n          ElMessage.error(response.data.msg.toString());\r\n      }else {\r\n        console.error('无法找到匹配文章数据', response.data.msg || 'Unknown error');\r\n      }\r\n    } catch (error) {\r\n      console.error('无法获取接口数据', error.message);\r\n    }\r\n  }\r\n\r\n\r\n  // 获取用户头像\r\n  const fetchAvatar = async () => {\r\n    try {\r\n        const avatar = await getUsersAvatarFromCOS(article.value.userId);\r\n        userAvatar.value = avatar;\r\n    } catch (error) {\r\n        console.error(\"Error fetching user avatar:\", error);\r\n    }\r\n  };\r\n\r\n  // const navigateToUserProfile = () => {\r\n  //     console.log('点击用户头像跳转');\r\n  //     const routeLocation = router.resolve({ path: '/PersonalPage' });\r\n  //     window.open(routeLocation.href, '_blank');\r\n  // };       \r\n\r\n\r\n  fetchArticleContent(articleId);\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.title1{\r\n  margin-top: 60px;\r\n  text-align: center;\r\n  color: #000;\r\n  font-family: Microsoft YaHei;\r\n  letter-spacing: 3px;\r\n  font-size: 2.5rem;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: normal;\r\n}\r\nbody h1 {\r\n  font-weight: normal;\r\n}\r\n\r\n.nav2 {\r\n  position: relative;\r\n  height: 55px;\r\n  flex-shrink: 0;\r\n  margin-top: 1vh; \r\n  background-color: #f7f7f7;\r\n  display: flex;            \r\n  justify-content: center;  \r\n  align-items: center;      \r\n  gap: 1vw; \r\n}\r\n\r\n.contain1, .contain2 {\r\n  display: flex;\r\n  align-items: center;      \r\n  gap: 1vw;  \r\n  white-space: nowrap;     \r\n}\r\n.tag-cla{\r\n  display: inline-block;\r\n  padding: 8px 15px;\r\n  line-height: 1;\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 16px;\r\n  font-size: 14px;\r\n  color: #333;\r\n  user-select: none; /* 禁止文本被选中 */\r\n  cursor: default; \r\n}\r\n.introduction {\r\n    width: 900px;\r\n    padding: 10px 60px;\r\n    background: #fdfcf6;\r\n    margin: 0px auto;\r\n  }\r\n\r\n.content1 {\r\n  flex: 1; \r\n  color: #000;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 16px;\r\n}\r\n@media (max-width:768px){\r\n  .nav2 {\r\n    gap: 2%; \r\n  }\r\n  .title1{\r\n      font-size: 1.5rem;\r\n  }\r\n  .introduction{\r\n      width: auto;\r\n      padding: 1rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAwBE,SAASA,GAAG,QAAS,KAAK;AAC1B,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,SAAS,MAAM,gCAAgC;AACtD,SAASC,qBAAqB,QAAQ,oBAAoB;;;;;;;IAE1D,MAAMC,UAAU,GAAGL,GAAG,CAAC,IAAI,CAAC,CAAC,CAAE;IAC/B,MAAMM,QAAQ,GAAGN,GAAG,CAAC,EAAE,CAAC,CAAC;IACzB,MAAMO,OAAO,GAAGP,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEvB;IACA,MAAMQ,aAAa,GAAGA,CAAA,KAAM;MAC1B;MACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI;MACvC;MACA,MAAMC,KAAK,GAAGJ,UAAU,CAACI,KAAK,CAAC,qBAAqB,CAAC;MACrD;MACA,IAAIA,KAAK,EAAE;QACP,MAAMC,UAAU,GAAGD,KAAK,CAAC,CAAC,CAAC;QAC3B,OAAOC,UAAU;MACrB,CAAC,MAAM;QACHC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MACjC;IACF,CAAC;IAED,MAAMC,SAAS,GAAGT,aAAa,CAAC,CAAC;IACjC,eAAeU,mBAAmBA,CAACC,EAAE,EAAE;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAE,YAAWF,EAAG,EAAC,CAAC;QAClD,IAAIC,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,EAAE;UAC7C,MAAMD,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAACA,IAAI;UAC/Bf,OAAO,CAACiB,KAAK,CAACC,MAAM,GAAGH,IAAI,CAACG,MAAM;UAClClB,OAAO,CAACiB,KAAK,CAACE,QAAQ,GAAGJ,IAAI,CAACI,QAAQ;UACtCnB,OAAO,CAACiB,KAAK,CAACG,UAAU,GAAGL,IAAI,CAACK,UAAU;UAC1CpB,OAAO,CAACiB,KAAK,CAACI,OAAO,GAAGN,IAAI,CAACM,OAAO;UACpCrB,OAAO,CAACiB,KAAK,CAACK,KAAK,GAAGP,IAAI,CAACO,KAAK;UAChCtB,OAAO,CAACiB,KAAK,CAACM,KAAK,GAAGR,IAAI,CAACQ,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;UAC3CxB,OAAO,CAACiB,KAAK,CAACQ,YAAY,GAAGV,IAAI,CAACU,YAAY;UAC9CC,WAAW,CAAC,CAAC;QACf,CAAC,MAAM,IAAGb,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIH,QAAQ,CAACE,IAAI,CAACY,GAAG,EAAC;UACpDhC,SAAS,CAACiC,KAAK,CAACf,QAAQ,CAACE,IAAI,CAACY,GAAG,CAACE,QAAQ,CAAC,CAAC,CAAC;QACjD,CAAC,MAAK;UACJrB,OAAO,CAACoB,KAAK,CAAC,YAAY,EAAEf,QAAQ,CAACE,IAAI,CAACY,GAAG,IAAI,eAAe,CAAC;QACnE;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC1C;MACAC,aAAa,CAAC,CAAC;IACjB;IAEA,eAAeA,aAAaA,CAAA,EAAG;MAC7B,IAAI;QACH;QACE,MAAMlB,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAE,UAASd,OAAO,CAACiB,KAAK,CAACC,MAAO,EAAC,CAAC;QACnE,IAAIL,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,EAAE;UAC7CjB,QAAQ,CAACkB,KAAK,GAAGJ,QAAQ,CAACE,IAAI,CAACA,IAAI;QACrC,CAAC,MAAK,IAAGF,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIH,QAAQ,CAACE,IAAI,CAACY,GAAG,EAAC;UACnDhC,SAAS,CAACiC,KAAK,CAACf,QAAQ,CAACE,IAAI,CAACY,GAAG,CAACE,QAAQ,CAAC,CAAC,CAAC;QACjD,CAAC,MAAK;UACJrB,OAAO,CAACoB,KAAK,CAAC,YAAY,EAAEf,QAAQ,CAACE,IAAI,CAACY,GAAG,IAAI,eAAe,CAAC;QACnE;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC1C;IACF;;IAGA;IACA,MAAMJ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMM,MAAM,GAAG,MAAMnC,qBAAqB,CAACG,OAAO,CAACiB,KAAK,CAACC,MAAM,CAAC;QAChEpB,UAAU,CAACmB,KAAK,GAAGe,MAAM;MAC7B,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACZpB,OAAO,CAACoB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;;IAED;IACA;IACA;IACA;IACA;;IAGAjB,mBAAmB,CAACD,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}