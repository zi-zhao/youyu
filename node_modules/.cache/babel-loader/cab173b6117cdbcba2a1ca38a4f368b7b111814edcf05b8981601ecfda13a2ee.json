{"ast":null,"code":"import { useStore } from 'vuex';\nimport axios from '@/utils/request';\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'PassWord',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const labelPosition = ref('top');\n    const formLabelAlign = reactive({\n      data: '',\n      password: ''\n    });\n\n    //手机号和邮箱正则表达式\n    const phoneRegex = /^1[3-9]\\d{9}$/;\n    const emailRegex = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n    const combinedRegex = new RegExp(`(${phoneRegex.source})|(${emailRegex.source})`);\n    // 设置校验规则\n    const rules = reactive({\n      data: [{\n        required: true,\n        message: '请输入手机号',\n        trigger: 'blur'\n      }, {\n        pattern: combinedRegex,\n        message: '请输入有效的手机号',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        pattern: /^\\S{6,15}$/,\n        message: '密码必须是6-15位非空字符',\n        trigger: 'change'\n      }]\n    });\n    let allFieldsValid = ref(false); //所有表单是否符合规则\n    const myForm = ref(null);\n    //验证输入框是否符合规则\n    function checkAllFields() {\n      // formTouched.value = true;\n      myForm.value.validate(valid => {\n        allFieldsValid.value = valid;\n      });\n    }\n\n    // 保存token\n    const store = useStore();\n    // const getToken = (token)=>{\n    //   store.commit('GETTOKEN',token)\n    // }\n    // const getUserId = (userId)=>{\n    //   store.commit('GETUSERID',userId)\n    // }\n    // const getUserName = (username)=>{\n    //   store.commit('GETUSERNAME',username)\n    // }\n\n    // 发送密码登录数据请求\n    function loadOn() {\n      myForm.value.validate(valid => {\n        if (valid) {\n          axios.post('/users/loginByPassword', formLabelAlign).then(response => {\n            if (response.data.code === 1) {\n              if (response.headers[\"authorization\"]) {\n                console.log('--------下面是登录成功后的打印');\n                console.log(response);\n                localStorage.setItem('token', response.headers[\"authorization\"]);\n                localStorage.setItem('userId', response.data.data.id);\n                localStorage.setItem('userName', response.data.data.username);\n                // getToken(response.headers[\"authorization\"])\n                // getUserId(response.data.data.id)\n                // getUserName(response.data.data.username)\n                ElMessage.success('登录成功');\n                store.commit('DOWNLOAD', false); // 关闭登录dialog \n                // router.push('/VideoMain');\n                router.push('/DefaultPresentation');\n              } else {\n                ElMessage.error('登录失败');\n              }\n            } else if (response.data.code === 0 && response.data.msg) {\n              ElMessage.error(response.data.msg.toString());\n            } else {\n              console.log('登录失败');\n              ElMessage.error('登录失败');\n            }\n          }).catch(error => {\n            // 响应失败，处理错误\n            console.error(error);\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    }\n    const __returned__ = {\n      router,\n      labelPosition,\n      formLabelAlign,\n      phoneRegex,\n      emailRegex,\n      combinedRegex,\n      rules,\n      get allFieldsValid() {\n        return allFieldsValid;\n      },\n      set allFieldsValid(v) {\n        allFieldsValid = v;\n      },\n      myForm,\n      checkAllFields,\n      store,\n      loadOn,\n      get useStore() {\n        return useStore;\n      },\n      get axios() {\n        return axios;\n      },\n      ref,\n      reactive,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useStore","axios","ref","reactive","useRouter","ElMessage","router","labelPosition","formLabelAlign","data","password","phoneRegex","emailRegex","combinedRegex","RegExp","source","rules","required","message","trigger","pattern","allFieldsValid","myForm","checkAllFields","value","validate","valid","store","loadOn","post","then","response","code","headers","console","log","localStorage","setItem","id","username","success","commit","push","error","msg","toString","catch"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/TheFirst/components/TheDialog/PassWord.vue"],"sourcesContent":["<template>\r\n    <div class=\"form\">\r\n        <el-form\r\n         ref=\"myForm\"\r\n        :label-position=\"labelPosition\"\r\n        label-width=\"100px\"\r\n        :model=\"formLabelAlign\"\r\n        :rules=\"rules\"\r\n        @submit.prevent=\"loadOn\"\r\n      >\r\n          <el-form-item label=\"手机号\" prop=\"data\">\r\n            <el-input v-model=\"formLabelAlign.data\" @change=\"checkAllFields\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\" class=\"password-box\">\r\n            <el-input v-model=\"formLabelAlign.password\" show-password @change=\"checkAllFields\" />\r\n            <!-- <div class=\"forget-phone\">忘记密码？</div> -->\r\n          </el-form-item>\r\n        </el-form>\r\n    </div>\r\n    \r\n    <div class=\"center-button\">\r\n      <el-button type=\"primary\" round style=\"height: 45px;width: 141px;\" @keyup.enter=\"loadOn\" @click=\"loadOn\" >登录</el-button>\r\n      <!-- 注意这里要加一个点击事件，点击关闭登录弹框，打开注册弹框 -->\r\n      <!-- <div class=\"noaccount\">没有账号?<span style=\"color: #00A6DA;\">去注册</span></div> -->\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from 'vuex';\r\nimport axios from '@/utils/request'\r\nimport {ref,reactive} from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus';\r\n\r\n\r\n  const router = useRouter()\r\n\r\n  const labelPosition = ref('top')\r\n  const formLabelAlign = reactive({\r\n    data: '',\r\n    password: '',\r\n  })\r\n\r\n  //手机号和邮箱正则表达式\r\n  const phoneRegex = /^1[3-9]\\d{9}$/;\r\n  const emailRegex = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\r\n  const combinedRegex = new RegExp(`(${phoneRegex.source})|(${emailRegex.source})`);\r\n // 设置校验规则\r\n  const rules = reactive({\r\n    data:[\r\n      { required: true, message: '请输入手机号', trigger: 'blur' },\r\n      { pattern: combinedRegex, message: '请输入有效的手机号', trigger: 'blur' } \r\n    ],\r\n    password:[\r\n      { required: true, message: '请输入密码', trigger: 'blur'},\r\n      { pattern:/^\\S{6,15}$/,message:'密码必须是6-15位非空字符',trigger:'change'}\r\n    ]\r\n  })\r\n\r\n\r\n\r\n  let allFieldsValid = ref(false);//所有表单是否符合规则\r\n  const myForm = ref(null);\r\n  //验证输入框是否符合规则\r\n  function checkAllFields() {\r\n    // formTouched.value = true;\r\n    myForm.value.validate(valid => {\r\n      allFieldsValid.value = valid;\r\n    });\r\n  }\r\n\r\n\r\n  // 保存token\r\n  const store = useStore()\r\n  // const getToken = (token)=>{\r\n  //   store.commit('GETTOKEN',token)\r\n  // }\r\n  // const getUserId = (userId)=>{\r\n  //   store.commit('GETUSERID',userId)\r\n  // }\r\n  // const getUserName = (username)=>{\r\n  //   store.commit('GETUSERNAME',username)\r\n  // }\r\n\r\n  // 发送密码登录数据请求\r\n  function loadOn(){\r\n    myForm.value.validate((valid) => {\r\n    if (valid) {\r\n      axios.post('/users/loginByPassword',formLabelAlign)\r\n      .then(response=>{\r\n        if (response.data.code === 1  ) { \r\n             if(response.headers[\"authorization\"]){\r\n                  console.log('--------下面是登录成功后的打印')\r\n                  console.log(response)\r\n                  localStorage.setItem('token',response.headers[\"authorization\"])\r\n                  localStorage.setItem('userId',response.data.data.id)\r\n                  localStorage.setItem('userName',response.data.data.username)\r\n                  // getToken(response.headers[\"authorization\"])\r\n                  // getUserId(response.data.data.id)\r\n                  // getUserName(response.data.data.username)\r\n                  ElMessage.success('登录成功');\r\n                  store.commit('DOWNLOAD', false)// 关闭登录dialog \r\n                  // router.push('/VideoMain');\r\n                  router.push('/DefaultPresentation');\r\n              }else{\r\n                  ElMessage.error('登录失败'); \r\n              }              \r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.log('登录失败');\r\n            ElMessage.error('登录失败'); \r\n        }\r\n      })\r\n      .catch(error => {\r\n              // 响应失败，处理错误\r\n              console.error(error);\r\n            });\r\n      }\r\n    else{\r\n      console.log('error submit!!');\r\n      return false;\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form{\r\n\twidth: 100%;\r\n  margin: 3rem auto;\r\n}\r\n.center-button{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 40px;\r\n  position: relative;\r\n}\r\n:deep .password-box .el-form-item__content{\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n}\r\n.forget-phone{\r\n  color:  #2b6ae8;\r\n  line-height: 1.6;\r\n  font-size: 0.8rem;\r\n  height: 40px;\r\n  cursor: pointer;\r\n}\r\n:deep .el-form-item__error {\r\n  top: 45px;\r\n}\r\n.noaccount{\r\n  position: absolute;\r\n  right: 5%;\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n  letter-spacing: 1px;\r\n}\r\n@media (max-width: 768px) {\r\n  .form {\r\n    width: 90%;\r\n    margin: 4rem auto;\r\n  }\r\n  .form .el-form-item {\r\n    margin-bottom: 2rem;\r\n  }\r\n  .center-button{\r\n    margin-right: 0;\r\n  }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}