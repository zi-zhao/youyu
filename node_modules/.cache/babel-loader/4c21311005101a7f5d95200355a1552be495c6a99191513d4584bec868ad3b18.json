{"ast":null,"code":"import { ref, onMounted, watchEffect } from \"vue\";\nimport { ElMessage } from 'element-plus';\nimport axios from '@/utils/request';\nimport { convertDateFormat } from '@/utils/timeFormat';\nexport default {\n  __name: 'TheTable',\n  props: {\n    selectdType: Number\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const userId = ref('');\n    const userCoinData = ref([]);\n    watchEffect(() => {\n      switch (props.selectdType) {\n        case '0':\n          getUserPointChangeList();\n          break;\n        case '1':\n          getUserCoinChangeList();\n          break;\n        case '2':\n          getUserEnergyChangeList();\n          break;\n        case '3':\n          getUserExchange();\n          break;\n        default:\n          ElMessage.error('传参错误！');\n      }\n    });\n    //获取用户鱼饵数据变化列表\n    async function getUserPointChangeList() {\n      try {\n        const response = await axios.get(`/currency/point/page`, {\n          params: {\n            id: userId.value,\n            page: 1,\n            pazeSize: 100\n          }\n        });\n        if (response.data.code === 1) {\n          userCoinData.value = response.data.data.records;\n          for (let record of userCoinData.value) {\n            record.createTime = convertDateFormat(record.createTime);\n          }\n          // ElMessage.success('获取用户鱼饵数据变化列表成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户鱼饵数据变化列表失败\");\n          ElMessage.error('获取用户鱼饵数据变化列表失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户鱼饵数据变化列表失败\", error);\n        ElMessage.error('获取用户鱼饵数据变化列表失败');\n      }\n    }\n\n    //获取用户渔币数据变化列表\n    async function getUserCoinChangeList() {\n      try {\n        const response = await axios.get(`/currency/coin/page`, {\n          params: {\n            id: userId.value,\n            page: 1,\n            pazeSize: 100\n          }\n        });\n        if (response.data.code === 1) {\n          userCoinData.value = response.data.data.records;\n          for (let record of userCoinData.value) {\n            record.createTime = convertDateFormat(record.createTime);\n          }\n          // ElMessage.success('获取用户渔币数据变化列表成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户渔币数据变化列表失败\");\n          ElMessage.error('获取用户渔币数据变化列表失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户渔币数据变化列表失败\", error);\n        ElMessage.error('获取用户渔币数据变化列表失败');\n      }\n    }\n\n    //获取用户能量数据变化列表\n    async function getUserEnergyChangeList() {\n      try {\n        const response = await axios.get(`/currency/energy/page`, {\n          params: {\n            id: userId.value,\n            page: 1,\n            pazeSize: 100\n          }\n        });\n        if (response.data.code === 1) {\n          userCoinData.value = response.data.data.records;\n          for (let record of userCoinData.value) {\n            record.createTime = convertDateFormat(record.createTime);\n          }\n          // ElMessage.success('获取用户能量数据变化列表成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户能量数据变化列表失败\");\n          ElMessage.error('获取用户能量数据变化列表失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户能量数据变化列表失败\", error);\n        ElMessage.error('获取用户能量数据变化列表失败');\n      }\n    }\n\n    //获取用户渔币兑换鱼饵变化列表\n    async function getUserExchange() {\n      try {\n        const response = await axios.get(`/currency/exchange`, {\n          params: {\n            page: 1,\n            pazeSize: 100\n          }\n        });\n        if (response.data.code === 1) {\n          userCoinData.value = response.data.data.records;\n          for (let record of userCoinData.value) {\n            record.createTime = convertDateFormat(record.createTime);\n            record.currencyChange = record.exchangeCount * 10;\n            record.reason = '使用渔币兑换鱼饵';\n          }\n          // ElMessage.success('获取用户渔币数据变化列表成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户渔币数据变化列表失败\");\n          ElMessage.error('获取用户渔币数据变化列表失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户渔币数据变化列表失败\", error);\n        ElMessage.error('获取用户渔币数据变化列表失败');\n      }\n    }\n    onMounted(() => {\n      userId.value = localStorage.getItem(\"userId\"); // 获取用户ID\n    });\n    const __returned__ = {\n      props,\n      userId,\n      userCoinData,\n      getUserPointChangeList,\n      getUserCoinChangeList,\n      getUserEnergyChangeList,\n      getUserExchange,\n      ref,\n      onMounted,\n      watchEffect,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      },\n      get convertDateFormat() {\n        return convertDateFormat;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watchEffect","ElMessage","axios","convertDateFormat","props","__props","userId","userCoinData","selectdType","getUserPointChangeList","getUserCoinChangeList","getUserEnergyChangeList","getUserExchange","error","response","get","params","id","value","page","pazeSize","data","code","records","record","createTime","msg","toString","console","currencyChange","exchangeCount","reason","localStorage","getItem"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/TheSettings/Mypurse/TheTable.vue"],"sourcesContent":["<template>\r\n    <div class=\"record\">\r\n      <el-table :data=\"userCoinData\" style=\"width: 100%\">\r\n      <el-table-column prop=\"createTime\" label=\"日期\" width=\"160\" />\r\n      <el-table-column prop=\"currencyChange\" label=\"变化量\" width=\"100\" />\r\n      <el-table-column prop=\"reason\" label=\"变化原因\" width=\"500\"/>\r\n    </el-table>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref,onMounted,defineProps,watchEffect } from \"vue\";\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from '@/utils/request';\r\nimport { convertDateFormat } from '@/utils/timeFormat'; \r\n\r\nconst props = defineProps({\r\n  selectdType: Number,\r\n});\r\n\r\nconst userId = ref('');\r\nconst userCoinData = ref([]);\r\n\r\n\r\nwatchEffect(() => {\r\n  switch(props.selectdType) {\r\n    case '0':\r\n      getUserPointChangeList();\r\n      break;\r\n    case '1':\r\n      getUserCoinChangeList();\r\n      break;\r\n    case '2':\r\n      getUserEnergyChangeList();\r\n      break;\r\n    case '3':\r\n      getUserExchange();\r\n      break;\r\n    default:\r\n      ElMessage.error('传参错误！')\r\n  }\r\n});\r\n//获取用户鱼饵数据变化列表\r\nasync function getUserPointChangeList() {\r\n  try{\r\n    const response = await axios.get(`/currency/point/page`, {\r\n        params: {\r\n            id:userId.value,\r\n            page:1,\r\n            pazeSize:100\r\n        }\r\n    });\r\n    if(response.data.code === 1){\r\n      userCoinData.value = response.data.data.records;\r\n      for(let record of userCoinData.value){\r\n        record.createTime = convertDateFormat(record.createTime);\r\n      }\r\n      // ElMessage.success('获取用户鱼饵数据变化列表成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n      console.error(\"获取用户鱼饵数据变化列表失败\");\r\n      ElMessage.error('获取用户鱼饵数据变化列表失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户鱼饵数据变化列表失败\", error); \r\n    ElMessage.error('获取用户鱼饵数据变化列表失败');\r\n  }\r\n}\r\n\r\n//获取用户渔币数据变化列表\r\nasync function getUserCoinChangeList() {\r\n  try{\r\n    const response = await axios.get(`/currency/coin/page`, {\r\n        params: {\r\n            id:userId.value,\r\n            page:1,\r\n            pazeSize:100\r\n        }\r\n    });\r\n    if(response.data.code === 1){\r\n      userCoinData.value = response.data.data.records;\r\n      for(let record of userCoinData.value){\r\n        record.createTime = convertDateFormat(record.createTime);\r\n      }\r\n      // ElMessage.success('获取用户渔币数据变化列表成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n      console.error(\"获取用户渔币数据变化列表失败\");\r\n      ElMessage.error('获取用户渔币数据变化列表失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户渔币数据变化列表失败\", error); \r\n    ElMessage.error('获取用户渔币数据变化列表失败');\r\n  }\r\n}\r\n\r\n//获取用户能量数据变化列表\r\nasync function getUserEnergyChangeList() {\r\n  try{\r\n    const response = await axios.get(`/currency/energy/page`, {\r\n        params: {\r\n            id:userId.value,\r\n            page:1,\r\n            pazeSize:100\r\n        }\r\n    });\r\n    if(response.data.code === 1){\r\n      userCoinData.value = response.data.data.records;\r\n      for(let record of userCoinData.value){\r\n        record.createTime = convertDateFormat(record.createTime);\r\n      }\r\n      // ElMessage.success('获取用户能量数据变化列表成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n      console.error(\"获取用户能量数据变化列表失败\");\r\n      ElMessage.error('获取用户能量数据变化列表失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户能量数据变化列表失败\", error); \r\n    ElMessage.error('获取用户能量数据变化列表失败');\r\n  }\r\n}\r\n\r\n\r\n\r\n//获取用户渔币兑换鱼饵变化列表\r\nasync function getUserExchange() {\r\n  try{\r\n    const response = await axios.get(`/currency/exchange`, {\r\n        params: {\r\n            page:1,\r\n            pazeSize:100\r\n        }\r\n    });\r\n    if(response.data.code === 1){\r\n      userCoinData.value = response.data.data.records;\r\n      for(let record of userCoinData.value){\r\n        record.createTime = convertDateFormat(record.createTime);\r\n        record.currencyChange = (record.exchangeCount)*10;\r\n        record.reason = '使用渔币兑换鱼饵'\r\n      }\r\n      // ElMessage.success('获取用户渔币数据变化列表成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n      console.error(\"获取用户渔币数据变化列表失败\");\r\n      ElMessage.error('获取用户渔币数据变化列表失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户渔币数据变化列表失败\", error); \r\n    ElMessage.error('获取用户渔币数据变化列表失败');\r\n  }\r\n}\r\n\r\n\r\n\r\nonMounted(() => {\r\n    userId.value = localStorage.getItem(\"userId\"); // 获取用户ID\r\n  })\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.record {\r\n  margin: 16px 0px;\r\n  border-radius: 12px;\r\n}\r\n:deep .el-table .cell{\r\n  text-align: center;\r\n}\r\n::v-deep .el-table-v2__header-cell{\r\n  justify-content: center;\r\n  background-color: #FAFAFA;\r\n  border-top: 1px solid #EBEBEB;\r\n  border-left: 1px solid #EBEBEB;\r\n}\r\n::v-deep .el-table-v2__header-cell:first-child {\r\n    border-radius: 12px 0px 0px 0px;\r\n}\r\n::v-deep .el-table-v2__header-cell:last-child {\r\n    border-right: 1px solid #EBEBEB;\r\n    border-radius: 0px 12px 0px 0px;\r\n}\r\n::v-deep .el-table-v2__header-cell-text {\r\n    color: #5B5B5B;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}