{"ast":null,"code":"import { ElMessage, ElMessageBox } from 'element-plus';\nimport { ref, onMounted } from 'vue';\nimport axios from '@/utils/request';\nimport { getColumnPictureFromCOS } from '@/utils/cosService';\nimport EditDialog from '../../../components/EditDialog';\nexport default {\n  __name: 'ShareColumn',\n  emits: {\n    manage: payload => {\n      if (payload && typeof payload.title === 'string' && typeof payload.id === 'number' && typeof payload.name === 'string') {\n        return true;\n      }\n      ElMessage.error('组件传值错误');\n      console.error('组件传值错误');\n      return false;\n    }\n  },\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\n    const currentPage = ref(1);\n    const activeTab3 = ref('all');\n    const keyword = ref('');\n    const shareColumnGroups = ref([]);\n    const dialogFormVisible4 = ref(false);\n    const Id = ref();\n    const centerDialogVisible = ref(false);\n    const emits = __emit;\n    const manage = (id, name) => {\n      emits('manage', {\n        title: '分享专栏',\n        id: id,\n        name: name\n      });\n    };\n\n    // 方法定义\n    const handleSearch = () => {\n      // 处理搜索的逻辑\n    };\n    const handleEdit = id => {\n      Id.value = id;\n      dialogFormVisible4.value = true;\n    };\n\n    //点击删除的弹框\n    const deleteColumnShareList = async id => {\n      try {\n        await ElMessageBox.confirm('确定要删除该分享专栏吗？', 'Warning', {\n          confirmButtonText: '确认删除',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        handleDelete(id);\n        getColumnShareList();\n      } catch {\n        console.log('关闭弹框');\n      }\n    };\n\n    //删除分享专栏\n    async function handleDelete(id) {\n      centerDialogVisible.value = false;\n      try {\n        const response = await axios.delete(`/column/${id}`);\n        if (response.data && response.data.code === 1) {\n          ElMessage.success('删除专栏成功！');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('删除分享专栏失败', response.data.msg);\n          ElMessage.error('删除分享专栏失败');\n        }\n      } catch (error) {\n        console.error(\"删除分享专栏接口失败\", error);\n        ElMessage.error('删除分享专栏接口失败');\n      }\n    }\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getColumnShareList(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n\n    //获取分享专栏列表\n    async function getColumnShareList(currentPage) {\n      try {\n        const response = await axios.get('/column', {\n          params: {\n            type: 1,\n            page: currentPage,\n            pageSize: 10,\n            userId: Number(userId)\n          }\n        });\n        if (response.data.data.records.length > 0 && response.data.code === 1) {\n          const updates = response.data.data.records.map(record => getColumnPictureFromCOS(record.id).then(coverPicture => ({\n            ...record,\n            coverPicture\n          })));\n          const updatedArticles = await Promise.all(updates);\n          shareColumnGroups.value = [...shareColumnGroups.value, ...updatedArticles];\n          console.log(response.data);\n        } else if (response.data.code === 1 && response.data.data.records.length === 0) {\n          // ElMessage.info('已加载所有数据');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取分享专栏数据失败\");\n          ElMessage.error('获取分享专栏数据失败');\n        }\n      } catch (error) {\n        console.error(\"请求分享专栏接口失败\", error);\n        ElMessage.error('请求分享专栏接口失败');\n      }\n    }\n    onMounted(() => {\n      getColumnShareList(currentPage.value);\n    });\n    const __returned__ = {\n      userId,\n      currentPage,\n      activeTab3,\n      keyword,\n      shareColumnGroups,\n      dialogFormVisible4,\n      Id,\n      centerDialogVisible,\n      emits,\n      manage,\n      handleSearch,\n      handleEdit,\n      deleteColumnShareList,\n      handleDelete,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getColumnShareList,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get getColumnPictureFromCOS() {\n        return getColumnPictureFromCOS;\n      },\n      get EditDialog() {\n        return EditDialog;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ElMessage","ElMessageBox","ref","onMounted","axios","getColumnPictureFromCOS","EditDialog","userId","localStorage","getItem","currentPage","activeTab3","keyword","shareColumnGroups","dialogFormVisible4","Id","centerDialogVisible","emits","__emit","manage","id","name","title","handleSearch","handleEdit","value","deleteColumnShareList","confirm","confirmButtonText","cancelButtonText","type","handleDelete","getColumnShareList","console","log","response","delete","data","code","success","msg","error","toString","isLoading","load","get","params","page","pageSize","Number","records","length","updates","map","record","then","coverPicture","updatedArticles","Promise","all"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/CreateCenter/components/ManuscriptManagement/ShareColumn.vue"],"sourcesContent":["<template>\r\n  <!-- 创作中心--专栏与收藏管理--专栏管理--分享 -->\r\n    <div class=\"middle\">\r\n        <el-tabs v-model=\"activeTab3\">\r\n            <el-tab-pane label=\"全部\" name=\"all\"></el-tab-pane>\r\n            <el-tab-pane label=\"全部可见\" name=\"allSee\"></el-tab-pane>\r\n            <el-tab-pane label=\"仅我可见\" name=\"MeSee\"></el-tab-pane>\r\n        </el-tabs> \r\n\r\n    <!-- 搜索框样式 -->\r\n        <div style=\"display: flex; align-items: center; width: 300px; height: 35px; border: 1px solid #ccc; border-radius: 4px;\">\r\n            <input type=\"text\" style=\"flex: 1; padding: 6px 10px; border: none; outline: none; font-size: 14px;\" placeholder=\"请输入关键字\" v-model=\"keyword\">\r\n            <div style=\"padding: 0 10px;\" class=\"search\" @click=\"handleSearch\">\r\n                <el-icon>\r\n                    <Search />\r\n                </el-icon>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"footer\" style=\"display: flex; color: #606060; margin-top: 0.5rem;\">\r\n      <div style=\"flex:53%\">排序</div>\r\n      <div style=\"flex:25%; text-align: center;\">操作</div>\r\n      <div style=\"flex:18%; text-align: center;\">是否展示</div>\r\n      <div style=\"flex:7%; text-align: center;\">文章数</div>\r\n    </div>\r\n\r\n      <!-- 主体内容修改部分 -->\r\n    <div class=\"content-container\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n      <div class=\"content-box underline\"  v-for=\"item in shareColumnGroups\" :key=\"item.id\" style=\"display: flex; flex-direction: row; gap: 1rem;\">\r\n        <img src=\"@/assets/CreateCenter/小点.svg\" style=\"flex:5%; height: 20px; padding-right: 40px;\">\r\n        <div style=\"flex:20% ;\">\r\n          <img :src=\"item.coverPicture\" style=\"width: 142px;height: 100px;border-radius: 8px; \">\r\n        </div>\r\n        <div style=\"flex: 25%;text-align: center;\">{{ item.name }}</div>\r\n\r\n        <div style=\"display: flex;justify-content: space-evenly; flex: 25%;\">\r\n            <el-link type=\"primary\" @click=\"manage(item.id,item.name)\">管理</el-link>\r\n            <el-link type=\"primary\" @click =\"handleEdit(item.id)\">编辑</el-link>\r\n            <el-link type=\"danger\"  @click=\"deleteColumnShareList(item.id)\" >删除</el-link>\r\n        </div>\r\n\r\n        <div style=\"flex: 18%;display: flex;justify-content: center;\">\r\n            <img src=\"@/assets/CreateCenter/ShowArticleShare.svg\" alt=\"\">\r\n        </div>\r\n        <div style=\"flex: 7%;text-align: center;\">{{ item.number }}</div>\r\n      </div>\r\n      <!-- 当专栏为空时的显示信息 -->\r\n      <el-empty \r\n        v-if=\"!shareColumnGroups || shareColumnGroups.length === 0\" \r\n        :image-size=\"200\" \r\n        description=\"您还没有文章专栏呢，快去创建吧！\"\r\n      />\r\n  </div>\r\n\r\n     \r\n    <div v-if=\"dialogFormVisible4\">\r\n        <EditDialog v-model=\"dialogFormVisible4\" ClassifyName = \"分享专栏\" :Id = Id> </EditDialog>\r\n    </div>\r\n</template>\r\n<script setup>\r\nimport { ElMessage,ElMessageBox } from 'element-plus';\r\nimport { ref,onMounted,defineEmits } from 'vue'\r\nimport axios from '@/utils/request';\r\nimport { getColumnPictureFromCOS } from '@/utils/cosService';\r\nimport EditDialog from '../../../components/EditDialog';\r\n\r\nconst userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\nconst currentPage = ref(1);\r\nconst activeTab3 = ref('all')\r\nconst keyword = ref('')\r\nconst shareColumnGroups = ref([])\r\nconst dialogFormVisible4 = ref(false);\r\nconst Id = ref();\r\nconst centerDialogVisible = ref(false);\r\n \r\nconst emits = defineEmits({\r\n  manage: payload => {\r\n    if (payload && typeof payload.title === 'string' && typeof payload.id === 'number'  && typeof payload.name === 'string') {\r\n      return true;\r\n    }\r\n    ElMessage.error('组件传值错误');\r\n    console.error('组件传值错误');\r\n    return false;\r\n  }\r\n});\r\nconst manage = (id,name) => {\r\n  emits('manage',{ title: '分享专栏',id: id,name:name });\r\n};\r\n\r\n// 方法定义\r\nconst handleSearch = () => {\r\n    // 处理搜索的逻辑\r\n}\r\n\r\nconst handleEdit = (id) => {\r\n  Id.value = id;\r\n  dialogFormVisible4.value = true;\r\n}\r\n \r\n//点击删除的弹框\r\nconst deleteColumnShareList = async (id) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要删除该分享专栏吗？',\r\n      'Warning',\r\n      {\r\n        confirmButtonText: '确认删除',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }\r\n    );\r\n    handleDelete(id);\r\n    getColumnShareList();\r\n  } catch {\r\n    console.log('关闭弹框')\r\n  }\r\n}\r\n\r\n\r\n//删除分享专栏\r\nasync function handleDelete(id) {\r\n  centerDialogVisible.value= false;\r\n  try {\r\n    const response = await axios.delete(`/column/${id}`);\r\n    if (response.data && response.data.code === 1) {\r\n        ElMessage.success('删除专栏成功！');\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n        console.error('删除分享专栏失败', response.data.msg);\r\n        ElMessage.error('删除分享专栏失败');\r\n    }\r\n  } catch (error) {\r\n      console.error(\"删除分享专栏接口失败\", error); \r\n      ElMessage.error('删除分享专栏接口失败');\r\n  }\r\n}\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n      if(currentPage.value === 1){\r\n            currentPage.value++;\r\n        }\r\n      await getColumnShareList(currentPage.value);\r\n      currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n //获取分享专栏列表\r\nasync function getColumnShareList(currentPage) {\r\n  try {\r\n    const response = await axios.get('/column',{ \r\n      params: { \r\n        type:1,\r\n        page:currentPage,\r\n        pageSize:10,\r\n        userId:Number(userId),\r\n      } \r\n    });\r\n    if(response.data.data.records.length > 0 && response.data.code === 1){\r\n      const updates = response.data.data.records.map(record => getColumnPictureFromCOS(record.id).then(coverPicture => ({\r\n        ...record,\r\n        coverPicture\r\n      })));\r\n      const updatedArticles = await Promise.all(updates);\r\n      shareColumnGroups.value = [...shareColumnGroups.value, ...updatedArticles];\r\n      console.log(response.data); \r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n        // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取分享专栏数据失败\");\r\n        ElMessage.error('获取分享专栏数据失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"请求分享专栏接口失败\", error); \r\n    ElMessage.error('请求分享专栏接口失败');\r\n  }\r\n}\r\n \r\nonMounted(() => {\r\n    getColumnShareList(currentPage.value);\r\n})\r\n \r\n</script>\r\n \r\n\r\n<style scoped>\r\n::v-deep .el-tabs__nav-wrap::after {\r\n    height: 0px;\r\n}\r\n\r\n.content-box {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding-bottom: 1rem;\r\n    margin-top: 1rem;\r\n}\r\n\r\n.middle {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.search:hover {\r\n    cursor: pointer;\r\n}\r\n\r\n.underline{\r\n    border-bottom: 1px solid #ccc;\r\n\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}