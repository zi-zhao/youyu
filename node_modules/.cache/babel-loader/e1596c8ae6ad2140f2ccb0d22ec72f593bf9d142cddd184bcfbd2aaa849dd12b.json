{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport * as echarts from 'echarts';\n// import { ElMessage } from 'element-plus';\n// import axios from '../../../../utils/request';\n\nexport default {\n  __name: 'FansData',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const lineContainer = ref(null);\n    const manuData = ref([{\n      id: 1,\n      name: '粉丝量',\n      data: '10'\n    }, {\n      id: 2,\n      name: '新增粉丝',\n      data: '1000'\n    }, {\n      id: 3,\n      name: '净增粉丝',\n      data: '180'\n    }, {\n      id: 4,\n      name: '取消关注',\n      data: '140'\n    }]);\n    // const fansData = ref([\n    //     { \n    //         id: 1, \n    //         title: '累积阅读文章数排行',\n    //         fans: [\n    //             { rank: 1, fansId:1 , name: '鱼鱼' },\n    //             { rank: 2, fansId:1 , name: '鱼鱼' },\n    //             { rank: 3, fansId:1 , name: '鱼鱼' }\n    //     ]},\n    //     { \n    //         id: 2, \n    //         title: '累积打赏金额数排行', \n    //         fans: [\n    //             { rank: 1, fansId:1 , name: '鱼鱼' },\n    //             { rank: 2, fansId:1 , name: '鱼鱼' },\n    //             { rank: 3, fansId:1 , name: '鱼鱼' }\n    //     ]},\n    //     { \n    //         id: 3, \n    //         title: '累积分享互动数排行', \n    //          fans: [\n    //             { rank: 1, fansId:1 , name: '鱼鱼' },\n    //             { rank: 2, fansId:1 , name: '鱼鱼' },\n    //             { rank: 3, fansId:1 , name: '鱼鱼' }\n    //     ]},\n    //     { \n    //         id: 4, \n    //         title: '累积提问金额数排行', \n    //          fans: [\n    //             { rank: 1, fansId:1 , name: '鱼鱼' },\n    //             { rank: 2, fansId:1 , name: '鱼鱼' },\n    //             { rank: 3, fansId:1 , name: '鱼鱼' }\n    //     ]},\n    // ]);\n\n    //获取用户近7天货币总收益\n    // async function getRecentTotalIncomedata() {\n    //   try {\n    //     const response = await axios.get(`/currency/last7days`)\n    //     if(response.data.code === 1){\n    //         userSevenTotalIncomeData.value = response.data.data;\n    //         ElMessage.success('获取用户近7天货币数据成功');\n    //     }else{\n    //         console.error(\"获取用户近7天货币数据失败\");\n    //         ElMessage.error(\"获取用户近7天货币数据失败\");\n    //     }\n    //   } catch (error) {\n    //     console.error(\"获取用户近7天货币数据失败\", error); \n    //     ElMessage.error(\"获取用户近7天货币数据失败\");\n    //   }\n    // }\n\n    onMounted(() => {\n      // 折线图配置\n      const lineOption = {\n        title: {\n          text: '近7天阅读量'\n        },\n        tooltip: {},\n        grid: {\n          height: \"75%\"\n        },\n        xAxis: {\n          type: 'category',\n          data: ['10/1', '10/2', '10/3', '10/4', '10/5', '10/6', '10/7']\n        },\n        yAxis: {\n          type: 'value',\n          splitNumber: 4\n        },\n        series: [{\n          data: [10, 20, 20, 20, 30, 40, 10],\n          type: 'line',\n          smooth: true,\n          barWidth: 60\n        }]\n      };\n\n      // 初始化图表\n      const lineChart = echarts.init(lineContainer.value);\n      lineChart.setOption(lineOption);\n    });\n    const __returned__ = {\n      lineContainer,\n      manuData,\n      ref,\n      onMounted,\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","echarts","lineContainer","manuData","id","name","data","lineOption","title","text","tooltip","grid","height","xAxis","type","yAxis","splitNumber","series","smooth","barWidth","lineChart","init","value","setOption"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/CreateCenter/components/TheData/FansData.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 100%;\">\r\n    <div class=\"showdata\">\r\n        <p class=\"font\">粉丝数据</p>\r\n        <div class=\"content_box\">\r\n            <div class=\"content_row\" v-for=\"(item, index) in manuData\" :key=\"index\">\r\n                <div class=\"up\">\r\n                    <div class=\"name\">{{ item.name }}</div>\r\n                </div>\r\n                <div class=\"down\">\r\n                    <div class=\"data\" >{{ item.data }}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"linechart\">\r\n        <!-- 折线图容器 -->\r\n        <div ref=\"lineContainer\" class=\"linebox\"></div>\r\n    </div>\r\n    <!-- <div class=\"fansrank\">\r\n        <p class=\"font\">粉丝排行</p>\r\n        <div class=\"content_box2\">\r\n            <div class=\"content_row2\" v-for=\"(item, index) in fansData\" :key=\"index\">\r\n                <div class=\"up2\">\r\n                    <div class=\"title\">{{ item.title }}</div>\r\n                </div>\r\n                <div class=\"down2\">\r\n                   <div class=\"fans_row\" v-for=\"(entry, index) in item.fans\" :key=\"index\">\r\n                        <div class=\"rank\" >{{ entry.rank }}</div>\r\n                        <div class=\"fanspic\">\r\n                            <img src=\"../../../../assets/fish.png\" alt=\"\">\r\n                        </div>\r\n                        <div class=\"fansname\" >{{ entry.name }}</div>\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport * as echarts from 'echarts';\r\n// import { ElMessage } from 'element-plus';\r\n// import axios from '../../../../utils/request';\r\n\r\nconst lineContainer = ref(null);\r\n\r\nconst manuData = ref([\r\n    { id: 1, name: '粉丝量', data: '10'},\r\n    { id: 2, name: '新增粉丝', data: '1000'},\r\n    { id: 3, name: '净增粉丝', data: '180' },\r\n    { id: 4, name: '取消关注', data: '140'}\r\n]);\r\n// const fansData = ref([\r\n//     { \r\n//         id: 1, \r\n//         title: '累积阅读文章数排行',\r\n//         fans: [\r\n//             { rank: 1, fansId:1 , name: '鱼鱼' },\r\n//             { rank: 2, fansId:1 , name: '鱼鱼' },\r\n//             { rank: 3, fansId:1 , name: '鱼鱼' }\r\n//     ]},\r\n//     { \r\n//         id: 2, \r\n//         title: '累积打赏金额数排行', \r\n//         fans: [\r\n//             { rank: 1, fansId:1 , name: '鱼鱼' },\r\n//             { rank: 2, fansId:1 , name: '鱼鱼' },\r\n//             { rank: 3, fansId:1 , name: '鱼鱼' }\r\n//     ]},\r\n//     { \r\n//         id: 3, \r\n//         title: '累积分享互动数排行', \r\n//          fans: [\r\n//             { rank: 1, fansId:1 , name: '鱼鱼' },\r\n//             { rank: 2, fansId:1 , name: '鱼鱼' },\r\n//             { rank: 3, fansId:1 , name: '鱼鱼' }\r\n//     ]},\r\n//     { \r\n//         id: 4, \r\n//         title: '累积提问金额数排行', \r\n//          fans: [\r\n//             { rank: 1, fansId:1 , name: '鱼鱼' },\r\n//             { rank: 2, fansId:1 , name: '鱼鱼' },\r\n//             { rank: 3, fansId:1 , name: '鱼鱼' }\r\n//     ]},\r\n// ]);\r\n\r\n//获取用户近7天货币总收益\r\n// async function getRecentTotalIncomedata() {\r\n//   try {\r\n//     const response = await axios.get(`/currency/last7days`)\r\n//     if(response.data.code === 1){\r\n//         userSevenTotalIncomeData.value = response.data.data;\r\n//         ElMessage.success('获取用户近7天货币数据成功');\r\n//     }else{\r\n//         console.error(\"获取用户近7天货币数据失败\");\r\n//         ElMessage.error(\"获取用户近7天货币数据失败\");\r\n//     }\r\n//   } catch (error) {\r\n//     console.error(\"获取用户近7天货币数据失败\", error); \r\n//     ElMessage.error(\"获取用户近7天货币数据失败\");\r\n//   }\r\n// }\r\n\r\nonMounted(() => {\r\n\r\n\r\n    // 折线图配置\r\n    const lineOption = {\r\n        title: {\r\n            text: '近7天阅读量'\r\n        },\r\n        tooltip: {},\r\n        grid:{\r\n            height: \"75%\"\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            data: ['10/1', '10/2', '10/3', '10/4', '10/5', '10/6', '10/7']\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            splitNumber: 4\r\n        },\r\n        series: [{\r\n            data: [10,20,20,20,30,40,10],\r\n            type: 'line',\r\n            smooth: true,\r\n            barWidth: 60,\r\n        }]\r\n    };\r\n\r\n    // 初始化图表\r\n    const lineChart = echarts.init(lineContainer.value);\r\n    lineChart.setOption(lineOption);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.showdata,\r\n.linechart,\r\n.fansrank{\r\n    border: 1px solid #eaeaea;\r\n    box-shadow: 0px 0px 20px 0px rgba(96, 111, 160, 0.25), 0px 4px 4px 0px rgb(0 0 0 / 21%);\r\n    border-radius: 20px;\r\n    padding: 20px 30px;\r\n    width: 900px;\r\n    margin: 20px auto 40px; \r\n}\r\n.showdata{\r\n    height: 180px;\r\n}\r\n.font{\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n}\r\n.content_box,\r\n.content_box2 {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 1rem;\r\n}\r\n.content_box{\r\n    gap: 25px 45px;\r\n}\r\n.content_row{\r\n    width: 110px;\r\n    height: 60px;\r\n    background-color: #FBFBFB;\r\n    border-radius: 10px;\r\n    padding: 15px;\r\n}\r\n.content_row:hover{\r\n    background-color: #F5F7FF;\r\n    cursor: pointer;\r\n}\r\n.up,\r\n.down{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n}\r\n\r\n.name{\r\n    /* color: #ACACAC; */\r\n    color: #2d2d2d;\r\n}\r\n.down {\r\n    justify-content: center;\r\n    margin-top: 15px;\r\n}\r\n.data{\r\n    color:#606FA0; \r\n    font-size: larger; \r\n    font-weight: 600; \r\n    text-align: center;\r\n}\r\n.linebox{\r\n    width: 100%;\r\n    height: 350px;\r\n}\r\n.fansrank{\r\n    height: 290px;\r\n}\r\n.content_box2 {\r\n    gap: 25px 30px;\r\n    margin-top: 25px;\r\n}\r\n\r\n.content_row2{\r\n    width: 150px;\r\n    height: 170px;\r\n    border: 1px solid #e0e0e0;\r\n    border-radius: 10px;\r\n    padding: 15px 20px;\r\n}\r\n.up2{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    margin-bottom: 20px;\r\n}\r\n.title{\r\n    font-size: 16px;\r\n}\r\n.down2{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n}\r\n.fans_row{\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n.rank{\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n}\r\n.fanspic img{\r\n    width: 32px;\r\n    height: 32px;\r\n}\r\n.fansname{\r\n    font-size: 16px;\r\n}\r\n</style>\r\n"],"mappings":"AA0CA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAO,KAAKC,OAAO,MAAM,SAAS;AAClC;AACA;;;;;;;;IAEA,MAAMC,aAAa,GAAGH,GAAG,CAAC,IAAI,CAAC;IAE/B,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,CACjB;MAAEK,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAI,CAAC,EACjC;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAM,CAAC,EACpC;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAM,CAAC,EACpC;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAK,CAAC,CACtC,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAN,SAAS,CAAC,MAAM;MAGZ;MACA,MAAMO,UAAU,GAAG;QACfC,KAAK,EAAE;UACHC,IAAI,EAAE;QACV,CAAC;QACDC,OAAO,EAAE,CAAC,CAAC;QACXC,IAAI,EAAC;UACDC,MAAM,EAAE;QACZ,CAAC;QACDC,KAAK,EAAE;UACHC,IAAI,EAAE,UAAU;UAChBR,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;QACjE,CAAC;QACDS,KAAK,EAAE;UACHD,IAAI,EAAE,OAAO;UACbE,WAAW,EAAE;QACjB,CAAC;QACDC,MAAM,EAAE,CAAC;UACLX,IAAI,EAAE,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;UAC5BQ,IAAI,EAAE,MAAM;UACZI,MAAM,EAAE,IAAI;UACZC,QAAQ,EAAE;QACd,CAAC;MACL,CAAC;;MAED;MACA,MAAMC,SAAS,GAAGnB,OAAO,CAACoB,IAAI,CAACnB,aAAa,CAACoB,KAAK,CAAC;MACnDF,SAAS,CAACG,SAAS,CAAChB,UAAU,CAAC;IACnC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}