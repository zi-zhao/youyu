{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from '@/utils/request';\nimport * as echarts from 'echarts';\nimport baitNumImg from '@/assets/CreateCenter/baitNum.svg';\nimport yellowCoinsImg from '@/assets/CreateCenter/yellowCoins.svg';\nimport energyImg from '@/assets/CreateCenter/energy.svg';\nexport default {\n  __name: 'IncomeData',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const lineContainer = ref(null);\n    const barContainer = ref(null);\n    const userCurrencyData = ref({}); //保存用户当前的货币数据\n    const userSevenIncomeData = ref([]); //获取近7天的分别收益\n    const userSevenTotalIncomeData = ref({}); //获取近7天的总收益\n    const coinData = ref([]); //获取近7天的鱼饵收益\n    const pointData = ref([]); //获取近7天的渔币收益\n    const energyData = ref([]); //获取近7天的能量收益\n    const userYearTotalIncomeData = ref([]); //获取近一年的总收益\n    // const coinYearData = ref([]);//获取近一年的鱼饵收益\n    // const pointYearData = ref([]);//获取近一年的渔币收益\n    // const energyYearData = ref([]);//获取近一年的能量收益\n\n    const manuData = computed(() => [{\n      id: 1,\n      name: '鱼饵数',\n      data: userCurrencyData.value.point,\n      weekadd: userSevenTotalIncomeData.value.point,\n      imgSrc: baitNumImg,\n      bgccolor: '#E4E8FF',\n      textcolor: '#606FA0'\n    }, {\n      id: 2,\n      name: '渔币数',\n      data: userCurrencyData.value.coin,\n      weekadd: userSevenTotalIncomeData.value.coin,\n      imgSrc: yellowCoinsImg,\n      bgccolor: '#FDEFD4',\n      textcolor: '#FFC960'\n    }, {\n      id: 3,\n      name: '能量值',\n      data: userCurrencyData.value.energy,\n      weekadd: userSevenTotalIncomeData.value.energy,\n      imgSrc: energyImg,\n      bgccolor: '#D9FFD2',\n      textcolor: '#51B541'\n    }]);\n\n    // 转换数据为 ECharts 需要的格式\n    const transformDataForECharts = data => {\n      const dataSource = [['product', '鱼饵', '渔币', '能量']];\n      // 获取当前月份\n      const currentMonth = new Date().getMonth();\n      const monthAbbreviations = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      // 创建一个包含当前月份以及之前 11 个月份的数组\n      const lastTwelveMonths = Array.from({\n        length: 12\n      }, (_, i) => {\n        const monthIndex = (currentMonth - i + 12) % 12;\n        return monthAbbreviations[monthIndex];\n      }).reverse();\n      data.forEach((item, index) => {\n        const row = [lastTwelveMonths[index], item.point, item.coin, item.energy];\n        dataSource.push(row);\n      });\n      return dataSource;\n    };\n\n    //获取用户当前货币数据\n    async function getCurrencydata() {\n      try {\n        const response = await axios.get(`/currency`);\n        if (response.data.code === 1) {\n          userCurrencyData.value = response.data.data;\n          // ElMessage.success('获取用户当前货币数据成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户当前货币数据失败\");\n          ElMessage.error(\"获取用户当前货币数据失败\");\n        }\n      } catch (error) {\n        console.error(\"获取用户当前货币数据失败\", error);\n        ElMessage.error(\"获取用户当前货币数据失败\");\n      }\n    }\n\n    //获取用户近7天货币数据\n    async function getRecentIncomedata() {\n      try {\n        const response = await axios.get(`/currency/last7day`);\n        if (response.data.code === 1) {\n          userSevenIncomeData.value = response.data.data;\n          userSevenIncomeData.value.forEach(item => {\n            coinData.value.push(item.coin);\n            pointData.value.push(item.point);\n            energyData.value.push(item.energy);\n          });\n          // ElMessage.success('获取用户近7天货币数据成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户近7天货币数据失败\");\n          ElMessage.error(\"获取用户近7天货币数据失败\");\n        }\n      } catch (error) {\n        console.error(\"获取用户近7天货币数据失败\", error);\n        ElMessage.error(\"获取用户近7天货币数据失败\");\n      }\n    }\n\n    //获取用户近7天货币总收益\n    async function getRecentTotalIncomedata() {\n      try {\n        const response = await axios.get(`/currency/last7days`);\n        if (response.data.code === 1) {\n          userSevenTotalIncomeData.value = response.data.data;\n          // ElMessage.success('获取用户近7天货币数据成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户近7天货币数据失败\");\n          ElMessage.error(\"获取用户近7天货币数据失败\");\n        }\n      } catch (error) {\n        console.error(\"获取用户近7天货币数据失败\", error);\n        ElMessage.error(\"获取用户近7天货币数据失败\");\n      }\n    }\n\n    //获取用户1年货币总收益\n    async function getYearIncomedata() {\n      try {\n        const response = await axios.get(`/currency/last12month`);\n        if (response.data.code === 1) {\n          userYearTotalIncomeData.value = response.data.data;\n          // ElMessage.success('获取用户近7天货币数据成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户近7天货币数据失败\");\n          ElMessage.error(\"获取用户近7天货币数据失败\");\n        }\n      } catch (error) {\n        console.error(\"获取用户近7天货币数据失败\", error);\n        ElMessage.error(\"获取用户近7天货币数据失败\");\n      }\n    }\n    onMounted(async () => {\n      await getCurrencydata();\n      await getRecentIncomedata();\n      await getRecentTotalIncomedata();\n      await getYearIncomedata();\n\n      // 折线图配置\n      const lineOption = {\n        title: {\n          text: '近7天收益'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['能量', '渔币', '鱼饵']\n        },\n        grid: {\n          bottom: '3%',\n          containLabel: true,\n          height: \"80%\"\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value',\n          splitLine: {\n            lineStyle: {\n              type: 'dashed' //虚线\n            },\n            show: true\n          }\n        },\n        series: [{\n          name: '能量',\n          type: 'line',\n          stack: 'Total',\n          data: energyData.value,\n          lineStyle: {\n            width: 1\n          },\n          symbol: 'image://' + require('@/assets/CreateCenter/incomeData3.svg'),\n          symbolSize: [18, 12]\n        }, {\n          name: '渔币',\n          type: 'line',\n          stack: 'Total',\n          data: coinData.value,\n          lineStyle: {\n            width: 1\n          },\n          symbol: 'image://' + require('@/assets/CreateCenter/incomeData1.svg'),\n          symbolSize: [18, 12]\n        }, {\n          name: '鱼饵',\n          type: 'line',\n          stack: 'Total',\n          data: pointData.value,\n          lineStyle: {\n            width: 1\n          },\n          symbol: 'image://' + require('@/assets/CreateCenter/incomeData2.svg'),\n          symbolSize: [18, 12]\n        }]\n      };\n\n      //柱状图配置\n      const barOption = {\n        title: {\n          text: '年收益一览'\n        },\n        legend: {\n          itemGap: 20\n        },\n        tooltip: {},\n        grid: {\n          bottom: '3%',\n          left: '10%',\n          top: '60px',\n          containLabel: true,\n          width: \"70%\",\n          height: \"80%\"\n        },\n        dataset: {\n          source: transformDataForECharts(userYearTotalIncomeData.value)\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {},\n        series: [{\n          type: 'bar'\n        }, {\n          type: 'bar'\n        }, {\n          type: 'bar'\n        }]\n      };\n\n      // 初始化图表\n      const lineChart = echarts.init(lineContainer.value);\n      lineChart.setOption(lineOption);\n      const barChart = echarts.init(barContainer.value);\n      barChart.setOption(barOption);\n    });\n    const __returned__ = {\n      lineContainer,\n      barContainer,\n      userCurrencyData,\n      userSevenIncomeData,\n      userSevenTotalIncomeData,\n      coinData,\n      pointData,\n      energyData,\n      userYearTotalIncomeData,\n      manuData,\n      transformDataForECharts,\n      getCurrencydata,\n      getRecentIncomedata,\n      getRecentTotalIncomedata,\n      getYearIncomedata,\n      ref,\n      onMounted,\n      computed,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      },\n      get echarts() {\n        return echarts;\n      },\n      get baitNumImg() {\n        return baitNumImg;\n      },\n      get yellowCoinsImg() {\n        return yellowCoinsImg;\n      },\n      get energyImg() {\n        return energyImg;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","ElMessage","axios","echarts","baitNumImg","yellowCoinsImg","energyImg","lineContainer","barContainer","userCurrencyData","userSevenIncomeData","userSevenTotalIncomeData","coinData","pointData","energyData","userYearTotalIncomeData","manuData","id","name","data","value","point","weekadd","imgSrc","bgccolor","textcolor","coin","energy","transformDataForECharts","dataSource","currentMonth","Date","getMonth","monthAbbreviations","lastTwelveMonths","Array","from","length","_","i","monthIndex","reverse","forEach","item","index","row","push","getCurrencydata","response","get","code","msg","error","toString","console","getRecentIncomedata","getRecentTotalIncomedata","getYearIncomedata","lineOption","title","text","tooltip","trigger","legend","grid","bottom","containLabel","height","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","yAxis","splitLine","lineStyle","show","series","stack","width","symbol","require","symbolSize","barOption","itemGap","left","top","dataset","source","lineChart","init","setOption","barChart"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/CreateCenter/components/TheData/IncomeData.vue"],"sourcesContent":["<template>\r\n  <div style=\"width: 100%;\">\r\n    <div class=\"showdata\">\r\n        <p class=\"font\">总收益</p>\r\n        <div class=\"content_box\">\r\n            <div class=\"content_row\" v-for=\"(item, index) in manuData\" :key=\"index\">\r\n                <div class=\"boxborder\">\r\n                    <div class=\"left\" :style=\"{ 'background-color': item.bgccolor }\">\r\n                        <img :src=\"item.imgSrc\" alt=\"\">\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <div class=\"name\">{{ item.name }}</div>\r\n                        <div class=\"data\" :style=\"{ 'color': item.textcolor }\">{{ item.data }}</div>\r\n                        <div style=\"display: flex; gap: 8px; font-size: 14px;\">\r\n                            <div class=\"thisweek\">本周</div>\r\n                            <div class=\"weekdata\" :style=\"{ 'color': item.textcolor }\">+{{ item.weekadd }}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"linechart\">\r\n        <!-- 折线图容器 -->\r\n        <div ref=\"lineContainer\" class=\"linebox\"></div>\r\n    </div>\r\n    <div class=\"barchart\">\r\n        <!-- 柱状图容器 -->\r\n        <div ref=\"barContainer\" class=\"barbox\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted,computed } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from '@/utils/request';\r\nimport * as echarts from 'echarts';\r\nimport baitNumImg from '@/assets/CreateCenter/baitNum.svg'\r\nimport yellowCoinsImg from '@/assets/CreateCenter/yellowCoins.svg'\r\nimport energyImg from '@/assets/CreateCenter/energy.svg'\r\n\r\nconst lineContainer = ref(null);\r\nconst barContainer = ref(null);\r\nconst userCurrencyData = ref({});//保存用户当前的货币数据\r\nconst userSevenIncomeData = ref([]);//获取近7天的分别收益\r\nconst userSevenTotalIncomeData = ref({});//获取近7天的总收益\r\nconst coinData = ref([]);//获取近7天的鱼饵收益\r\nconst pointData = ref([]);//获取近7天的渔币收益\r\nconst energyData = ref([]);//获取近7天的能量收益\r\nconst userYearTotalIncomeData = ref([]);//获取近一年的总收益\r\n// const coinYearData = ref([]);//获取近一年的鱼饵收益\r\n// const pointYearData = ref([]);//获取近一年的渔币收益\r\n// const energyYearData = ref([]);//获取近一年的能量收益\r\n\r\nconst manuData = computed(() => [\r\n    { id: 1, name: '鱼饵数', data: userCurrencyData.value.point, weekadd:userSevenTotalIncomeData.value.point, imgSrc: baitNumImg , bgccolor:'#E4E8FF' , textcolor:'#606FA0'},\r\n    { id: 2, name: '渔币数', data: userCurrencyData.value.coin, weekadd:userSevenTotalIncomeData.value.coin, imgSrc:  yellowCoinsImg , bgccolor:'#FDEFD4' , textcolor:'#FFC960'},\r\n    { id: 3, name: '能量值', data: userCurrencyData.value.energy, weekadd:userSevenTotalIncomeData.value.energy, imgSrc: energyImg , bgccolor:'#D9FFD2' , textcolor:'#51B541'},\r\n]);\r\n\r\n// 转换数据为 ECharts 需要的格式\r\nconst transformDataForECharts = (data) => {\r\n    const dataSource = [['product', '鱼饵', '渔币', '能量']];\r\n    // 获取当前月份\r\n    const currentMonth = new Date().getMonth();\r\n    const monthAbbreviations = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    // 创建一个包含当前月份以及之前 11 个月份的数组\r\n    const lastTwelveMonths = Array.from({ length: 12 }, (_, i) => {\r\n        const monthIndex = (currentMonth - i + 12) % 12;\r\n        return monthAbbreviations[monthIndex];\r\n    }).reverse();\r\n    data.forEach((item, index) => {\r\n        const row = [\r\n            lastTwelveMonths[index], \r\n            item.point, \r\n            item.coin,  \r\n            item.energy \r\n        ];\r\n        dataSource.push(row);\r\n    });\r\n    return dataSource;\r\n};\r\n\r\n//获取用户当前货币数据\r\nasync function getCurrencydata() {\r\n  try {\r\n    const response = await axios.get(`/currency`)\r\n    if(response.data.code === 1){\r\n        userCurrencyData.value = response.data.data;\r\n        // ElMessage.success('获取用户当前货币数据成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户当前货币数据失败\");\r\n        ElMessage.error(\"获取用户当前货币数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户当前货币数据失败\", error); \r\n    ElMessage.error(\"获取用户当前货币数据失败\");\r\n  }\r\n}\r\n\r\n//获取用户近7天货币数据\r\nasync function getRecentIncomedata() {\r\n  try {\r\n    const response = await axios.get(`/currency/last7day`)\r\n    if(response.data.code === 1){\r\n        userSevenIncomeData.value = response.data.data;\r\n        userSevenIncomeData.value.forEach((item) => {\r\n            coinData.value.push(item.coin);\r\n            pointData.value.push(item.point);\r\n            energyData.value.push(item.energy);\r\n        });\r\n        // ElMessage.success('获取用户近7天货币数据成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户近7天货币数据失败\");\r\n        ElMessage.error(\"获取用户近7天货币数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户近7天货币数据失败\", error); \r\n    ElMessage.error(\"获取用户近7天货币数据失败\");\r\n  }\r\n}\r\n\r\n//获取用户近7天货币总收益\r\nasync function getRecentTotalIncomedata() {\r\n  try {\r\n    const response = await axios.get(`/currency/last7days`)\r\n    if(response.data.code === 1){\r\n        userSevenTotalIncomeData.value = response.data.data;\r\n        // ElMessage.success('获取用户近7天货币数据成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户近7天货币数据失败\");\r\n        ElMessage.error(\"获取用户近7天货币数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户近7天货币数据失败\", error); \r\n    ElMessage.error(\"获取用户近7天货币数据失败\");\r\n  }\r\n}\r\n\r\n//获取用户1年货币总收益\r\nasync function getYearIncomedata() {\r\n  try {\r\n    const response = await axios.get(`/currency/last12month`)\r\n    if(response.data.code === 1){\r\n        userYearTotalIncomeData.value = response.data.data;\r\n        // ElMessage.success('获取用户近7天货币数据成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户近7天货币数据失败\");\r\n        ElMessage.error(\"获取用户近7天货币数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户近7天货币数据失败\", error); \r\n    ElMessage.error(\"获取用户近7天货币数据失败\");\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n    await getCurrencydata();\r\n    await getRecentIncomedata();\r\n    await getRecentTotalIncomedata();\r\n    await getYearIncomedata();\r\n\r\n    // 折线图配置\r\n    const lineOption = {\r\n        title: {\r\n            text: '近7天收益'\r\n        },\r\n        tooltip: {\r\n            trigger: 'axis'\r\n        },\r\n        legend: {\r\n            data: ['能量', '渔币', '鱼饵'],\r\n        },\r\n        grid: {\r\n            bottom: '3%',\r\n            containLabel: true,\r\n            height: \"80%\"\r\n        },\r\n        toolbox: {\r\n            feature: {\r\n                saveAsImage: {}\r\n            }\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            splitLine :{\r\n                lineStyle:{\r\n                    type:'dashed'//虚线\r\n                },\r\n                show: true\r\n            }\r\n        },\r\n        series: [\r\n            {\r\n                name: '能量',\r\n                type: 'line',\r\n                stack: 'Total',\r\n                data:  energyData.value,\r\n                lineStyle: {\r\n                    width: 1\r\n                },\r\n                symbol: 'image://' + require('@/assets/CreateCenter/incomeData3.svg'),\r\n                symbolSize: [18,12],\r\n            },\r\n            {\r\n                name: '渔币',\r\n                type: 'line',\r\n                stack: 'Total',\r\n                data:  coinData.value,\r\n                lineStyle: {\r\n                    width: 1\r\n                },\r\n                symbol: 'image://' + require('@/assets/CreateCenter/incomeData1.svg'),\r\n                symbolSize: [18,12],\r\n            },\r\n            {\r\n                name: '鱼饵',\r\n                type: 'line',\r\n                stack: 'Total',\r\n                data:  pointData.value,\r\n                lineStyle: {\r\n                    width: 1\r\n                },\r\n                symbol: 'image://' + require('@/assets/CreateCenter/incomeData2.svg'),\r\n                symbolSize: [18,12],\r\n            },\r\n        ]\r\n    };\r\n\r\n    //柱状图配置\r\n    const barOption = {\r\n        title: {\r\n            text: '年收益一览'\r\n        },\r\n        legend: {\r\n            itemGap:20\r\n        },\r\n        tooltip: {},\r\n        grid: {\r\n            bottom: '3%',\r\n            left:'10%',\r\n            top:'60px',\r\n            containLabel: true,\r\n            width : \"70%\",\r\n            height: \"80%\"\r\n        },\r\n        dataset: {\r\n           source: transformDataForECharts(userYearTotalIncomeData.value)\r\n        },\r\n        xAxis: { type: 'category' },\r\n        yAxis: {},\r\n        series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }]\r\n    };\r\n\r\n    // 初始化图表\r\n    const lineChart = echarts.init(lineContainer.value);\r\n    lineChart.setOption(lineOption);\r\n\r\n    const barChart = echarts.init(barContainer.value);\r\n    barChart.setOption(barOption);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.showdata,\r\n.linechart,\r\n.barchart{\r\n    border: 1px solid #eaeaea;\r\n    box-shadow: 0px 0px 20px 0px rgba(96, 111, 160, 0.25), 0px 4px 4px 0px rgb(0 0 0 / 21%);\r\n    border-radius: 20px;\r\n    padding: 20px 30px;\r\n}\r\n.barbox{\r\n    width: 370px;\r\n    height: 260px;\r\n}\r\n.showdata,\r\n.linechart,\r\n.barchart{\r\n    width: 900px;\r\n    margin: 20px auto 40px; \r\n}\r\n.showdata{\r\n    height: 140px;\r\n}\r\n.font{\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    margin: 5px 0px;\r\n}\r\n.content_row:nth-child(1),\r\n.content_row:nth-child(2){\r\n    border-right: 1px solid #D4DCEC;\r\n}\r\n.boxborder{\r\n    width: 180px;\r\n    height: 80px;\r\n    padding: 10px 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 22px;\r\n}\r\n.boxborder:hover{\r\n    background-color: #F5F7FF;\r\n    border-radius: 15px;\r\n    cursor: pointer;\r\n}\r\n.content_box {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 1rem;\r\n}\r\n.left{\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n.right{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 5px;\r\n}\r\n.left img,\r\n.name,\r\n.data,\r\n.thisweek{\r\n    display: inline-block;\r\n}\r\n.left img{\r\n    width: 24px;\r\n    height: 24px;\r\n}\r\n.name,\r\n.thisweek{\r\n    color: #ACACAC;\r\n    font-size: 14px;\r\n}\r\n.data{\r\n    color:#606FA0; \r\n    font-size: larger; \r\n    font-weight: 600; \r\n    text-align: center;\r\n}\r\n.linebox,\r\n.barbox{\r\n    width: 100%;\r\n    height: 350px;\r\n    padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}