{"ast":null,"code":"import { ElMessage } from 'element-plus';\nimport { ref, onMounted, computed } from 'vue';\nimport axios from '@/utils/request';\nimport * as echarts from 'echarts';\nexport default {\n  __name: 'LikeData',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let barChart;\n    const userCreateData = ref([]);\n    const userCreateDataRatio = ref([]);\n    const barContainer = ref(null);\n    const num = ref(0); //记录稿件占比数据userCreateDataRatio中数组的个数\n\n    const manuData = computed(() => [{\n      id: 0,\n      name: '阅读量',\n      data: userCreateData.value.articleRead\n    }, {\n      id: 1,\n      name: '投币数',\n      data: userCreateData.value.articleReward\n    }, {\n      id: 2,\n      name: '转发数',\n      data: userCreateData.value.articleTransmit\n    }, {\n      id: 3,\n      name: '收藏数',\n      data: userCreateData.value.articleFavorite\n    }, {\n      id: 4,\n      name: '评论数',\n      data: userCreateData.value.articleComment\n    }, {\n      id: 5,\n      name: '点赞数',\n      data: userCreateData.value.articleLike\n    }]);\n\n    //判断返回的占比数据到底有没有4条，如果有4条，判断是否用户所有稿件刚好等于4，没有“其他”\n    const checkUserCreateDataRatio = (userCreateDataRatio, type) => {\n      if (userCreateDataRatio.length === 4) {\n        let sum = 0;\n        for (let i = 0; i < 4; i++) {\n          sum += Number(userCreateDataRatio[i].count);\n        }\n        if (sum === manuData.value[type].data) return 4; //这里不取0或1是因为有可能和底下的返回值重复,并且返回5刚好可以做到无论什么情况返回的都是userCreateDataRatio中数组的个数\n        else return 5;\n      } else {\n        return userCreateDataRatio.length;\n      }\n    };\n\n    //获取用户稿件数据\n    async function getCreatedata() {\n      try {\n        const response = await axios.get('/sharedata');\n        if (response.data.code === 1) {\n          userCreateData.value = response.data.data;\n          // ElMessage.success('获取用户稿件数据成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户稿件数据失败\");\n          ElMessage.error(\"获取用户稿件数据失败\");\n        }\n      } catch (error) {\n        console.error(\"获取用户稿件数据失败\", error);\n        ElMessage.error(\"获取用户稿件数据失败\");\n      }\n    }\n\n    //获取用户稿件占比数据\n    async function getCreatedataRatio(type) {\n      try {\n        const response = await axios.get(`/sharedata/${type}`);\n        if (response.data.code === 1) {\n          userCreateDataRatio.value = response.data.data;\n          num.value = checkUserCreateDataRatio(userCreateDataRatio.value, type);\n          const numData = ref(0);\n          if (num.value === 5) {\n            for (let record of userCreateDataRatio.value) {\n              numData.value += Number(record.count);\n              record.count = Number(record.count) / Number(manuData.value[type].data) * 100;\n            }\n            const tempData = 1 - numData.value / Number(manuData.value[type].data);\n            const newRecord = {\n              title: \"其他\",\n              count: tempData\n            };\n            userCreateDataRatio.value.push(newRecord);\n            numData.value = 0;\n          } else {\n            for (let record of userCreateDataRatio.value) {\n              record.count = Number(record.count) / Number(manuData.value[type].data) * 100;\n            }\n          }\n          if (Array.isArray(userCreateDataRatio.value)) {\n            userCreateDataRatio.value = userCreateDataRatio.value.map(item => {\n              return {\n                ...item,\n                count: parseFloat(item.count.toFixed(2))\n              };\n            });\n          }\n          // ElMessage.success('获取用户稿件占比数据成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户稿件占比数据失败\");\n          ElMessage.error(\"获取用户稿件占比数据失败\");\n        }\n      } catch (error) {\n        console.error(\"获取用户稿件占比数据失败\", error);\n        ElMessage.error(\"获取用户稿件占比数据失败\");\n      }\n    }\n    onMounted(async () => {\n      getCreatedata();\n      await getCreatedataRatio(2);\n\n      //将柱状图最大值设为深色\n      let dataValues = [];\n      let dataLabels = [];\n      if (userCreateDataRatio.value) {\n        for (let i = 0; i < num.value && i < userCreateDataRatio.value.length; i++) {\n          dataValues.push(userCreateDataRatio.value[i].count);\n          dataLabels.push(userCreateDataRatio.value[i].title);\n        }\n      } else {\n        console.log(\"未知的错误,num的值不是数量\");\n        ElMessage.error('未知的错误,num的值不是数量');\n      }\n      let maxVal = Math.max(...dataValues);\n      let seriesData = dataValues.map((value, index) => {\n        let color = value === maxVal ? '#606fa0' : '#bdc2e3';\n        return {\n          value: value,\n          itemStyle: {\n            color: color,\n            borderRadius: [10, 10, 10, 10]\n          },\n          name: dataLabels[index]\n        };\n      }).sort((a, b) => b.value - a.value);\n\n      //柱状图配置\n      const barOption = {\n        title: {\n          text: '数据来源稿件占比',\n          left: 'left',\n          textStyle: {\n            fontSize: 18,\n            fontWeight: 'bold'\n          }\n        },\n        grid: {\n          containLabel: true,\n          bottom: \"10%\"\n        },\n        xAxis: {\n          max: 100,\n          splitNumber: 1,\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            show: false\n          },\n          splitLine: {\n            show: false\n          }\n        },\n        yAxis: {\n          type: 'category',\n          data: seriesData.map(item => item.name).reverse(),\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            show: false\n          }\n        },\n        series: [{\n          name: '数据来源占比',\n          type: 'bar',\n          data: seriesData.reverse(),\n          label: {\n            show: true,\n            position: 'right',\n            formatter: '{c}%'\n          },\n          barWidth: 10\n        }]\n      };\n\n      // 初始化图表\n      barChart = echarts.init(barContainer.value);\n      barChart.setOption(barOption);\n    });\n    const __returned__ = {\n      get barChart() {\n        return barChart;\n      },\n      set barChart(v) {\n        barChart = v;\n      },\n      userCreateData,\n      userCreateDataRatio,\n      barContainer,\n      num,\n      manuData,\n      checkUserCreateDataRatio,\n      getCreatedata,\n      getCreatedataRatio,\n      get ElMessage() {\n        return ElMessage;\n      },\n      ref,\n      onMounted,\n      computed,\n      get axios() {\n        return axios;\n      },\n      get echarts() {\n        return echarts;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ElMessage","ref","onMounted","computed","axios","echarts","barChart","userCreateData","userCreateDataRatio","barContainer","num","manuData","id","name","data","value","articleRead","articleReward","articleTransmit","articleFavorite","articleComment","articleLike","checkUserCreateDataRatio","type","length","sum","i","Number","count","getCreatedata","response","get","code","msg","error","toString","console","getCreatedataRatio","numData","record","tempData","newRecord","title","push","Array","isArray","map","item","parseFloat","toFixed","dataValues","dataLabels","log","maxVal","Math","max","seriesData","index","color","itemStyle","borderRadius","sort","a","b","barOption","text","left","textStyle","fontSize","fontWeight","grid","containLabel","bottom","xAxis","splitNumber","axisLine","show","axisTick","axisLabel","splitLine","yAxis","reverse","series","label","position","formatter","barWidth","init","setOption"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/CreateCenter/components/TheData/ShareDataRatio/LikeData.vue"],"sourcesContent":["<template>\r\n    <div ref=\"barContainer\" class=\"barbox\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus';\r\nimport { ref, onMounted,computed} from 'vue';\r\nimport axios from '@/utils/request';\r\nimport * as echarts from 'echarts';\r\n\r\nlet barChart;\r\nconst userCreateData = ref([]);\r\nconst userCreateDataRatio = ref([]);\r\nconst barContainer = ref(null)\r\nconst num = ref(0)//记录稿件占比数据userCreateDataRatio中数组的个数\r\n\r\nconst manuData = computed(() => [\r\n    { id: 0, name: '阅读量', data: userCreateData.value.articleRead },\r\n    { id: 1, name: '投币数', data: userCreateData.value.articleReward},\r\n    { id: 2, name: '转发数', data: userCreateData.value.articleTransmit},\r\n    { id: 3, name: '收藏数', data: userCreateData.value.articleFavorite},\r\n    { id: 4, name: '评论数', data: userCreateData.value.articleComment},\r\n    { id: 5, name: '点赞数', data: userCreateData.value.articleLike},\r\n]);\r\n\r\n//判断返回的占比数据到底有没有4条，如果有4条，判断是否用户所有稿件刚好等于4，没有“其他”\r\nconst checkUserCreateDataRatio = (userCreateDataRatio,type) => {\r\n    if (userCreateDataRatio.length === 4) {\r\n        let sum = 0;\r\n        for (let i = 0; i < 4; i++) {\r\n            sum +=  Number(userCreateDataRatio[i].count);\r\n        }\r\n        if(sum === manuData.value[type].data) return 4;//这里不取0或1是因为有可能和底下的返回值重复,并且返回5刚好可以做到无论什么情况返回的都是userCreateDataRatio中数组的个数\r\n        else return 5;\r\n    } else {\r\n        return userCreateDataRatio.length;\r\n    }\r\n}\r\n\r\n//获取用户稿件数据\r\nasync function getCreatedata() {\r\n  try {\r\n    const response = await axios.get('/sharedata')\r\n    if(response.data.code === 1){\r\n        userCreateData.value = response.data.data;\r\n        // ElMessage.success('获取用户稿件数据成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户稿件数据失败\");\r\n        ElMessage.error(\"获取用户稿件数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户稿件数据失败\", error); \r\n    ElMessage.error(\"获取用户稿件数据失败\");\r\n  }\r\n}\r\n\r\n\r\n//获取用户稿件占比数据\r\nasync function getCreatedataRatio(type) {\r\n  try {\r\n    const response = await axios.get(`/sharedata/${type}`);\r\n    if(response.data.code === 1){\r\n        userCreateDataRatio.value = response.data.data;\r\n        num.value = checkUserCreateDataRatio(userCreateDataRatio.value,type);\r\n        const numData = ref(0);\r\n        if(num.value === 5){\r\n            for(let record of userCreateDataRatio.value ){\r\n                numData.value +=  Number(record.count); \r\n                record.count = (Number(record.count) / Number(manuData.value[type].data)) * 100;\r\n            }\r\n            const tempData = 1-(numData.value / Number(manuData.value[type].data));\r\n            const newRecord = {\r\n                title:\"其他\",\r\n                count:tempData,\r\n            }\r\n            userCreateDataRatio.value.push(newRecord);\r\n            numData.value = 0;\r\n        }else{\r\n            for(let record of userCreateDataRatio.value ){\r\n                record.count =  (Number(record.count) / Number(manuData.value[type].data))* 100;\r\n            }\r\n        }\r\n        if (Array.isArray(userCreateDataRatio.value)) {\r\n            userCreateDataRatio.value = userCreateDataRatio.value.map(item => {\r\n                return {\r\n                    ...item,\r\n                    count: parseFloat(item.count.toFixed(2))\r\n                };\r\n            });\r\n        }\r\n        // ElMessage.success('获取用户稿件占比数据成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户稿件占比数据失败\");\r\n        ElMessage.error(\"获取用户稿件占比数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户稿件占比数据失败\", error); \r\n    ElMessage.error(\"获取用户稿件占比数据失败\");\r\n  }\r\n}\r\n\r\n\r\n\r\nonMounted(async () => {\r\n    getCreatedata();\r\n    await getCreatedataRatio(2);\r\n\r\n    //将柱状图最大值设为深色\r\n    let dataValues = [];\r\n    let dataLabels = [];\r\n\r\n    if (userCreateDataRatio.value) {\r\n        for (let i = 0; i < num.value && i < userCreateDataRatio.value.length; i++) {\r\n            dataValues.push(userCreateDataRatio.value[i].count);\r\n            dataLabels.push(userCreateDataRatio.value[i].title);\r\n        }\r\n    } else {\r\n        console.log(\"未知的错误,num的值不是数量\");\r\n        ElMessage.error('未知的错误,num的值不是数量');\r\n    }\r\n\r\n    let maxVal = Math.max(...dataValues);\r\n    let seriesData = dataValues.map((value, index) => {\r\n        let color = value === maxVal ? '#606fa0' : '#bdc2e3';\r\n        return {\r\n            value: value,\r\n            itemStyle: {\r\n                color: color,\r\n                borderRadius: [10, 10, 10, 10]\r\n            },\r\n            name: dataLabels[index]\r\n        };\r\n    }).sort((a, b) => b.value - a.value); \r\n\r\n    //柱状图配置\r\n    const barOption = {\r\n        title: {\r\n            text: '数据来源稿件占比',\r\n            left: 'left',\r\n            textStyle: {\r\n                fontSize: 18,\r\n                fontWeight: 'bold'\r\n            }\r\n        },\r\n        grid: {\r\n            containLabel: true,\r\n            bottom: \"10%\"\r\n        },\r\n        xAxis: {\r\n            max: 100,\r\n            splitNumber: 1,\r\n            axisLine: {\r\n                show: false\r\n            },\r\n            axisTick: {\r\n                show: false\r\n            },\r\n            axisLabel: {\r\n                show: false\r\n            },\r\n            splitLine: {\r\n                show: false\r\n            }\r\n        },\r\n        yAxis: {\r\n            type: 'category',\r\n            data: seriesData.map(item => item.name).reverse(),\r\n            axisTick: {\r\n                show: false\r\n            },\r\n            axisLine: {\r\n                show: false\r\n            }\r\n        },\r\n        series: [{\r\n            name: '数据来源占比',\r\n            type: 'bar',\r\n            data: seriesData.reverse(),\r\n            label: {\r\n                show: true,\r\n                position: 'right',\r\n                formatter: '{c}%'\r\n            },\r\n            barWidth: 10\r\n        }]\r\n    };\r\n\r\n    // 初始化图表\r\n    barChart = echarts.init(barContainer.value);\r\n    barChart.setOption(barOption);\r\n});\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.barbox{\r\n    width: 370px;\r\n    height: 260px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}