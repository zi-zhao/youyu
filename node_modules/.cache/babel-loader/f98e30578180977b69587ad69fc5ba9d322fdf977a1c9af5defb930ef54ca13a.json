{"ast":null,"code":"import { ElMessage } from 'element-plus';\nimport { ref, onMounted } from 'vue';\nimport axios from '@/utils/request.js';\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\nimport { convertDateFormat } from '@/utils/timeFormat';\nexport default {\n  __name: 'FocusMe',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\n    const focusMeNotification = ref([]);\n    const currentPage = ref(1);\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getMyFocusNote(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n    async function getMyFocusNote(currentPage) {\n      try {\n        // const response = await axios.get('/users/fans?apifoxApiId=105505347');\n        const response = await axios.get('/users/fans', {\n          params: {\n            id: userId,\n            page: currentPage,\n            pazeSize: 10\n          }\n        });\n        if (response.data.data.records) {\n          const updates = response.data.data.records.map(async record => {\n            const avatar = await getUsersAvatarFromCOS(record.fanId);\n            const createTime = convertDateFormat(record.createTime);\n            const verified = await fetchUserInformation(record.fanId);\n            return {\n              ...record,\n              avatar,\n              createTime,\n              verified\n            };\n          });\n          const updatedRecords = await Promise.all(updates);\n          focusMeNotification.value = [...focusMeNotification.value, ...updatedRecords];\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else error => {\n          console.log(error);\n          ElMessage.error('获取用户粉丝数据失败');\n        };\n      } catch (error) {\n        console.log(error);\n        ElMessage.error('获取用户粉丝数据失败');\n      }\n    }\n\n    // 获取用户信息\n    const fetchUserInformation = async userId => {\n      try {\n        const response = await axios.get(`/users/${userId}`);\n        if (response.data.code === 1) {\n          return response.data.data.verified;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取用户信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户信息失败\", error);\n        ElMessage.error('获取用户信息失败');\n      }\n    };\n    onMounted(() => {\n      getMyFocusNote(currentPage.value);\n    });\n    const __returned__ = {\n      userId,\n      focusMeNotification,\n      currentPage,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getMyFocusNote,\n      fetchUserInformation,\n      get ElMessage() {\n        return ElMessage;\n      },\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get getUsersAvatarFromCOS() {\n        return getUsersAvatarFromCOS;\n      },\n      get convertDateFormat() {\n        return convertDateFormat;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ElMessage","ref","onMounted","axios","getUsersAvatarFromCOS","convertDateFormat","userId","localStorage","getItem","focusMeNotification","currentPage","isLoading","load","value","getMyFocusNote","error","console","response","get","params","id","page","pazeSize","data","records","updates","map","record","avatar","fanId","createTime","verified","fetchUserInformation","updatedRecords","Promise","all","code","msg","toString","log"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/MessageCenter/component/FocusMe/FocusMe.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"first\">\r\n            <div class=\"one\">\r\n                <img src=\"@/assets/MessageCenter/FocusMe.svg\" alt=\"\">\r\n                <span>关注列表</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"then\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n            <div v-for=\"(source,index) in focusMeNotification\" :key=\"index\" class=\"box\">\r\n                <div class=\"large\">\r\n                    <img :src=source.avatar alt=\"\" class=\"cover\">\r\n                    <div class=\"text\">\r\n                        <div style=\"display: flex;align-items: center;\">\r\n                            <span class=\"name\">{{ source.fanUsername }}</span>\r\n                            <img v-if=\"source.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin-left: -9px;\" alt=\"\">\r\n                        </div>\r\n                        <span class=\"middle\">关注了我</span>\r\n                        <span class=\"time\">{{ source.createTime }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <el-empty \r\n                v-if=\"!focusMeNotification || focusMeNotification.length === 0\" \r\n                :image-size=\"200\" \r\n                description=\"您暂时还没有收到关注消息呢！\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus';\r\nimport {  ref,onMounted } from 'vue';\r\nimport axios from '@/utils/request.js';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport { convertDateFormat } from '@/utils/timeFormat';\r\n\r\nconst userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\nconst focusMeNotification = ref([]);\r\nconst currentPage = ref(1);\r\n\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n        if(currentPage.value === 1){\r\n            currentPage.value++;\r\n        }\r\n        await getMyFocusNote(currentPage.value);\r\n        currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n\r\nasync function getMyFocusNote(currentPage) {\r\n    try {\r\n        // const response = await axios.get('/users/fans?apifoxApiId=105505347');\r\n        const response = await axios.get('/users/fans', {\r\n                params: {\r\n                    id:userId,\r\n                    page:currentPage,\r\n                    pazeSize:10\r\n                }\r\n            });\r\n        if(response.data.data.records){\r\n            const updates = response.data.data.records.map(async (record) => {\r\n                const avatar = await getUsersAvatarFromCOS(record.fanId);\r\n                const createTime = convertDateFormat(record.createTime);\r\n                const verified = await fetchUserInformation(record.fanId);\r\n                return { ...record, avatar, createTime,verified };\r\n            });\r\n            const updatedRecords = await Promise.all(updates);\r\n            focusMeNotification.value = [...focusMeNotification.value, ...updatedRecords];\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else(error)=>{\r\n            console.log(error);\r\n            ElMessage.error('获取用户粉丝数据失败');\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n        ElMessage.error('获取用户粉丝数据失败');\r\n    }\r\n}\r\n\r\n    // 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\n\r\nonMounted(() => {\r\n    getMyFocusNote(currentPage.value)\r\n})\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.first{\r\n    width: 77vw;\r\n    padding: 12px 12px 0px; \r\n    justify-content: center; \r\n    gap: 12px;\r\n    border-radius: 8px;\r\n    border: 2px solid #F0F0F0;\r\n    background: #FFF;\r\n    margin-top: 50px;\r\n}\r\n.one{\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n    align-items: center;\r\n}\r\n.one img{\r\n    width: 20px;\r\n    height: 20px;\r\n    align-items: center;\r\n}\r\n.one span{\r\n    color: #6B757B;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    line-height: 1.6; \r\n    margin-left: 8px;\r\n}\r\n.then{\r\n    width: 77vw;\r\n    height: 78vh;\r\n    overflow-y: scroll;\r\n    padding: 12px 12px 0px;\r\n    border-radius: 8px;\r\n    border: 2px solid #F0F0F0;\r\n    margin-top: 12px;\r\n}\r\n.box{\r\n    width: 95%;\r\n    margin: 0px auto;\r\n    border-bottom:1px solid #e7e7e7;\r\n    display: flex;\r\n}\r\n.cover{\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 100%;\r\n}\r\n.name{\r\n    color: #000;\r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 260%; \r\n    margin: 0 10px;\r\n}\r\n.middle{\r\n    color: #505050;\r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 260%;\r\n    margin-left: 10px;\r\n}\r\n.text{\r\n    display: inline-block;\r\n}\r\n.time{\r\n    color: #A1A1A1;\r\n    font-size: 12px;\r\n    line-height: 120%;\r\n    position: absolute;\r\n    right: 0px;\r\n    top: 50%;\r\n}\r\n.aritle{\r\n    width: 70px;\r\n    height: 70px;\r\n    position: absolute;\r\n    right: 36px;\r\n    bottom: 10px;\r\n    top: 10px;\r\n}\r\n.large{\r\n    display: flex;\r\n    align-items: center;\r\n    width: 98%;\r\n    gap: 5px;\r\n    height: 100px;\r\n    position: relative;\r\n}\r\n.number{\r\n    color: #9FA9CA;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    line-height: 120%;\r\n}\r\n::v-deep .el-checkbox.el-checkbox--large{\r\n    width: 80px;\r\n}\r\n@media (max-width: 768px) {\r\n    .first,\r\n    .then{\r\n        width: 800px;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}