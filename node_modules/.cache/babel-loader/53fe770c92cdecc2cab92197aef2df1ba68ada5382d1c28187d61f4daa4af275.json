{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\nimport axios from '@/utils/request';\nimport { Swiper, SwiperSlide } from 'swiper/vue'; // swiper所需组件\n// 这是分页器和对应方法，swiper好像在6的时候就已经分离了分页器和一些其他工具\nimport { Autoplay, Navigation, Pagination, A11y } from 'swiper';\n// 引入swiper样式，对应css 如果使用less或者css只需要把scss改为对应的即可\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { fetchShareCoverage } from '@/utils/fileService';\nimport ShareCommentL from './ShareCommentL.vue';\nimport CfDialog from '@/page/components/CfDialog';\nimport { ElMessage } from 'element-plus';\nimport AreportedDialog from '@/page/components/AreportedDialog.vue';\nimport ShareDialog from './ShareDialog.vue';\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\n\n// 点赞部分的动画toggleLike\nimport unlikedImage from '@/assets/LikeBefore.svg';\nimport likedImage from '@/assets/LikeAfter.svg';\nconst type = 1;\nexport default {\n  __name: 'MainShare',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const currentPage = ref(1);\n    const user_id = localStorage.getItem(\"userId\"); // 获取用户ID\n    const modules = [Autoplay, Pagination, Navigation, A11y];\n    const navigation = ref({\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev'\n    });\n    const entries = ref([]); //存放分享列表的数据\n    const limitWord = ref(150); //设置分享在不展开的情况下显示内容的上限\n    const dialogFormVisible = ref(false); //控制cfdialog弹窗（显示分享收藏列表）是否弹出\n    const favoriteId = ref(); //用户选择的收藏的ID\n    const tempShareId = ref();\n    const tempShareId2 = ref();\n    const dialogVisible = ref(false); //控制文章举报弹框是否显示\n    const reportedShareId = ref(); //举报弹窗传入的Id\n    const dialogShowVisible = ref(false); //控制分享展示弹框是否展示\n    const openShareDialog = id => {\n      tempShareId.value = id;\n      dialogShowVisible.value = true;\n    };\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await fetchData(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n\n    //获取分享信息\n    const fetchData = async currentPage => {\n      try {\n        const response = await axios.get('/share/list', {\n          params: {\n            pageSize: 10,\n            currentPage: currentPage\n          }\n        });\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\n          const updates = response.data.data.records.map(async record => {\n            const extractedImagesPromise = fetchShareCoverage(record.id);\n            const authorAvatarPromise = getUsersAvatarFromCOS(record.userId);\n            const verified = await fetchUserInformation(record.userId);\n            const likeStatus = await determineImage(1, record.id);\n            const favoriteStatus = await deterFavorite(record.id);\n            const [extractedImages, authorAvatar] = await Promise.all([extractedImagesPromise, authorAvatarPromise]);\n            return {\n              ...record,\n              verified,\n              likeStatus,\n              extractedImages,\n              favoriteStatus,\n              authorAvatar,\n              showMoreButtonVisible: checkShowMoreButtonVisible(extractedImages),\n              needsExpansion: checkContentOverflow(record.content),\n              showExpansion: checkContentOverflow(record.content),\n              lessContent: record.content.slice(0, limitWord.value),\n              labelsArray: record.label.split(',').map(item => item.trim()),\n              showComments: false\n            };\n          });\n          const updatedEntries = await Promise.all(updates);\n          entries.value = [...entries.value, ...updatedEntries];\n        } else if (response.data.code === 1 && response.data.data.records.length === 0) {\n          // ElMessage.info('已加载所有数据');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        }\n      } catch (error) {\n        console.error('接口请求失败', error);\n      }\n    };\n\n    //点击打开举报弹窗\n    async function handleReportShare(shareId) {\n      reportedShareId.value = shareId;\n      dialogVisible.value = true;\n      await fetchShareRead(shareId);\n    }\n\n    //点击打开分享弹窗\n    async function handleUpdateShare(shareId) {\n      tempShareId2.value = shareId;\n      dialogFormVisible.value = true;\n      await fetchShareRead(shareId);\n    }\n    //接受cfdialog返回的数据，从而确定收藏Id\n    const handleUpdateValue = data => {\n      favoriteId.value = data[0];\n    };\n\n    //分享收藏相关接口\n    async function toggleFavorite(shareId) {\n      try {\n        const response = await axios.post(`/favorite/share`, {\n          favoriteId: favoriteId.value,\n          contentId: shareId\n        });\n        if (response.data.code === 1) {\n          let entryToUpdate = entries.value.find(entry => entry.id === shareId);\n          if (entryToUpdate) {\n            entryToUpdate.favoriteStatus = 1;\n            entryToUpdate.favoriteCount = response.data.data;\n          }\n          console.log('分享收藏成功');\n          await fetchShareRead(shareId);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(response.data.msg || 'Unknown error');\n          ElMessage.error('分享收藏失败');\n        }\n      } catch (error) {\n        console.error('分享收藏成功', error.message);\n        ElMessage.error('分享收藏成功');\n      }\n    }\n\n    // 使用 watch 来监听 favoriteId 的变化\n    watch(favoriteId, (newVal, oldVal) => {\n      if (newVal !== oldVal) {\n        toggleFavorite(tempShareId2.value);\n      }\n    });\n\n    //判断收藏状态\n    async function deterFavorite(id) {\n      try {\n        const response = await axios.get(`/favorite/share/${id}`);\n        if (response.data.code === 1) {\n          return response.data.data;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(response.data.msg || 'Unknown error');\n        }\n      } catch (error) {\n        console.error('获取点赞状态失败', error.message);\n        ElMessage.error('获取收藏状态失败');\n      }\n    }\n\n    //判断点赞状态\n    async function determineImage(type, id) {\n      try {\n        const response = await axios.get(`/like/state`, {\n          params: {\n            id: id,\n            type: type\n          }\n        });\n        if (response.data.code === 1) {\n          return response.data.data;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(response.data.msg || 'Unknown error');\n          ElMessage.error('获取点赞状态失败');\n        }\n      } catch (error) {\n        console.error('获取点赞状态失败', error.message);\n      }\n    }\n\n    //点赞相关方法\n    async function toggleLike(likeStatus, shareId) {\n      try {\n        const config = likeStatus === 0 ? {\n          method: 'put',\n          url: `/share/like`,\n          data: {\n            userId: user_id,\n            shareId: shareId\n          }\n        } : {\n          method: 'delete',\n          url: `/share/unlike`,\n          data: {\n            userId: user_id,\n            shareId: shareId\n          }\n        };\n        const response = await axios(config);\n        if (response.data.code === 1) {\n          let entryToUpdate = entries.value.find(entry => entry.id === shareId);\n          if (entryToUpdate) {\n            entryToUpdate.likeStatus = entryToUpdate.likeStatus === 0 ? 1 : 0;\n            entryToUpdate.likeCount = response.data.data;\n          }\n          await fetchShareRead(shareId);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(response.data.msg || 'Unknown error');\n          ElMessage.error('点赞操作失败');\n        }\n      } catch (error) {\n        console.error('获取点赞状态失败', error.message);\n      }\n    }\n\n    //说实话，我也不知道这两个函数的真实作用，但是删了会出问题，算了，能跑就行\n    const prevEl = () => {\n      console.log('1');\n    };\n    const nextEl = () => {\n      console.log('1');\n    };\n\n    //判断该分享的内容是否需要展开收回（写到接口方法里显得太臃肿了所以提出来了）\n    const checkContentOverflow = content => {\n      if (content.length > limitWord.value) {\n        return true;\n      }\n    };\n\n    //判断该分享是否需要展示轮播箭头（写到接口方法里显得太臃肿了所以提出来了）\n    const checkShowMoreButtonVisible = extractedImages => {\n      if (extractedImages.length > 4) {\n        return true;\n      }\n    };\n\n    // 分享的阅读接口\n    const fetchShareRead = async id => {\n      try {\n        const response = await axios.post(`/share/read/${id}`);\n        if (response.data.code === 1) {\n          console.log('HAHAHA');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取分享的阅读接口失败');\n        }\n      } catch (error) {\n        console.error(\"获取分享的阅读接口失败\", error);\n        ElMessage.error('获取分享的阅读接口失败');\n      }\n    };\n\n    // 获取用户信息\n    const fetchUserInformation = async userId => {\n      try {\n        const response = await axios.get(`/users/${userId}`);\n        if (response.data.code === 1) {\n          return response.data.data.verified;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取用户信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户信息失败\", error);\n        ElMessage.error('获取用户信息失败');\n      }\n    };\n    onMounted(() => {\n      fetchData(currentPage.value);\n    });\n    const __returned__ = {\n      currentPage,\n      user_id,\n      modules,\n      navigation,\n      entries,\n      limitWord,\n      dialogFormVisible,\n      favoriteId,\n      tempShareId,\n      tempShareId2,\n      dialogVisible,\n      reportedShareId,\n      dialogShowVisible,\n      type,\n      openShareDialog,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      fetchData,\n      handleReportShare,\n      handleUpdateShare,\n      handleUpdateValue,\n      toggleFavorite,\n      deterFavorite,\n      determineImage,\n      toggleLike,\n      prevEl,\n      nextEl,\n      checkContentOverflow,\n      checkShowMoreButtonVisible,\n      fetchShareRead,\n      fetchUserInformation,\n      ref,\n      onMounted,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get Swiper() {\n        return Swiper;\n      },\n      get SwiperSlide() {\n        return SwiperSlide;\n      },\n      get Autoplay() {\n        return Autoplay;\n      },\n      get Navigation() {\n        return Navigation;\n      },\n      get Pagination() {\n        return Pagination;\n      },\n      get A11y() {\n        return A11y;\n      },\n      get fetchShareCoverage() {\n        return fetchShareCoverage;\n      },\n      ShareCommentL,\n      get CfDialog() {\n        return CfDialog;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      AreportedDialog,\n      ShareDialog,\n      get getUsersAvatarFromCOS() {\n        return getUsersAvatarFromCOS;\n      },\n      get unlikedImage() {\n        return unlikedImage;\n      },\n      get likedImage() {\n        return likedImage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","axios","Swiper","SwiperSlide","Autoplay","Navigation","Pagination","A11y","fetchShareCoverage","ShareCommentL","CfDialog","ElMessage","AreportedDialog","ShareDialog","getUsersAvatarFromCOS","unlikedImage","likedImage","type","currentPage","user_id","localStorage","getItem","modules","navigation","nextEl","prevEl","entries","limitWord","dialogFormVisible","favoriteId","tempShareId","tempShareId2","dialogVisible","reportedShareId","dialogShowVisible","openShareDialog","id","value","isLoading","load","fetchData","error","console","response","get","params","pageSize","data","code","records","length","updates","map","record","extractedImagesPromise","authorAvatarPromise","userId","verified","fetchUserInformation","likeStatus","determineImage","favoriteStatus","deterFavorite","extractedImages","authorAvatar","Promise","all","showMoreButtonVisible","checkShowMoreButtonVisible","needsExpansion","checkContentOverflow","content","showExpansion","lessContent","slice","labelsArray","label","split","item","trim","showComments","updatedEntries","msg","toString","handleReportShare","shareId","fetchShareRead","handleUpdateShare","handleUpdateValue","toggleFavorite","post","contentId","entryToUpdate","find","entry","favoriteCount","log","message","newVal","oldVal","toggleLike","config","method","url","likeCount"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/ShareShow/components/MainShare.vue"],"sourcesContent":["<template>\r\n    <div class=\"large\">\r\n        <div class=\"main\"  v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">  \r\n            <div v-for=\"(entry, index) in entries\" :key=\"index\" class=\"show\">\r\n                <!-- 用户头像+名称+时间+发表了动态 -->\r\n                <div class=\"user\">\r\n                    <div class=\"userPhoto\">\r\n                    <img :src=\"entry.authorAvatar\" alt=\"User Avatar\" />\r\n                    </div>\r\n                    <div class=\"userInfo\">\r\n                        <div class=\"userDetails\">\r\n                            <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                                <span class=\"name\">{{ entry.username }}</span>\r\n                                <img v-if=\"entry.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"userActivity\">\r\n                            <span class=\"time\">{{ entry.postTime }}</span>\r\n                            <span class=\"time\">发表了动态</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- 分享标题 -->\r\n                <div class=\"title\">\r\n                    <h1 style=\"margin: 50px 0px 30px;\">{{ entry.title }}</h1>\r\n                </div>\r\n                <!-- 分享内容 -->\r\n                <div  class=\"content-wrapper\" >\r\n                    <p @click=\"openShareDialog(entry.id)\" :class=\"{ 'limited': entry.needsExpansion }\" class=\"content\">\r\n                        {{ entry.content }}\r\n                    </p>\r\n                    <button \r\n                        v-if=\"entry.showExpansion\" \r\n                        @click= \"entry.needsExpansion = !entry.needsExpansion\"\r\n                        class=\"expand-btn\"\r\n                    >\r\n                        {{ entry.needsExpansion ? '展开':'折叠'   }}\r\n                    </button>\r\n                </div>\r\n                <!-- 标签展示区域 -->\r\n                <div class=\"rlable\">\r\n                <div class=\"buttons-container\">\r\n                    <button v-for=\"label in entry.labelsArray\" :key=\"label\" class=\"tag-btn\">#{{ label }}</button>\r\n                </div>\r\n                </div>\r\n\r\n                <!-- Swiper 组件，用于图片轮播 :autoplay=\"{delay: 200,disableOnInteraction: false}\"-->\r\n                <!-- 图片个数为1或2或3 盒子位于文字右侧-->\r\n                <div  @click=\"openShareDialog(entry.id)\" class=\"case_1\" v-if=\"entry.extractedImages && entry.extractedImages.length > 0 && entry.extractedImages.length < 4\">\r\n                    <el-carousel :height=\"height\" :autoplay=\"false\" indicator-position=\"outside\">\r\n                        <el-carousel-item v-for= \"(image, imgIndex) in entry.extractedImages\" :key=\"imgIndex\"> \r\n                            <img :src=\"image\" class=\"carousel-image_1\" alt=\"Image\" />\r\n                        </el-carousel-item>\r\n                    </el-carousel>\r\n                </div>\r\n                <!-- 图片个数为4 盒子位于文字下侧，不使用swiper-->\r\n                <div  @click=\"openShareDialog(entry.id)\" class=\"case_2\" v-if=\"entry.extractedImages && entry.extractedImages.length === 4\">\r\n                    <div class=\"picture_contain\">\r\n                        <div class=\"everyPic\" v-for= \"(image, imgIndex) in entry.extractedImages\" :key=\"imgIndex\">\r\n                            <img :src=\"image\" class=\"carousel-image_2\" alt=\"Image\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- 图片个数大于4 盒子位于文字下侧，使用swiper-->\r\n                <div @click=\"openShareDialog(entry.id)\" class=\"case_3\" v-if=\"entry.extractedImages && entry.extractedImages.length > 4\">\r\n                    <swiper \r\n                        :slidesPerView=5\r\n                        :spaceBetween=100\r\n                        :navigation=\"navigation\"\r\n                        loop = true\r\n                        :centeredSlides=\"false\"\r\n                        :modules=\"modules\"\r\n                        :id=\"`swiper-${index}`\" \r\n                    >\r\n                        <swiper-slide v-for= \"(image, imgIndex) in entry.extractedImages\" :key=\"imgIndex\">\r\n                            <img :src=\"image\" class=\"carousel-image_3\" alt=\"Image\" />\r\n                        </swiper-slide>\r\n                        <div class=\"swiper-button-prev\" @click.stop='prevEl'><i class=\"fas fa-chevron-left\"></i></div>\r\n                        <div class=\"swiper-button-next\" @click.stop='nextEl'><i class=\"fas fa-chevron-right\"></i></div>\r\n                    </swiper>  \r\n                </div>\r\n                <!-- 点赞、评论和转发数量 -->\r\n                <div class=\"icons-container\">\r\n                    <!-- 点赞盒子 -->\r\n                    <div class=\"icon-wrapper\">\r\n                        <img class=\"like-pic\"  :src=\" entry.likeStatus === 0 ? unlikedImage : likedImage \" @click=\"toggleLike(entry.likeStatus,entry.id)\">\r\n                        <span class=\"like_num\">{{ entry.likeCount }}</span>\r\n                    </div>\r\n                    <div class=\"icon-wrapper\"  @click= \"entry.showComments = !entry.showComments\">\r\n                        <img class=\"like-pic\" src=\"@/assets/Comment.svg\">\r\n                        <span class=\"like_num\">{{ entry.commentCount }}</span>\r\n                    </div>\r\n                    <!-- 收藏盒子 -->\r\n                    <div class=\"icon-wrapper\">\r\n                        <img class=\"like-pic\"  v-if=\" entry.favoriteStatus === 0 \" src=\"@/assets/FavoriteBefore.svg\" @click=\"handleUpdateShare(entry.id)\">\r\n                        <img class=\"like-pic\" v-if=\" entry.favoriteStatus === 1 \" src=\"@/assets/FavoriteAfter.svg\" >\r\n                        <span class=\"like_num\">{{ entry.favoriteCount }}</span>\r\n                    </div>\r\n                    <div v-if=\"dialogFormVisible\">\r\n                        <CfDialog  v-model=\"dialogFormVisible\" @updateValue=\"handleUpdateValue\" ClassifyName=\"分享收藏\"></CfDialog>\r\n                    </div>\r\n                    <!-- <div class=\"cri\">\r\n                        <img class=\"like-pic\" src=\"@/assets/Transpond.svg\">\r\n                        <span class=\"like_num\">{{ entry.transmitCount }}</span>\r\n                    </div> -->\r\n                    <div class=\"report\" @click=\"handleReportShare(entry.id)\">\r\n                        <img src=\"@/assets/Report.svg\" alt=\"\" style=\"width: 16px;height: 16px;\">\r\n                        <span>举报</span>\r\n                    </div>\r\n                    <div v-if=\"dialogVisible\">\r\n                        <AreportedDialog v-model=\"dialogVisible\" :type=\"type\" :id=\"reportedShareId\" ></AreportedDialog>\r\n                    </div>\r\n                </div>\r\n                <div style=\"width: 100%;\">\r\n                    <ShareCommentL v-if=\"entry.showComments\" \r\n                        :shareId = \"entry.id\"\r\n                        :shareAuthorId = \"entry.userId\"\r\n                        :shareAuthorName = \"entry.username\"\r\n                        :shareTitle = \"entry.title\">\r\n                    </ShareCommentL>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n        <div v-if=\"dialogShowVisible\">\r\n            <ShareDialog v-model=\"dialogShowVisible\" :Id = \"tempShareId\"></ShareDialog>\r\n        </div>\r\n    </div>\r\n</template>\r\n    \r\n<script setup>\r\nimport { ref, onMounted,watch} from 'vue';\r\nimport axios from '@/utils/request';\r\nimport {Swiper, SwiperSlide} from 'swiper/vue'; // swiper所需组件\r\n// 这是分页器和对应方法，swiper好像在6的时候就已经分离了分页器和一些其他工具\r\nimport {Autoplay, Navigation, Pagination, A11y} from 'swiper';\r\n// 引入swiper样式，对应css 如果使用less或者css只需要把scss改为对应的即可\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\nimport { fetchShareCoverage } from '@/utils/fileService';\r\nimport ShareCommentL from './ShareCommentL.vue';\r\nimport CfDialog from '@/page/components/CfDialog';\r\nimport { ElMessage } from 'element-plus';\r\nimport AreportedDialog from '@/page/components/AreportedDialog.vue';\r\nimport ShareDialog from './ShareDialog.vue';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\n\r\n// 点赞部分的动画toggleLike\r\nimport unlikedImage from '@/assets/LikeBefore.svg';\r\nimport likedImage from '@/assets/LikeAfter.svg';\r\n\r\nconst currentPage = ref(1);\r\nconst user_id = localStorage.getItem(\"userId\"); // 获取用户ID\r\nconst modules = [Autoplay, Pagination, Navigation, A11y];\r\nconst navigation = ref({\r\n    nextEl: '.swiper-button-next',\r\n    prevEl: '.swiper-button-prev',\r\n})\r\nconst entries = ref([]);//存放分享列表的数据\r\nconst limitWord = ref(150);//设置分享在不展开的情况下显示内容的上限\r\nconst dialogFormVisible = ref(false);//控制cfdialog弹窗（显示分享收藏列表）是否弹出\r\nconst favoriteId = ref();//用户选择的收藏的ID\r\nconst tempShareId = ref();\r\nconst tempShareId2 = ref();\r\nconst dialogVisible = ref(false);//控制文章举报弹框是否显示\r\nconst reportedShareId = ref();//举报弹窗传入的Id\r\nconst dialogShowVisible = ref(false)//控制分享展示弹框是否展示\r\nconst type = 1;\r\n\r\nconst openShareDialog = (id) =>{\r\n    tempShareId.value = id;\r\n    dialogShowVisible.value = true\r\n}\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n        if(currentPage.value === 1){\r\n            currentPage.value++;\r\n        }\r\n        await fetchData(currentPage.value);\r\n        currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n//获取分享信息\r\nconst fetchData = async (currentPage) => {\r\n    try {\r\n        const response = await axios.get('/share/list', {\r\n            params: {\r\n                pageSize: 10,\r\n                currentPage: currentPage,\r\n            }\r\n        });\r\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n            const updates = response.data.data.records.map(async (record) => {\r\n            const extractedImagesPromise = fetchShareCoverage(record.id);\r\n            const authorAvatarPromise = getUsersAvatarFromCOS(record.userId);\r\n            const verified = await fetchUserInformation(record.userId);\r\n            const likeStatus = await determineImage(1, record.id);\r\n            const favoriteStatus = await deterFavorite(record.id);\r\n            const [extractedImages, authorAvatar] = await Promise.all([extractedImagesPromise, authorAvatarPromise]);\r\n            return {\r\n                ...record,\r\n                verified,\r\n                likeStatus,\r\n                extractedImages,\r\n                favoriteStatus,\r\n                authorAvatar,\r\n                showMoreButtonVisible: checkShowMoreButtonVisible(extractedImages),\r\n                needsExpansion: checkContentOverflow(record.content),\r\n                showExpansion: checkContentOverflow(record.content),\r\n                lessContent: record.content.slice(0, limitWord.value),\r\n                labelsArray: record.label.split(',').map(item => item.trim()),\r\n                showComments: false,\r\n            };\r\n        });\r\n        const updatedEntries = await Promise.all(updates);\r\n        entries.value = [...entries.value, ...updatedEntries];\r\n        }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n            // ElMessage.info('已加载所有数据');\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }\r\n    } catch (error) {\r\n        console.error('接口请求失败', error);\r\n    }\r\n};\r\n\r\n//点击打开举报弹窗\r\nasync function handleReportShare(shareId){\r\n    reportedShareId.value = shareId;\r\n    dialogVisible.value = true;\r\n    await fetchShareRead(shareId);\r\n}\r\n\r\n//点击打开分享弹窗\r\nasync function handleUpdateShare(shareId){\r\n    tempShareId2.value = shareId;\r\n    dialogFormVisible.value = true;\r\n    await fetchShareRead(shareId);\r\n}\r\n//接受cfdialog返回的数据，从而确定收藏Id\r\nconst handleUpdateValue = (data) => {\r\n    favoriteId.value = data[0];\r\n}\r\n\r\n//分享收藏相关接口\r\nasync function toggleFavorite(shareId) {\r\n    try {\r\n        const response = await axios.post(`/favorite/share`,{favoriteId: favoriteId.value, contentId: shareId });\r\n        if ( response.data.code === 1) {\r\n            let entryToUpdate = entries.value.find(entry => entry.id === shareId);\r\n            if (entryToUpdate) {\r\n                entryToUpdate.favoriteStatus = 1; \r\n                entryToUpdate.favoriteCount =  response.data.data;\r\n            }\r\n            console.log('分享收藏成功');\r\n            await fetchShareRead(shareId);\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error(response.data.msg || 'Unknown error');\r\n            ElMessage.error('分享收藏失败');\r\n        }\r\n    } catch (error) {\r\n    console.error('分享收藏成功', error.message);\r\n    ElMessage.error('分享收藏成功');\r\n    }\r\n}\r\n\r\n\r\n// 使用 watch 来监听 favoriteId 的变化\r\nwatch(favoriteId, (newVal, oldVal) => {\r\n    if (newVal !== oldVal) {\r\n    toggleFavorite( tempShareId2.value);\r\n    }\r\n});\r\n\r\n//判断收藏状态\r\nasync function deterFavorite(id) {\r\n    try {\r\n        const response = await axios.get(`/favorite/share/${id}`)\r\n        if ( response.data.code === 1) {\r\n            return response.data.data;\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error(response.data.msg || 'Unknown error');\r\n        }\r\n    } catch (error) {\r\n        console.error('获取点赞状态失败', error.message);\r\n        ElMessage.error('获取收藏状态失败');\r\n    }\r\n}\r\n\r\n//判断点赞状态\r\nasync function determineImage(type,id) {\r\n    try {\r\n        const response = await axios.get(`/like/state`,{\r\n            params: {\r\n                id: id,\r\n                type: type,\r\n            }\r\n        });\r\n        if (response.data.code === 1) {\r\n            return (response.data.data);\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error(response.data.msg || 'Unknown error');\r\n            ElMessage.error('获取点赞状态失败');\r\n        }\r\n    } catch (error) {\r\n    console.error('获取点赞状态失败', error.message);\r\n    }\r\n}\r\n  \r\n//点赞相关方法\r\nasync function toggleLike(likeStatus,shareId) {\r\n    try {\r\n        const config = likeStatus === 0\r\n            ? {\r\n                method: 'put',\r\n                url: `/share/like`,\r\n                data: { userId: user_id , shareId: shareId}\r\n            }\r\n            : {\r\n                method: 'delete',\r\n                url: `/share/unlike`,\r\n                data: { userId: user_id , shareId: shareId}\r\n            };\r\n        const response = await axios(config);\r\n        if ( response.data.code === 1) {\r\n            let entryToUpdate = entries.value.find(entry => entry.id === shareId);\r\n            if (entryToUpdate) {\r\n                entryToUpdate.likeStatus = entryToUpdate.likeStatus === 0 ? 1 : 0;\r\n                entryToUpdate.likeCount =  response.data.data;\r\n            }\r\n            await fetchShareRead(shareId);\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error(response.data.msg || 'Unknown error');\r\n            ElMessage.error('点赞操作失败');\r\n        }\r\n    } catch (error) {\r\n        console.error('获取点赞状态失败', error.message);\r\n    }\r\n}\r\n\r\n//说实话，我也不知道这两个函数的真实作用，但是删了会出问题，算了，能跑就行\r\nconst prevEl = () => {\r\n    console.log('1');\r\n};\r\nconst nextEl = () => {\r\n    console.log('1');\r\n};\r\n\r\n//判断该分享的内容是否需要展开收回（写到接口方法里显得太臃肿了所以提出来了）\r\nconst checkContentOverflow = (content) => {\r\n    if (content.length > limitWord.value) {\r\n        return true;\r\n    }\r\n}\r\n\r\n//判断该分享是否需要展示轮播箭头（写到接口方法里显得太臃肿了所以提出来了）\r\nconst checkShowMoreButtonVisible = (extractedImages) => {\r\n    if (extractedImages.length > 4) {\r\n        return true;\r\n    }\r\n}\r\n\r\n// 分享的阅读接口\r\nconst fetchShareRead = async (id) => {\r\n    try {\r\n        const response = await axios.post(`/share/read/${id}`);\r\n        if(response.data.code === 1){\r\n            console.log('HAHAHA');\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取分享的阅读接口失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取分享的阅读接口失败\", error);\r\n        ElMessage.error('获取分享的阅读接口失败');\r\n    }\r\n};\r\n\r\n\r\n// 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\n\r\nonMounted(() => {\r\n    fetchData(currentPage.value) ;\r\n})\r\n\r\n</script>\r\n    \r\n    \r\n<style scoped>\r\n    .large{\r\n        width: 100%;\r\n        background-color: rgb(250 250 250);\r\n    }\r\n    .main{\r\n        width: 1130px; \r\n        margin: 40px auto 0 auto;\r\n        border: 1px solid #e5e7eb;\r\n        background-color: #fff\r\n    \r\n    }\r\n    .show{\r\n        margin-top: 40px;\r\n        display: flex;\r\n        padding: 20px 55px;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n        gap: 8px;\r\n        border-radius: 16px;\r\n        background: #FFF;\r\n        position: relative;\r\n    }\r\n    .user {\r\n        display: flex;\r\n        align-items: center;\r\n    }   \r\n    .userPhoto{\r\n      width: 64px;\r\n      height: 64px;\r\n      border-radius: 100%;\r\n      overflow: hidden;     \r\n    }\r\n    .userPhoto img{\r\n      width: 100%;\r\n      height: 100%;\r\n    }    \r\n    .userInfo {\r\n        display: flex;\r\n        flex-direction: column; \r\n        margin-left: 10px;\r\n    }\r\n    .userDetails, .userActivity {\r\n        margin: 10px 0px 0px 11px;  \r\n        display: flex;\r\n        align-items: center;\r\n        gap: 10px; \r\n    }\r\n    .name{\r\n        color: #000;\r\n        text-align: center;\r\n        font-family: -apple-system,BlinkMacSystemFont,Helvetica Neue,PingFang SC,Microsoft YaHei,Source Han Sans SC,Noto Sans CJK SC,WenQuanYi Micro Hei,sans-serif;\r\n        font-size: 20px;\r\n        font-style: normal;\r\n        font-weight: 700;\r\n        line-height: 120%; \r\n    }\r\n    .time{\r\n        color: #666666;\r\n        text-align: center;\r\n        font-family: -apple-system,BlinkMacSystemFont,Helvetica Neue,PingFang SC,Microsoft YaHei,Source Han Sans SC,Noto Sans CJK SC,WenQuanYi Micro Hei,sans-serif;\r\n        font-size: 14px;\r\n        font-style: normal;\r\n        font-weight: 400;\r\n        line-height: 120%; \r\n    }\r\n    .title{\r\n        width: 670px;\r\n        height: auto;\r\n    }\r\n    .title h1{\r\n        color: #000;\r\n        font-family: -apple-system,BlinkMacSystemFont,Helvetica Neue,PingFang SC,Microsoft YaHei,Source Han Sans SC,Noto Sans CJK SC,WenQuanYi Micro Hei,sans-serif;\r\n        font-size: 40px;\r\n        font-style: normal;\r\n        font-weight: 700;\r\n        line-height: 100%; \r\n    }\r\n    .content-wrapper {\r\n        position: relative;\r\n        width: 670px;\r\n        min-height: 75px;\r\n        margin-bottom: 20px;\r\n    }\r\n    .content{\r\n        color: #000;\r\n        font-family: -apple-system,BlinkMacSystemFont,Helvetica Neue,PingFang SC,Microsoft YaHei,Source Han Sans SC,Noto Sans CJK SC,WenQuanYi Micro Hei,sans-serif;\r\n        font-size: 16px;\r\n        line-height: 1.6; \r\n        overflow: hidden;\r\n        display: -webkit-box;\r\n        -webkit-box-orient: vertical;\r\n        position: relative;\r\n    }\r\n    .content.limited {\r\n        -webkit-line-clamp: 5;\r\n    }\r\n    .expand-btn {\r\n        position: absolute;\r\n        bottom: 0px;\r\n        right: 0;\r\n        background-color: rgba(255, 255, 255, 0.7); \r\n        border: none;\r\n        cursor: pointer;\r\n        color: #2A7FE4;\r\n        font-family: -apple-system,BlinkMacSystemFont,Helvetica Neue,PingFang SC,Microsoft YaHei,Source Han Sans SC,Noto Sans CJK SC,WenQuanYi Micro Hei,sans-serif;\r\n        font-size: 14px;\r\n        font-style: normal;\r\n        font-weight: 400;\r\n        line-height: 120%; \r\n    }   \r\n    .buttons-container {\r\n      display: flex;       \r\n      gap: 15px;     \r\n    }\r\n    .tag-btn{\r\n        display: flex;\r\n        padding: 4px 10px;\r\n        justify-content: center;\r\n        align-items: center;\r\n        letter-spacing: 1px;\r\n        gap: 10px;\r\n        border-radius: 16px;\r\n        border: 1px solid #A6A6A6;\r\n        background: #fff;\r\n        color: #5467a5;\r\n        backdrop-filter: blur(10px);\r\n    }\r\n    .icons-container {\r\n        display: flex;\r\n        gap: 25px;\r\n        width: 710px;\r\n        margin: 20px 0px 40px;\r\n        position: relative;\r\n    }\r\n    .icons-container:hover .report{\r\n        visibility: visible;\r\n    }\r\n    .icon-wrapper {\r\n        display: flex;\r\n        gap: 3px;\r\n        text-align: center;\r\n        margin: 0 10px;      \r\n    }\r\n\r\n    .like-pic {\r\n        display: block;    \r\n        margin: auto;      \r\n        height: 20px;\r\n        width: 20px;\r\n        cursor: pointer;\r\n    }\r\n    .like_num {\r\n        text-align: center;\r\n        display: contents;\r\n        font-size: 14px;\r\n        color: #2d2d2d;\r\n    }\r\n    .report{\r\n        visibility: hidden;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 5px;\r\n        cursor: pointer;\r\n        position: absolute;\r\n        right: 0px;\r\n    }\r\n    .report span{\r\n        color: #9B9B9B;\r\n        font-size: 14px;\r\n    }\r\n    .case_1{\r\n        position: absolute;\r\n        width: 288px;\r\n        height: 310px;\r\n        top: 90px;\r\n        right: 55px;\r\n    }\r\n    .case_2,\r\n    .case_3{\r\n        height: 330px;\r\n        width: 1570px;\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: center;\r\n        left: -275px;\r\n        margin: 40px 0px 20px;\r\n    }\r\n    ::v-deep .el-carousel__container{\r\n        height: 310px;\r\n    }\r\n    .picture_contain{\r\n        display: flex;\r\n        gap: 32px;\r\n    }\r\n    ::v-deep .swiper{\r\n        padding: 10px;\r\n    }\r\n     ::v-deep .swiper .swiper-wrapper > *{\r\n        width: 288px!important;\r\n        margin-right: 32px!important;\r\n    }\r\n    .carousel-image_1,\r\n    .carousel-image_2,\r\n    .carousel-image_3 {\r\n        width: 288px;\r\n        height: 310px;\r\n        margin: 0 auto;\r\n        display: block;\r\n        border-radius: 15px;\r\n    }\r\n    ::v-deep .swiper-slide:nth-child(5n+1),\r\n    .everyPic:nth-child(5n+1) {\r\n        transform: rotate(2deg);\r\n    }\r\n    ::v-deep .swiper-slide:nth-child(5n+2),\r\n    .everyPic:nth-child(5n+2) {\r\n        transform: rotate(-2deg); \r\n    }\r\n    ::v-deep .swiper-slide:nth-child(5n+3),\r\n    .everyPic:nth-child(5n+3) {\r\n        transform: rotate(2deg); \r\n    }\r\n    ::v-deep .swiper-slide:nth-child(5n+4),\r\n    .everyPic:nth-child(5n+4) {\r\n        transform: rotate(-2deg); \r\n    }\r\n\r\n    ::v-deep .swiper-slide:nth-child(5n),\r\n    .everyPic:nth-child(5n) {\r\n        transform: rotate(2deg); \r\n    }\r\n    .swiper-button-prev,\r\n    .swiper-button-next,\r\n    .swiper-button-close {\r\n        position: absolute;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        cursor: pointer;\r\n        font-size: 24px;\r\n        z-index: 2;\r\n        color: rgb(63, 56, 56);\r\n    }\r\n    .swiper-button-prev {\r\n        left: 160px;\r\n    }\r\n    .swiper-button-next {\r\n        right: 160px;\r\n    }\r\n    .swiper-button-close {\r\n        top: 10px;\r\n        right: 160px;\r\n    }\r\n    </style>\r\n\r\n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}