{"ast":null,"code":"import { reactive, onMounted, computed, watch } from 'vue';\nimport axios from '@/utils/request';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport qs from 'qs';\nimport { getArticleCoverageFromCOS } from '@/utils/cosService';\nimport { ElMessage } from 'element-plus';\nimport { openUrl } from '@/utils/routeJudge';\nexport default {\n  __name: 'TheAriticle',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const store = useStore();\n    // 放置请求过来的数据\n    let content = reactive([]);\n    // 页面滚动时再次请求数据\n    const n = reactive({\n      value: 3\n    });\n    const api = axios.create({\n      paramsSerializer: params => {\n        // 使用 'qs' 库和 'repeat' 选项将参数序列化，该选项确保数组元素没有索引\n        return qs.stringify(params, {\n          arrayFormat: 'repeat'\n        });\n      }\n    });\n    const fetchPurchaseState = (point, coin) => {\n      if (point != 0) return 1;else if (coin != 0) return 2;else return 0;\n    };\n\n    /**\r\n     * 这是网站的核心方法之一，之前代码存在的问题是没有正确处理传入参数为空时的情况\r\n     * 导致路径中出现类似“title=&subBoard=xx”这种情况，实际上title值为空，不应该传给后端的\r\n     */\n    const getArticleList = async (num, tempSubBoardName, title, labels) => {\n      try {\n        console.log(num, tempSubBoardName, title, labels);\n        let params = {\n          currentPage: num,\n          pageSize: 6\n        };\n        if (tempSubBoardName) params.subBoard = tempSubBoardName;\n        if (title) params.title = title;\n        if (labels && Array.isArray(labels)) {\n          params.labels = labels;\n        }\n        // 获取Token\n        const token = localStorage.getItem('token');\n        // 创建请求头对象\n        const headers = {};\n        if (token) {\n          headers.Authorization = `${token}`;\n        }\n        // 在请求中添加请求头\n        const response = await api.get('/article/list', {\n          params: params,\n          headers: headers // 添加Token到请求头\n        });\n        if (response.data.code === 1) {\n          const recordsToProcess = response.data.data.records.slice(0, 6);\n          const coveragePromises = recordsToProcess.map(async record => {\n            const coverage = await getArticleCoverageFromCOS(record.id);\n            const verified = await fetchUserInformation(record.userId);\n            const purchaseState = fetchPurchaseState(record.requiredPoint, record.requiredCoin);\n            return {\n              id: record.id,\n              coverage,\n              verified,\n              title: record.title,\n              summary: record.summary,\n              date: record.createTime,\n              subBoardName: record.username,\n              likeCount: record.likeCount,\n              favoriteCount: record.favoriteCount,\n              requiredCoin: record.requiredCoin,\n              labels: record.label.split(','),\n              purchaseState\n            };\n          });\n          const results = await Promise.all(coveragePromises);\n          results.forEach(result => content.push(result));\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取文章数据失败');\n        }\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('获取文章数据失败');\n      }\n    };\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        await getArticleList(n.value, store.state.subBoardName, store.state.customValue, store.state.selectLabel);\n        n.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n\n    /**\r\n     * 下面的这三个方法在功能上是相似的，都是通过computed监视Vuex store里指定参数的变化情况\r\n     * 然后调用watch函数，在watch函数中再讲变化值传给获取文章分页的getArticleList函数\r\n     * 因为在getArticleList函数中处理好了参数为空的情况，所以这里可以大胆从store直接取值，不需要再加判断\r\n     * 对于Vuex的原理我不是很懂，但相比这样反复更改页面的全局变量或许会有更好的解决方法？\r\n     */\n    // 点击二级板块后获取文章数据\n    const subBoardNameNow2 = computed(() => {\n      return store.state.subBoardName;\n    });\n    watch(subBoardNameNow2, async newValue => {\n      if (newValue !== '') {\n        content.splice(0); // 清空 content 数组\n        n.value = 3;\n        // 确保按照顺序加载文章列表\n        for (let i = 1; i <= 3; i++) {\n          await getArticleList(i, newValue, store.state.customValue, store.state.selectLabel);\n        }\n      }\n    });\n    //用户点击（或回车）搜索框后调用该方法\n    const selectState = computed(() => {\n      return store.state.selectState;\n    });\n    watch(selectState, async newValue => {\n      if (newValue !== 0) {\n        content.splice(0);\n        n.value = 3;\n        for (let i = 1; i <= 3; i++) {\n          await getArticleList(i, store.state.subBoardName, store.state.customValue, store.state.selectLabel);\n        }\n      }\n      store.commit('SELECTSTATE', 0);\n    });\n\n    // // 选中标签获取文章数据\n    // const selectLabelJoined = computed(() => {\n    //     return store.state.selectLabel;\n    // });\n    // watch(selectLabelJoined, async (newValue) => {\n    //     if (newValue.length > 0) { // 检查数组是否有元素\n    //         content.splice(0);\n    //         n.value = 4;\n    //         const newLabels = []; // 使用普通数组，不是 ref\n    //         newValue.forEach(label => {\n    //             newLabels.push(label);\n    //         });\n    //         for (let i = 1; i <= 3; i++) {\n    //             await getArticleList(i, store.state.subBoardName, store.state.customValue, newLabels);\n    //         }\n    //     }\n    // }),{ deep: true };\n\n    //点击获取跳转文章详情\n    function toArticle(articleId) {\n      // const routeLocation = router.resolve({ path: `/TheArticle/${articleId}` });\n      // window.open(routeLocation.href, '_blank');\n      openUrl(`/TheArticle/${articleId}`);\n    }\n\n    //时间数据格式化\n    function formatDate(dateStr) {\n      const date = new Date(dateStr);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    }\n\n    // 获取用户信息\n    const fetchUserInformation = async userId => {\n      try {\n        const response = await axios.get(`/users/${userId}`);\n        if (response.data.code === 1) {\n          return response.data.data.verified;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取用户信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户信息失败\", error);\n        ElMessage.error('获取用户信息失败');\n      }\n    };\n    onMounted(async () => {\n      for (let i = 1; i <= 2; i++) {\n        await getArticleList(i);\n      }\n    });\n    const __returned__ = {\n      router,\n      store,\n      get content() {\n        return content;\n      },\n      set content(v) {\n        content = v;\n      },\n      n,\n      api,\n      fetchPurchaseState,\n      getArticleList,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      subBoardNameNow2,\n      selectState,\n      toArticle,\n      formatDate,\n      fetchUserInformation,\n      reactive,\n      onMounted,\n      computed,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get qs() {\n        return qs;\n      },\n      get getArticleCoverageFromCOS() {\n        return getArticleCoverageFromCOS;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get openUrl() {\n        return openUrl;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","onMounted","computed","watch","axios","useStore","useRouter","qs","getArticleCoverageFromCOS","ElMessage","openUrl","router","store","content","n","value","api","create","paramsSerializer","params","stringify","arrayFormat","fetchPurchaseState","point","coin","getArticleList","num","tempSubBoardName","title","labels","console","log","currentPage","pageSize","subBoard","Array","isArray","token","localStorage","getItem","headers","Authorization","response","get","data","code","recordsToProcess","records","slice","coveragePromises","map","record","coverage","id","verified","fetchUserInformation","userId","purchaseState","requiredPoint","requiredCoin","summary","date","createTime","subBoardName","username","likeCount","favoriteCount","label","split","results","Promise","all","forEach","result","push","msg","error","toString","isLoading","load","state","customValue","selectLabel","subBoardNameNow2","newValue","splice","i","selectState","commit","toArticle","articleId","formatDate","dateStr","Date","getFullYear","String","getMonth","padStart","getDate"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/TheMain/components/TheAriticle.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"content.length > 0\" class=\"large\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"150\" infinite-scroll-immediate=\"false\">\r\n        <!-- 遍历渲染盒子内容-->\r\n        <div class=\"small\" v-for=\"(source,index) in content\" :key=\"index\" @click=\"toArticle(source.id)\">\r\n            <img v-if=\"source.purchaseState === 1\" class=\"top-icon\" src=\"@/assets/TheMain/baitTop.svg\" alt=\"\">\r\n            <!-- <img class=\"top-icon\" src=\"@/assets/TheMain/baitTop.svg\" alt=\"\"> -->\r\n            <img v-if=\"source.purchaseState === 2\" class=\"top-icon\" src=\"@/assets/TheMain/coinTop.svg\" alt=\"\">\r\n            <!-- <img  class=\"top-icon\" src=\"@/assets/TheMain/coinTop.svg\" alt=\"\"> -->\r\n            <div class=\"one\">\r\n                <img src=\"@/assets/TheMain/LeftTop.svg\" style=\"position: absolute;left: 0px;top: 0px;opacity: 0.5;\" alt=\"\">\r\n                <img class=\"largePicture\" :src=\"source.coverage\" alt=\"\">\r\n                <img src=\"@/assets/TheMain/RightBottom.svg\" style=\"position: absolute;right: 0px;bottom: 0px;opacity: 0.5;\" alt=\"\">\r\n            </div>\r\n            <div class=\"two\">\r\n                <h3 style=\"margin-bottom: 0.5rem;\">{{ source.title }}</h3>\r\n                <p>{{ source.summary }}</p>               \r\n            </div>\r\n            <div class=\"three\">\r\n                <div class=\"three_header\">\r\n                    <!-- 用户名 -->\r\n                    <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                        <span class=\"subBoardNameClass\">{{ source.subBoardName }}</span>\r\n                        <img v-if=\"source.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n                    </div>\r\n                    <div style=\"display: flex;align-items: center;justify-content: space-between;gap: 15px;\">\r\n                        <div class=\"frame1\">\r\n                            <img src=\"@/assets/LikeBefore.svg\" alt=\"\" >\r\n                            <span class=\"count\">{{ source.likeCount }}</span>\r\n                        </div>\r\n                        <div class=\"frame2\">\r\n                            <img src=\"@/assets/FavoriteBefore.svg\" alt=\"\" >\r\n                            <span class=\"count\">{{ source.favoriteCount }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"three_middle\" v-for=\"(label,index) in source.labels\" :key=\"index\">\r\n                    <span v-if=\"index <2\">\r\n                        {{ '#' }}\r\n                        {{ label }}\r\n                    </span>\r\n                    <span v-if=\"index === 3\">\r\n                        {{ '...' }}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"three_bottom\">\r\n                <span class=\"data\">{{ formatDate(source.date) }}</span>\r\n            </div>\r\n            <img v-if=\"source.purchaseState === 1\" class=\"pay-icon\" src=\"@/assets/TheMain/baitPay.svg\" alt=\"\">\r\n            <img v-if=\"source.purchaseState === 2\" class=\"pay-icon\" src=\"@/assets/TheMain/coinPay.svg\" alt=\"\">\r\n        </div>\r\n    </div>\r\n    <el-empty \r\n        v-else\r\n        :image-size=\"200\" \r\n        description=\"该板块暂时还没有数据哦，期待您的作品以解锁此地！\"\r\n        style=\"margin-top: 18vh;\"\r\n    />\r\n</template>\r\n\r\n<script setup>\r\nimport {reactive,onMounted,computed,watch} from 'vue';\r\nimport axios from '@/utils/request'\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport qs from 'qs';\r\nimport { getArticleCoverageFromCOS } from '@/utils/cosService';\r\nimport { ElMessage } from 'element-plus';\r\nimport { openUrl } from '@/utils/routeJudge'\r\n\r\nconst router = useRouter()\r\nconst store = useStore()\r\n// 放置请求过来的数据\r\nlet content = reactive([])\r\n// 页面滚动时再次请求数据\r\nconst n = reactive({ value: 3 });\r\n\r\nconst api = axios.create({\r\n    paramsSerializer: params => {\r\n        // 使用 'qs' 库和 'repeat' 选项将参数序列化，该选项确保数组元素没有索引\r\n        return qs.stringify(params, { arrayFormat: 'repeat' })\r\n    }\r\n});\r\n\r\nconst fetchPurchaseState = (point,coin) =>{\r\n    if(point != 0) return 1;\r\n    else if(coin != 0) return 2;\r\n    else return 0;\r\n}\r\n\r\n/**\r\n * 这是网站的核心方法之一，之前代码存在的问题是没有正确处理传入参数为空时的情况\r\n * 导致路径中出现类似“title=&subBoard=xx”这种情况，实际上title值为空，不应该传给后端的\r\n */\r\nconst getArticleList = async (num, tempSubBoardName, title, labels) => {\r\n    try {\r\n        console.log(num, tempSubBoardName, title, labels);\r\n        let params = {\r\n            currentPage: num,\r\n            pageSize: 6,\r\n        };\r\n        if (tempSubBoardName) params.subBoard = tempSubBoardName;\r\n        if (title) params.title = title;\r\n        if (labels && Array.isArray(labels)) {\r\n            params.labels = labels;\r\n        }\r\n        // 获取Token\r\n        const token = localStorage.getItem('token');\r\n        // 创建请求头对象\r\n        const headers = {};\r\n        if (token) {\r\n            headers.Authorization = `${token}`;\r\n        }\r\n        // 在请求中添加请求头\r\n        const response = await api.get('/article/list', { \r\n            params: params,\r\n            headers: headers // 添加Token到请求头\r\n        });\r\n        if(response.data.code === 1){\r\n            const recordsToProcess = response.data.data.records.slice(0, 6);\r\n            const coveragePromises = recordsToProcess.map(async record => {\r\n                const coverage = await getArticleCoverageFromCOS(record.id);\r\n                const verified = await fetchUserInformation(record.userId);\r\n                const purchaseState = fetchPurchaseState(record.requiredPoint,record.requiredCoin);\r\n                return {\r\n                    id: record.id,\r\n                    coverage,\r\n                    verified,\r\n                    title: record.title,\r\n                    summary: record.summary,\r\n                    date: record.createTime,\r\n                    subBoardName: record.username,\r\n                    likeCount: record.likeCount,\r\n                    favoriteCount: record.favoriteCount,\r\n                    requiredCoin: record.requiredCoin,\r\n                    labels: record.label.split(','),\r\n                    purchaseState,\r\n                };\r\n            });\r\n            const results = await Promise.all(coveragePromises);\r\n            results.forEach(result => content.push(result));\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取文章数据失败');\r\n        }\r\n    }catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('获取文章数据失败');\r\n    }\r\n}\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n        await getArticleList(n.value, store.state.subBoardName, store.state.customValue, store.state.selectLabel);\r\n        n.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n/**\r\n * 下面的这三个方法在功能上是相似的，都是通过computed监视Vuex store里指定参数的变化情况\r\n * 然后调用watch函数，在watch函数中再讲变化值传给获取文章分页的getArticleList函数\r\n * 因为在getArticleList函数中处理好了参数为空的情况，所以这里可以大胆从store直接取值，不需要再加判断\r\n * 对于Vuex的原理我不是很懂，但相比这样反复更改页面的全局变量或许会有更好的解决方法？\r\n */\r\n// 点击二级板块后获取文章数据\r\nconst subBoardNameNow2 = computed(()=>{ return store.state.subBoardName })\r\nwatch(subBoardNameNow2, async (newValue) => {\r\n    if(newValue !== '') {\r\n        content.splice(0);  // 清空 content 数组\r\n        n.value = 3;\r\n        // 确保按照顺序加载文章列表\r\n        for (let i = 1; i <= 3; i++) {\r\n            await getArticleList(i, newValue, store.state.customValue, store.state.selectLabel);\r\n        }\r\n    }\r\n});\r\n//用户点击（或回车）搜索框后调用该方法\r\nconst selectState = computed(()=>{ return store.state.selectState })\r\nwatch(selectState,async (newValue)=>{\r\n    if(newValue!==0){\r\n        content.splice(0)\r\n        n.value = 3;\r\n        for (let i = 1; i <= 3; i++) {\r\n            await getArticleList(i, store.state.subBoardName,store.state.customValue,store.state.selectLabel);\r\n        }\r\n    }\r\n    store.commit('SELECTSTATE',0);\r\n})\r\n\r\n// // 选中标签获取文章数据\r\n// const selectLabelJoined = computed(() => {\r\n//     return store.state.selectLabel;\r\n// });\r\n// watch(selectLabelJoined, async (newValue) => {\r\n//     if (newValue.length > 0) { // 检查数组是否有元素\r\n//         content.splice(0);\r\n//         n.value = 4;\r\n//         const newLabels = []; // 使用普通数组，不是 ref\r\n//         newValue.forEach(label => {\r\n//             newLabels.push(label);\r\n//         });\r\n//         for (let i = 1; i <= 3; i++) {\r\n//             await getArticleList(i, store.state.subBoardName, store.state.customValue, newLabels);\r\n//         }\r\n//     }\r\n// }),{ deep: true };\r\n\r\n//点击获取跳转文章详情\r\nfunction toArticle(articleId){\r\n    // const routeLocation = router.resolve({ path: `/TheArticle/${articleId}` });\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl(`/TheArticle/${articleId}`)\r\n}\r\n\r\n//时间数据格式化\r\nfunction formatDate(dateStr) {\r\n    const date = new Date(dateStr);\r\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\r\n}\r\n\r\n// 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\nonMounted(async () => {\r\n    for (let i = 1; i <= 2; i++) {\r\n        await getArticleList(i);\r\n    }\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.large{\r\n    width: auto;\r\n    height: 100%;\r\n    margin-top: 60px;\r\n    display: flex;\r\n    padding: 0px 20px;\r\n    margin: 50px auto;\r\n    justify-content: flex-start;\r\n    flex-wrap: wrap;\r\n    gap: 100px 67px;\r\n    min-height: 100vh;\r\n}\r\n.small{\r\n    width: 330px;\r\n    height: 510px;\r\n    margin: 0px auto;\r\n    border-radius: 8px;\r\n    background-color: #fff;\r\n    border: 1px solid #f5f5f5;\r\n    box-shadow: 15px 15px 20px 0px rgba(0, 0, 0, 0.16);\r\n    transition: transform 0.2s ease-out;\r\n    cursor: pointer;\r\n    position: relative;\r\n}\r\n.small:hover {\r\n    transform: translateY(-5px) translateX(5px);\r\n}\r\n.top-icon{\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n    z-index: 999;\r\n}\r\n.one{\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 180px;\r\n    border-radius: 8px;\r\n    background-image: url('@/assets/TheMain/ArticleBackground.png');\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    margin: 0;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.largePicture{\r\n    width: 250px;\r\n    height: 155px;\r\n}\r\n.smallPicture{\r\n    width: 20px;\r\n    height: 20px;\r\n    margin: 20px 4px 8px 10px;\r\n}\r\n.two{\r\n    display: block;\r\n    height: 200px;\r\n    width: 265px;\r\n    margin: 1rem auto 0.5rem;\r\n}\r\nh3{\r\n    color: #000;\r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 120%; \r\n}\r\np{\r\n    color: #000;\r\n    font-family: -apple-system,BlinkMacSystemFont,Helvetica Neue,PingFang SC,Microsoft YaHei,Source Han Sans SC,Noto Sans CJK SC,WenQuanYi Micro Hei,sans-serifssss;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 1.6;\r\n}\r\n.three{\r\n    display: block;\r\n    height: 55px;\r\n    width: 275px;\r\n    margin: auto;\r\n}\r\n.three_header{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n}\r\n.subBoardNameClass{\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 120%;\r\n    left: 5px;\r\n}\r\n.frame1, .frame2{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 3px;\r\n}\r\n.frame1 img{\r\n    width: 16px;\r\n    height: 16px;\r\n    cursor: pointer;\r\n}\r\n.frame2 img{\r\n    width: 18px;\r\n    height: 18px;\r\n    cursor: pointer;\r\n}\r\n.count{\r\n    color: #2d2d2d;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 12px;\r\n    display: inline-block;\r\n   \r\n}\r\n\r\n.three_middle{\r\n    height: 23px;\r\n    margin: auto;\r\n    overflow-wrap: break-word;\r\n    overflow: hidden;\r\n    display: inline-block;\r\n    flex-wrap: nowrap; \r\n}\r\n.three_middle span {\r\n    display: inline-block;\r\n   /* 设置外部方块样式 */\r\n    height: 23px;\r\n    margin: auto 3px;\r\n    padding: 0px 10px ;\r\n    /* 设置内部文字样式 */\r\n    color:#242424;\r\n    border-radius: 15px;\r\n    font-size: 12px;\r\n    font-family: Microsoft YaHei;\r\n    line-height: 23px;\r\n    background: rgba(230, 227, 227, 0.63);\r\n    backdrop-filter: blur(5px);\r\n    /* 设置鼠标悬停样式 */\r\n    cursor: pointer;\r\n    user-select: none;\r\n}\r\n.three_bottom{\r\n    width: 78px;\r\n    height: 17px;\r\n    margin: 6px auto 0px;\r\n}\r\n.data{\r\n    color: #666666;\r\n    font-size: 13px;\r\n}\r\n.pay-icon{\r\n    position: absolute;\r\n    right: 3px;\r\n    bottom: 3px;\r\n    width: 20px;\r\n}\r\n/* 对手机屏幕和小尺寸屏幕的样式调整 */\r\n@media (max-width: 768px) {\r\n    .large {\r\n        margin-top: 30px;\r\n        padding: 0 10px; /* 减少边距 */\r\n        gap: 50px 20px; /* 调整元素间距 */\r\n    }\r\n\r\n    .small {\r\n        margin: 0px auto 20px;\r\n        height: auto;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n\r\n    .largePicture {\r\n        width: 76%;\r\n        height: 88%;\r\n    }\r\n\r\n    .two, .three {\r\n        width: 90%;\r\n        height: auto;\r\n        margin: 20px auto 10px;\r\n    }\r\n    .three_header{\r\n        margin-bottom: 15px;\r\n    }\r\n    .three_bottom{\r\n        margin: 10px auto 15px;\r\n    }\r\n    h3, p, .subBoardNameClass, .count, .three_middle span, .data {\r\n        font-size: smaller; /* 调整字体大小 */\r\n    }\r\n\r\n    /* 可以继续添加其他必要的样式调整 */\r\n}\r\n</style>"],"mappings":"AA6DA,SAAQA,QAAQ,EAACC,SAAS,EAACC,QAAQ,EAACC,KAAK,QAAO,KAAK;AACrD,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,EAAE,MAAM,IAAI;AACnB,SAASC,yBAAyB,QAAQ,oBAAoB;AAC9D,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,OAAO,QAAQ,oBAAoB;;;;;;;IAE5C,MAAMC,MAAM,GAAGL,SAAS,CAAC,CAAC;IAC1B,MAAMM,KAAK,GAAGP,QAAQ,CAAC,CAAC;IACxB;IACA,IAAIQ,OAAO,GAAGb,QAAQ,CAAC,EAAE,CAAC;IAC1B;IACA,MAAMc,CAAC,GAAGd,QAAQ,CAAC;MAAEe,KAAK,EAAE;IAAE,CAAC,CAAC;IAEhC,MAAMC,GAAG,GAAGZ,KAAK,CAACa,MAAM,CAAC;MACrBC,gBAAgB,EAAEC,MAAM,IAAI;QACxB;QACA,OAAOZ,EAAE,CAACa,SAAS,CAACD,MAAM,EAAE;UAAEE,WAAW,EAAE;QAAS,CAAC,CAAC;MAC1D;IACJ,CAAC,CAAC;IAEF,MAAMC,kBAAkB,GAAGA,CAACC,KAAK,EAACC,IAAI,KAAI;MACtC,IAAGD,KAAK,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,KACnB,IAAGC,IAAI,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,KACvB,OAAO,CAAC;IACjB,CAAC;;IAED;AACA;AACA;AACA;IACA,MAAMC,cAAc,GAAG,MAAAA,CAAOC,GAAG,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,MAAM,KAAK;MACnE,IAAI;QACAC,OAAO,CAACC,GAAG,CAACL,GAAG,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,MAAM,CAAC;QACjD,IAAIV,MAAM,GAAG;UACTa,WAAW,EAAEN,GAAG;UAChBO,QAAQ,EAAE;QACd,CAAC;QACD,IAAIN,gBAAgB,EAAER,MAAM,CAACe,QAAQ,GAAGP,gBAAgB;QACxD,IAAIC,KAAK,EAAET,MAAM,CAACS,KAAK,GAAGA,KAAK;QAC/B,IAAIC,MAAM,IAAIM,KAAK,CAACC,OAAO,CAACP,MAAM,CAAC,EAAE;UACjCV,MAAM,CAACU,MAAM,GAAGA,MAAM;QAC1B;QACA;QACA,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C;QACA,MAAMC,OAAO,GAAG,CAAC,CAAC;QAClB,IAAIH,KAAK,EAAE;UACPG,OAAO,CAACC,aAAa,GAAI,GAAEJ,KAAM,EAAC;QACtC;QACA;QACA,MAAMK,QAAQ,GAAG,MAAM1B,GAAG,CAAC2B,GAAG,CAAC,eAAe,EAAE;UAC5CxB,MAAM,EAAEA,MAAM;UACdqB,OAAO,EAAEA,OAAO,CAAC;QACrB,CAAC,CAAC;QACF,IAAGE,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,EAAC;UACxB,MAAMC,gBAAgB,GAAGJ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAC/D,MAAMC,gBAAgB,GAAGH,gBAAgB,CAACI,GAAG,CAAC,MAAMC,MAAM,IAAI;YAC1D,MAAMC,QAAQ,GAAG,MAAM5C,yBAAyB,CAAC2C,MAAM,CAACE,EAAE,CAAC;YAC3D,MAAMC,QAAQ,GAAG,MAAMC,oBAAoB,CAACJ,MAAM,CAACK,MAAM,CAAC;YAC1D,MAAMC,aAAa,GAAGnC,kBAAkB,CAAC6B,MAAM,CAACO,aAAa,EAACP,MAAM,CAACQ,YAAY,CAAC;YAClF,OAAO;cACHN,EAAE,EAAEF,MAAM,CAACE,EAAE;cACbD,QAAQ;cACRE,QAAQ;cACR1B,KAAK,EAAEuB,MAAM,CAACvB,KAAK;cACnBgC,OAAO,EAAET,MAAM,CAACS,OAAO;cACvBC,IAAI,EAAEV,MAAM,CAACW,UAAU;cACvBC,YAAY,EAAEZ,MAAM,CAACa,QAAQ;cAC7BC,SAAS,EAAEd,MAAM,CAACc,SAAS;cAC3BC,aAAa,EAAEf,MAAM,CAACe,aAAa;cACnCP,YAAY,EAAER,MAAM,CAACQ,YAAY;cACjC9B,MAAM,EAAEsB,MAAM,CAACgB,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;cAC/BX;YACJ,CAAC;UACL,CAAC,CAAC;UACF,MAAMY,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACtB,gBAAgB,CAAC;UACnDoB,OAAO,CAACG,OAAO,CAACC,MAAM,IAAI5D,OAAO,CAAC6D,IAAI,CAACD,MAAM,CAAC,CAAC;QACnD,CAAC,MAAK,IAAG/B,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIH,QAAQ,CAACE,IAAI,CAAC+B,GAAG,EAAC;UACnDlE,SAAS,CAACmE,KAAK,CAAClC,QAAQ,CAACE,IAAI,CAAC+B,GAAG,CAACE,QAAQ,CAAC,CAAC,CAAC;QACjD,CAAC,MAAI;UACDpE,SAAS,CAACmE,KAAK,CAAC,UAAU,CAAC;QAC/B;MACJ,CAAC,QAAOA,KAAK,EAAE;QACX9C,OAAO,CAAC8C,KAAK,CAACA,KAAK,CAAC;QACpBnE,SAAS,CAACmE,KAAK,CAAC,UAAU,CAAC;MAC/B;IACJ,CAAC;;IAED;IACA,IAAIE,SAAS,GAAG,KAAK;IACrB,eAAeC,IAAIA,CAAA,EAAG;MAClB,IAAID,SAAS,EAAE,OAAO,CAAC;MACvBA,SAAS,GAAG,IAAI,CAAC,CAAC;MAClB,IAAI;QACA,MAAMrD,cAAc,CAACX,CAAC,CAACC,KAAK,EAAEH,KAAK,CAACoE,KAAK,CAACjB,YAAY,EAAEnD,KAAK,CAACoE,KAAK,CAACC,WAAW,EAAErE,KAAK,CAACoE,KAAK,CAACE,WAAW,CAAC;QACzGpE,CAAC,CAACC,KAAK,EAAE,CAAC,CAAC;MACf,CAAC,CAAC,OAAO6D,KAAK,EAAE;QACZ9C,OAAO,CAAC8C,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,SAAS;QACNE,SAAS,GAAG,KAAK,CAAC,CAAC;MACvB;IACJ;;IAEA;AACA;AACA;AACA;AACA;AACA;IACA;IACA,MAAMK,gBAAgB,GAAGjF,QAAQ,CAAC,MAAI;MAAE,OAAOU,KAAK,CAACoE,KAAK,CAACjB,YAAY;IAAC,CAAC,CAAC;IAC1E5D,KAAK,CAACgF,gBAAgB,EAAE,MAAOC,QAAQ,IAAK;MACxC,IAAGA,QAAQ,KAAK,EAAE,EAAE;QAChBvE,OAAO,CAACwE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAE;QACpBvE,CAAC,CAACC,KAAK,GAAG,CAAC;QACX;QACA,KAAK,IAAIuE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UACzB,MAAM7D,cAAc,CAAC6D,CAAC,EAAEF,QAAQ,EAAExE,KAAK,CAACoE,KAAK,CAACC,WAAW,EAAErE,KAAK,CAACoE,KAAK,CAACE,WAAW,CAAC;QACvF;MACJ;IACJ,CAAC,CAAC;IACF;IACA,MAAMK,WAAW,GAAGrF,QAAQ,CAAC,MAAI;MAAE,OAAOU,KAAK,CAACoE,KAAK,CAACO,WAAW;IAAC,CAAC,CAAC;IACpEpF,KAAK,CAACoF,WAAW,EAAC,MAAOH,QAAQ,IAAG;MAChC,IAAGA,QAAQ,KAAG,CAAC,EAAC;QACZvE,OAAO,CAACwE,MAAM,CAAC,CAAC,CAAC;QACjBvE,CAAC,CAACC,KAAK,GAAG,CAAC;QACX,KAAK,IAAIuE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UACzB,MAAM7D,cAAc,CAAC6D,CAAC,EAAE1E,KAAK,CAACoE,KAAK,CAACjB,YAAY,EAACnD,KAAK,CAACoE,KAAK,CAACC,WAAW,EAACrE,KAAK,CAACoE,KAAK,CAACE,WAAW,CAAC;QACrG;MACJ;MACAtE,KAAK,CAAC4E,MAAM,CAAC,aAAa,EAAC,CAAC,CAAC;IACjC,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,SAASC,SAASA,CAACC,SAAS,EAAC;MACzB;MACA;MACAhF,OAAO,CAAE,eAAcgF,SAAU,EAAC,CAAC;IACvC;;IAEA;IACA,SAASC,UAAUA,CAACC,OAAO,EAAE;MACzB,MAAM/B,IAAI,GAAG,IAAIgC,IAAI,CAACD,OAAO,CAAC;MAC9B,OAAQ,GAAE/B,IAAI,CAACiC,WAAW,CAAC,CAAE,IAAGC,MAAM,CAAClC,IAAI,CAACmC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGF,MAAM,CAAClC,IAAI,CAACqC,OAAO,CAAC,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;IAC7H;;IAEA;IACA,MAAM1C,oBAAoB,GAAG,MAAOC,MAAM,IAAK;MAC3C,IAAI;QACA,MAAMd,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAE,UAASa,MAAO,EAAC,CAAC;QACpD,IAAGd,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,EAAC;UACxB,OAAQH,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACU,QAAQ;QACvC,CAAC,MAAK,IAAGZ,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIH,QAAQ,CAACE,IAAI,CAAC+B,GAAG,EAAC;UACnDlE,SAAS,CAACmE,KAAK,CAAClC,QAAQ,CAACE,IAAI,CAAC+B,GAAG,CAACE,QAAQ,CAAC,CAAC,CAAC;QACjD,CAAC,MAAI;UACDpE,SAAS,CAACmE,KAAK,CAAC,UAAU,CAAC;QAC/B;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZ9C,OAAO,CAAC8C,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;QAChCnE,SAAS,CAACmE,KAAK,CAAC,UAAU,CAAC;MAC/B;IACJ,CAAC;IAED3E,SAAS,CAAC,YAAY;MAClB,KAAK,IAAIqF,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QACzB,MAAM7D,cAAc,CAAC6D,CAAC,CAAC;MAC3B;IACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}