{"ast":null,"code":"import { ref, watchEffect, onMounted, watch } from \"vue\";\nimport DialogComment from \"./DialogComment.vue\";\nimport AreportedDialog from '@/page/components/AreportedDialog.vue';\nimport CfDialog from '@/page/components/CfDialog';\nimport { fetchShareCoverage } from '@/utils/fileService';\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\nimport axios from '@/utils/request';\nimport { ElMessage } from 'element-plus';\nimport unlikedImage from '@/assets/LikeBefore.svg';\nimport likedImage from '@/assets/LikeAfter.svg';\nexport default {\n  __name: 'ShareDialog',\n  props: {\n    modelValue: Boolean,\n    Id: Number\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const localDialogVisible = ref(props.modelValue);\n    watchEffect(() => {\n      if (localDialogVisible.value !== props.modelValue) {\n        emit('update:modelValue', localDialogVisible.value);\n      }\n    });\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\n    const shareData = ref({});\n    const limitWord = ref(150); //设置分享在不展开的情况下显示内容的上限\n    const showDialogComments = ref(false); //控制评论区显示与否\n    const dialogVisible = ref(false); //控制文章举报弹框是否显示\n    const dialogFormVisible = ref(false); //控制cfdialog弹窗（显示文章收藏列表）是否弹出\n    const ReportBtn = ref(false); //控制举报该条分享按钮是否显示\n    const shareId = ref();\n    const shareAuthorId = ref();\n    const shareAuthorName = ref();\n    const shareTitle = ref();\n    const favoriteId = ref();\n    const fetchData = () => {\n      shareId.value = props.Id;\n      fetchShareData();\n    };\n\n    //判断该分享的内容是否需要展开收回（写到接口方法里显得太臃肿了所以提出来了）\n    const checkContentOverflow = content => {\n      if (content.length > limitWord.value) {\n        return true;\n      }\n    };\n\n    //接受cfdialog返回的数据，从而确定收藏Id\n    const handleUpdateValue = data => {\n      favoriteId.value = data[0];\n    };\n\n    //点击打开分享弹窗\n    const handleUpdateShare = () => {\n      dialogFormVisible.value = true;\n    };\n\n    // 使用 watch 来监听 favoriteId 的变化\n    watch(favoriteId, (newVal, oldVal) => {\n      if (newVal !== oldVal) {\n        toggleFavorite();\n      }\n    });\n\n    //分享收藏相关接口\n    async function toggleFavorite() {\n      try {\n        const response = await axios.post(`/favorite/share`, {\n          favoriteId: favoriteId.value,\n          contentId: props.Id\n        });\n        if (response.data.code === 1) {\n          shareData.value.favoriteStatus = 1;\n          shareData.value.favoriteCount = response.data.data;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(response.data.msg || 'Unknown error');\n          ElMessage.error('分享收藏失败');\n        }\n      } catch (error) {\n        console.error('分享收藏成功', error.message);\n        ElMessage.error('分享收藏成功');\n      }\n    }\n\n    //点击展开分享内容\n    const OpenExpension = () => {\n      //在准备点击之前还未展开，即needsExpansion为true，此时点击让控制评论区的showDialogComments为false\n      if (shareData.value.needsExpansion) {\n        showDialogComments.value = false;\n      }\n      // 点击展开or折叠状态切换\n      shareData.value.needsExpansion = !shareData.value.needsExpansion;\n    };\n    const OpenComment = () => {\n      //若点击评论区图标时，分享内容是展开的 ，即needsExpansion为false，则先收起分享内容，即让needsExpansion为true\n      if (!shareData.value.needsExpansion) {\n        shareData.value.needsExpansion = true;\n      }\n      showDialogComments.value = !showDialogComments.value;\n    };\n\n    //获取分享信息\n    const fetchShareData = async () => {\n      try {\n        const response = await axios.get(`/share/${shareId.value}`);\n        if (response.data.code === 1) {\n          shareData.value = response.data.data;\n          shareAuthorId.value = shareData.value.userId;\n          shareAuthorName.value = shareData.value.username;\n          shareTitle.value = shareData.value.title;\n          shareData.value.verified = await fetchUserInformation(shareData.value.userId);\n          shareData.value.newAvater = await getUsersAvatarFromCOS(shareData.value.userId);\n          shareData.value.newCoverPicture = await fetchShareCoverage(shareData.value.id);\n          shareData.value.likeStatus = await determineImage(1, shareData.value.id);\n          shareData.value.favoriteStatus = await deterFavorite(shareData.value.id);\n          shareData.value.needsExpansion = checkContentOverflow(shareData.value.content);\n          shareData.value.showExpansion = checkContentOverflow(shareData.value.content);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('接口请求失败');\n        }\n      } catch (error) {\n        console.error('接口请求失败', error);\n      }\n    };\n\n    // 获取用户信息\n    const fetchUserInformation = async userId => {\n      try {\n        const response = await axios.get(`/users/${userId}`);\n        if (response.data.code === 1) {\n          return response.data.data.verified;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取用户信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户信息失败\", error);\n        ElMessage.error('获取用户信息失败');\n      }\n    };\n\n    //判断收藏状态\n    async function deterFavorite(id) {\n      try {\n        const response = await axios.get(`/favorite/share/${id}`);\n        if (response.data.code === 1) {\n          return response.data.data;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(response.data.msg || 'Unknown error');\n        }\n      } catch (error) {\n        console.error('获取点赞状态失败', error.message);\n        ElMessage.error('获取收藏状态失败');\n      }\n    }\n\n    //判断点赞状态\n    async function determineImage(type, id) {\n      try {\n        const response = await axios.get(`/like/state`, {\n          params: {\n            id: id,\n            type: type\n          }\n        });\n        if (response.data.code === 1) {\n          return response.data.data;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(response.data.msg || 'Unknown error');\n          ElMessage.error('获取点赞状态失败');\n        }\n      } catch (error) {\n        console.error('获取点赞状态失败', error.message);\n      }\n    }\n\n    //点赞相关方法\n    async function toggleLike(likeStatus, shareId) {\n      try {\n        const config = likeStatus === 0 ? {\n          method: 'put',\n          url: `/share/like`,\n          data: {\n            userId: userId,\n            shareId: shareId\n          }\n        } : {\n          method: 'delete',\n          url: `/share/unlike`,\n          data: {\n            userId: userId,\n            shareId: shareId\n          }\n        };\n        const response = await axios(config);\n        if (response.data.code === 1) {\n          shareData.value.likeStatus = shareData.value.likeStatus === 0 ? 1 : 0;\n          shareData.value.likeCount = response.data.data;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(response.data.msg || 'Unknown error');\n          ElMessage.error('点赞操作失败');\n        }\n      } catch (error) {\n        console.error('获取点赞状态失败', error.message);\n      }\n    }\n    onMounted(async () => {\n      fetchData();\n    });\n    const __returned__ = {\n      props,\n      emit,\n      localDialogVisible,\n      userId,\n      shareData,\n      limitWord,\n      showDialogComments,\n      dialogVisible,\n      dialogFormVisible,\n      ReportBtn,\n      shareId,\n      shareAuthorId,\n      shareAuthorName,\n      shareTitle,\n      favoriteId,\n      fetchData,\n      checkContentOverflow,\n      handleUpdateValue,\n      handleUpdateShare,\n      toggleFavorite,\n      OpenExpension,\n      OpenComment,\n      fetchShareData,\n      fetchUserInformation,\n      deterFavorite,\n      determineImage,\n      toggleLike,\n      ref,\n      watchEffect,\n      onMounted,\n      watch,\n      DialogComment,\n      AreportedDialog,\n      get CfDialog() {\n        return CfDialog;\n      },\n      get fetchShareCoverage() {\n        return fetchShareCoverage;\n      },\n      get getUsersAvatarFromCOS() {\n        return getUsersAvatarFromCOS;\n      },\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get unlikedImage() {\n        return unlikedImage;\n      },\n      get likedImage() {\n        return likedImage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watchEffect","onMounted","watch","DialogComment","AreportedDialog","CfDialog","fetchShareCoverage","getUsersAvatarFromCOS","axios","ElMessage","unlikedImage","likedImage","props","__props","emit","__emit","localDialogVisible","modelValue","value","userId","localStorage","getItem","shareData","limitWord","showDialogComments","dialogVisible","dialogFormVisible","ReportBtn","shareId","shareAuthorId","shareAuthorName","shareTitle","favoriteId","fetchData","Id","fetchShareData","checkContentOverflow","content","length","handleUpdateValue","data","handleUpdateShare","newVal","oldVal","toggleFavorite","response","post","contentId","code","favoriteStatus","favoriteCount","msg","error","toString","console","message","OpenExpension","needsExpansion","OpenComment","get","username","title","verified","fetchUserInformation","newAvater","newCoverPicture","id","likeStatus","determineImage","deterFavorite","showExpansion","type","params","toggleLike","config","method","url","likeCount"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/ShareShow/components/ShareDialog.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-dialog class=\"share-dialog\" v-model=\"localDialogVisible\" style=\"width: 90%;height: 90vh;margin-top: 7vh;\">\r\n            <div style=\"display: flex;height: 100%;gap: 1rem;\">\r\n                <!-- 左侧轮播图 -->\r\n                <div class=\"pic-container\">\r\n                    <el-carousel :interval=\"5000\" arrow=\"always\">\r\n                        <el-carousel-item v-for=\"item in shareData.newCoverPicture\" :key=\"item\">\r\n                            <img style=\"width: 100%;height: 100%;\" :src=\"item\"  alt=\"Image\" />\r\n                        </el-carousel-item>\r\n                    </el-carousel>\r\n                </div>\r\n                <!-- 右侧分享信息+评论部分 -->\r\n                <div class=\"share-info\">\r\n                    <!-- 具体的分享信息 -->\r\n                    <div class=\"top\">\r\n                        <!-- 作者头像+名称 -->\r\n                        <div class=\"user\">\r\n                            <img style=\"width: 30px;height: 30px;border-radius: 50%;\" :src=\"shareData.newAvater\" alt=\"\">\r\n                            <div style=\"display: flex;flex-direction: column;align-items: flex-start;gap: 0.2rem;\">\r\n                                <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                                    <span class=\"name\">{{ shareData.username }}</span>\r\n                                    <img v-if=\"shareData.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n                                </div>\r\n                                <span class=\"time\">{{ shareData.createTime }}</span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- 分享内容 -->\r\n                        <div  class=\"content-wrapper\" >\r\n                            <p :class=\"{ 'limited': needsExpansion }\" class=\"content-text\">\r\n                                {{ shareData.content }}\r\n                            </p>\r\n                            <button \r\n                                v-if=\" shareData.showExpansion\" \r\n                                @click= \"OpenExpension\"\r\n                                class=\"expand-btn\"\r\n                            >\r\n                                {{  shareData.needsExpansion ? '展开':'折叠'   }}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <!-- 点赞,收藏等图标 -->\r\n                    <div class=\"middle\">\r\n                        <div class=\"icons-container\">\r\n                            <!-- 点赞 -->\r\n                            <div class=\"icon\">\r\n                                <img class=\"like-pic\"  :src=\" shareData.likeStatus === 0 ? unlikedImage : likedImage \" @click=\"toggleLike(shareData.likeStatus,shareData.id)\">\r\n                                <span class=\"like_num\">{{ shareData.likeCount }}</span>\r\n                            </div>\r\n                            <!-- 评论 -->\r\n                            <div @click=\"OpenComment\" class=\"icon\">\r\n                                <img src=\"@/assets/Comment.svg\" alt=\"\">\r\n                                <span>{{ shareData.commentCount }}</span>\r\n                            </div>\r\n                            <!-- 收藏 -->\r\n                            <div class=\"icon\">\r\n                                <img class=\"like-pic\"  v-if=\" shareData.favoriteStatus === 0 \" src=\"@/assets/FavoriteBefore.svg\" @click=\"handleUpdateShare()\">\r\n                                <img class=\"like-pic\" v-if=\" shareData.favoriteStatus === 1 \" src=\"@/assets/FavoriteAfter.svg\" >\r\n                                <span class=\"like_num\">{{ shareData.favoriteCount }}</span>\r\n                            </div>\r\n                            <!-- 分享收藏列表弹框 -->\r\n                            <div v-if=\"dialogFormVisible\">\r\n                                <CfDialog  class=\"cf-dialog\" @updateValue=\"handleUpdateValue\" v-model=\"dialogFormVisible\"  ClassifyName=\"分享收藏\"></CfDialog>\r\n                            </div>\r\n                            <!-- 更多 -->\r\n                            <div class=\"icon\" style=\"position: relative;\" @click=\"ReportBtn = true;\" >\r\n                                <img src=\"@/assets/More.svg\" alt=\"\">\r\n                                <div v-if=\"ReportBtn\"  class=\"report-box\">\r\n                                    <span @click=\"dialogVisible = true;\" @mouseleave=\"ReportBtn = false;\">举报</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- 评论区 -->\r\n                    <div class=\"last\" v-if=\"showDialogComments && shareData.needsExpansion\">\r\n                        <DialogComment  :shareId=\"shareId\" :shareAuthorId=\"shareAuthorId\" :shareAuthorName=\"shareAuthorName\" :shareTitle=\"shareTitle\"></DialogComment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </el-dialog>\r\n        <div v-if=\"dialogVisible\">\r\n            <AreportedDialog v-model=\"dialogVisible\" ></AreportedDialog>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, ref,defineEmits,watchEffect,onMounted,watch} from \"vue\";\r\nimport DialogComment from \"./DialogComment.vue\";\r\nimport AreportedDialog from '@/page/components/AreportedDialog.vue';\r\nimport CfDialog from '@/page/components/CfDialog';\r\nimport { fetchShareCoverage } from '@/utils/fileService';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport axios from '@/utils/request';\r\nimport { ElMessage } from 'element-plus';\r\nimport unlikedImage from '@/assets/LikeBefore.svg';\r\nimport likedImage from '@/assets/LikeAfter.svg';\r\n\r\nconst props = defineProps({\r\n    modelValue: Boolean,\r\n    Id:Number,\r\n});\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst localDialogVisible = ref(props.modelValue);\r\nwatchEffect(() => {\r\n    if (localDialogVisible.value !== props.modelValue) {\r\n        emit('update:modelValue', localDialogVisible.value);\r\n    }\r\n});\r\n\r\nconst userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\nconst shareData = ref({});\r\nconst limitWord = ref(150);//设置分享在不展开的情况下显示内容的上限\r\nconst showDialogComments = ref(false)//控制评论区显示与否\r\nconst dialogVisible = ref(false);//控制文章举报弹框是否显示\r\nconst dialogFormVisible = ref(false);//控制cfdialog弹窗（显示文章收藏列表）是否弹出\r\nconst ReportBtn = ref(false)//控制举报该条分享按钮是否显示\r\nconst shareId = ref();\r\nconst shareAuthorId = ref();\r\nconst shareAuthorName = ref();\r\nconst shareTitle = ref();\r\nconst favoriteId= ref();\r\n\r\nconst fetchData = () =>{\r\n    shareId.value = props.Id;\r\n    fetchShareData();\r\n}\r\n\r\n//判断该分享的内容是否需要展开收回（写到接口方法里显得太臃肿了所以提出来了）\r\nconst checkContentOverflow = (content) => {\r\n    if (content.length > limitWord.value) {\r\n        return true;\r\n    }\r\n}\r\n\r\n//接受cfdialog返回的数据，从而确定收藏Id\r\nconst handleUpdateValue = (data) => {\r\n    favoriteId.value = data[0];\r\n}\r\n\r\n//点击打开分享弹窗\r\nconst handleUpdateShare = () => {\r\n    dialogFormVisible.value = true;\r\n}\r\n\r\n// 使用 watch 来监听 favoriteId 的变化\r\nwatch(favoriteId, (newVal, oldVal) => {\r\n    if (newVal !== oldVal) {\r\n    toggleFavorite();\r\n    }\r\n});\r\n\r\n\r\n//分享收藏相关接口\r\nasync function toggleFavorite() {\r\n    try {\r\n        const response = await axios.post(`/favorite/share`,{\r\n            favoriteId: favoriteId.value, \r\n            contentId:  props.Id, \r\n        });\r\n        if ( response.data.code === 1) {\r\n            shareData.value.favoriteStatus = 1; \r\n            shareData.value.favoriteCount =  response.data.data;\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error(response.data.msg || 'Unknown error');\r\n            ElMessage.error('分享收藏失败');\r\n        }\r\n    } catch (error) {\r\n    console.error('分享收藏成功', error.message);\r\n    ElMessage.error('分享收藏成功');\r\n    }\r\n}\r\n\r\n//点击展开分享内容\r\nconst OpenExpension = () =>{\r\n    //在准备点击之前还未展开，即needsExpansion为true，此时点击让控制评论区的showDialogComments为false\r\n    if( shareData.value.needsExpansion){\r\n        showDialogComments.value = false\r\n    }\r\n    // 点击展开or折叠状态切换\r\n    shareData.value.needsExpansion = !shareData.value.needsExpansion;\r\n}\r\nconst OpenComment = () =>{\r\n    //若点击评论区图标时，分享内容是展开的 ，即needsExpansion为false，则先收起分享内容，即让needsExpansion为true\r\n    if(!shareData.value.needsExpansion){\r\n        shareData.value.needsExpansion = true\r\n    }\r\n    showDialogComments.value = !showDialogComments.value\r\n}\r\n\r\n//获取分享信息\r\nconst fetchShareData = async () => {\r\n    try {\r\n        const response = await axios.get(`/share/${shareId.value}`)\r\n        if (response.data.code === 1) {\r\n            shareData.value = response.data.data;\r\n            shareAuthorId.value = shareData.value.userId;\r\n            shareAuthorName.value = shareData.value.username;\r\n            shareTitle.value = shareData.value.title;\r\n            shareData.value.verified = await fetchUserInformation(shareData.value.userId);\r\n            shareData.value.newAvater = await getUsersAvatarFromCOS( shareData.value.userId);\r\n            shareData.value.newCoverPicture = await fetchShareCoverage( shareData.value.id);\r\n            shareData.value.likeStatus = await determineImage(1, shareData.value.id);\r\n            shareData.value.favoriteStatus = await deterFavorite(shareData.value.id);\r\n            shareData.value.needsExpansion = checkContentOverflow(shareData.value.content);\r\n            shareData.value.showExpansion = checkContentOverflow(shareData.value.content);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('接口请求失败');\r\n        }\r\n    } catch (error) {\r\n        console.error('接口请求失败', error);\r\n    }\r\n};\r\n\r\n// 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\n//判断收藏状态\r\nasync function deterFavorite(id) {\r\n    try {\r\n        const response = await axios.get(`/favorite/share/${id}`)\r\n        if ( response.data.code === 1) {\r\n            return response.data.data;\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error(response.data.msg || 'Unknown error');\r\n        }\r\n    } catch (error) {\r\n        console.error('获取点赞状态失败', error.message);\r\n        ElMessage.error('获取收藏状态失败');\r\n    }\r\n}\r\n\r\n//判断点赞状态\r\nasync function determineImage(type,id) {\r\n    try {\r\n        const response = await axios.get(`/like/state`,{\r\n            params: {\r\n                id: id,\r\n                type: type,\r\n            }\r\n        });\r\n        if (response.data.code === 1) {\r\n            return (response.data.data);\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error(response.data.msg || 'Unknown error');\r\n            ElMessage.error('获取点赞状态失败');\r\n        }\r\n    } catch (error) {\r\n    console.error('获取点赞状态失败', error.message);\r\n    }\r\n}\r\n  \r\n//点赞相关方法\r\nasync function toggleLike(likeStatus,shareId) {\r\n    try {\r\n        const config = likeStatus === 0\r\n            ? {\r\n                method: 'put',\r\n                url: `/share/like`,\r\n                data: { userId: userId , shareId: shareId}\r\n            }\r\n            : {\r\n                method: 'delete',\r\n                url: `/share/unlike`,\r\n                data: { userId: userId , shareId: shareId}\r\n            };\r\n        const response = await axios(config);\r\n        if ( response.data.code === 1) {\r\n            shareData.value.likeStatus = shareData.value.likeStatus === 0 ? 1 : 0;\r\n            shareData.value.likeCount =  response.data.data;\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error(response.data.msg || 'Unknown error');\r\n            ElMessage.error('点赞操作失败');\r\n        }\r\n    } catch (error) {\r\n        console.error('获取点赞状态失败', error.message);\r\n    }\r\n}\r\n\r\nonMounted(async () => {\r\n    fetchData();\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n::v-deep .share-dialog .el-dialog__body {\r\n    padding: 20px 30px;\r\n    height: 93%;\r\n}\r\n::v-deep .share-dialog .el-dialog__header {\r\n    padding: 0; \r\n    margin-right: 0;\r\n}\r\n::v-deep .share-dialog .el-carousel--horizontal {\r\n    height: 100%;\r\n}\r\n::v-deep .share-dialog .el-carousel__container{\r\n    height: 100% !important;\r\n}\r\n/* 由于el-dialog嵌套使用,故在一个组件内给两个弹框定义不同类名以防止样式重叠 */\r\n::v-deep .cf-dialog .el-dialog{\r\n    width: 75%;\r\n    height: 80%;\r\n}\r\n::v-deep .cf-dialog .el-dialog__body{\r\n    padding: 10px 30px;\r\n    height: 73%;\r\n}\r\n::v-deep .cf-dialog .el-dialog__header{\r\n    text-align: center;\r\n    padding: var(--el-dialog-padding-primary);\r\n}\r\n::v-deep .cf-dialog .el-dialog__title {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n}\r\n::v-deep .cf-dialog .el-dialog__headerbtn {\r\n    width: 30px;\r\n    height: 30px;\r\n}\r\n:deep .el-dialog__headerbtn {\r\n    top: -10px;\r\n    right: -10px;\r\n}\r\n.pic-container{\r\n    width: 60%;\r\n    height: 100%;\r\n}\r\n.share-info{\r\n    width: 40%;\r\n    height: 100%;\r\n}\r\n.top{\r\n    padding: 10px;\r\n    min-height: 35%;\r\n    max-height: 70%;\r\n    width: 95%;\r\n    overflow: auto;\r\n    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.08);\r\n}\r\n.user{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-bottom: 1rem;\r\n}\r\n.name{\r\n    color: #2A7FE4;\r\n}\r\n.time{\r\n    color: #8C8C8C;\r\n    font-size: 12px;\r\n}\r\n.content-wrapper {\r\n    position: relative;\r\n    margin-bottom: 20px;\r\n    position: relative;\r\n}\r\n.content-text{\r\n    color: #333;\r\n    padding: 0px 10px;\r\n    font-size: 14px;\r\n    line-height: 1.8; \r\n    letter-spacing: 1px;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n}\r\n.content-text.limited {\r\n    -webkit-line-clamp: 5;\r\n}\r\n.expand-btn {\r\n    position: absolute;\r\n    bottom: -15px;\r\n    right: 0;\r\n    background-color: transparent; \r\n    border: none;\r\n    cursor: pointer;\r\n    color: #2A7FE4;\r\n    font-size: 14px;\r\n    line-height: 120%; \r\n}\r\n.icons-container{\r\n    display: flex;\r\n    width: 97%;\r\n    height: 30px;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    margin-top: 10px;\r\n}\r\n.icon{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 3px;\r\n}\r\n.icon img{\r\n    width: 18px;\r\n    height: 18px;\r\n    cursor: pointer;\r\n}\r\n.icon span{\r\n    color: #2d2d2d;\r\n    font-size: 12px;\r\n}\r\n.report-box{\r\n    position: absolute;\r\n    top: 15px ;\r\n    right: -17px;\r\n    width: 50px;\r\n    height: 26px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 5px; \r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n.report-box span{\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    color: #5d5d5d;\r\n}\r\n.last{\r\n    width: 100%;\r\n    height: 53%;\r\n    overflow: auto;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}