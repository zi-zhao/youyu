{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/MessageCenter/FocusMe.svg';\nimport _imports_1 from '@/assets/VerifiedUser.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-98335b36\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"first\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"one\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n}), /*#__PURE__*/_createElementVNode(\"span\", null, \"关注列表\")])], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"then\",\n  \"infinite-scroll-distance\": \"100\",\n  \"infinite-scroll-immediate\": \"false\"\n};\nconst _hoisted_3 = {\n  class: \"large\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"text\"\n};\nconst _hoisted_6 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  }\n};\nconst _hoisted_7 = {\n  class: \"name\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  src: _imports_1,\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\",\n    \"margin-left\": \"-9px\"\n  },\n  alt: \"\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"middle\"\n}, \"关注了我\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  class: \"time\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _directive_infinite_scroll = _resolveDirective(\"infinite-scroll\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.focusMeNotification, (source, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"box\"\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n      src: source.avatar,\n      alt: \"\",\n      class: \"cover\"\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, _toDisplayString(source.fanUsername), 1 /* TEXT */), source.verified === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_8)) : _createCommentVNode(\"v-if\", true)]), _hoisted_9, _createElementVNode(\"span\", _hoisted_10, _toDisplayString(source.createTime), 1 /* TEXT */)])])]);\n  }), 128 /* KEYED_FRAGMENT */)), !$setup.focusMeNotification || $setup.focusMeNotification.length === 0 ? (_openBlock(), _createBlock(_component_el_empty, {\n    key: 0,\n    \"image-size\": 200,\n    description: \"您暂时还没有收到关注消息呢！\"\n  })) : _createCommentVNode(\"v-if\", true)])), [[_directive_infinite_scroll, $setup.load]])]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_createElementVNode","class","src","alt","style","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$setup","focusMeNotification","source","index","key","_hoisted_3","avatar","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","fanUsername","verified","_hoisted_8","_hoisted_9","_hoisted_10","createTime","length","_createBlock","_component_el_empty","description","load"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\MessageCenter\\component\\FocusMe\\FocusMe.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"first\">\r\n            <div class=\"one\">\r\n                <img src=\"@/assets/MessageCenter/FocusMe.svg\" alt=\"\">\r\n                <span>关注列表</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"then\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n            <div v-for=\"(source,index) in focusMeNotification\" :key=\"index\" class=\"box\">\r\n                <div class=\"large\">\r\n                    <img :src=source.avatar alt=\"\" class=\"cover\">\r\n                    <div class=\"text\">\r\n                        <div style=\"display: flex;align-items: center;\">\r\n                            <span class=\"name\">{{ source.fanUsername }}</span>\r\n                            <img v-if=\"source.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin-left: -9px;\" alt=\"\">\r\n                        </div>\r\n                        <span class=\"middle\">关注了我</span>\r\n                        <span class=\"time\">{{ source.createTime }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <el-empty \r\n                v-if=\"!focusMeNotification || focusMeNotification.length === 0\" \r\n                :image-size=\"200\" \r\n                description=\"您暂时还没有收到关注消息呢！\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus';\r\nimport {  ref,onMounted } from 'vue';\r\nimport axios from '@/utils/request.js';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport { convertDateFormat } from '@/utils/timeFormat';\r\n\r\nconst userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\nconst focusMeNotification = ref([]);\r\nconst currentPage = ref(1);\r\n\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n        if(currentPage.value === 1){\r\n            currentPage.value++;\r\n        }\r\n        await getMyFocusNote(currentPage.value);\r\n        currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n\r\nasync function getMyFocusNote(currentPage) {\r\n    try {\r\n        // const response = await axios.get('/users/fans?apifoxApiId=105505347');\r\n        const response = await axios.get('/users/fans', {\r\n                params: {\r\n                    id:userId,\r\n                    page:currentPage,\r\n                    pazeSize:10\r\n                }\r\n            });\r\n        if(response.data.data.records){\r\n            const updates = response.data.data.records.map(async (record) => {\r\n                const avatar = await getUsersAvatarFromCOS(record.fanId);\r\n                const createTime = convertDateFormat(record.createTime);\r\n                const verified = await fetchUserInformation(record.fanId);\r\n                return { ...record, avatar, createTime,verified };\r\n            });\r\n            const updatedRecords = await Promise.all(updates);\r\n            focusMeNotification.value = [...focusMeNotification.value, ...updatedRecords];\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else(error)=>{\r\n            console.log(error);\r\n            ElMessage.error('获取用户粉丝数据失败');\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n        ElMessage.error('获取用户粉丝数据失败');\r\n    }\r\n}\r\n\r\n    // 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\n\r\nonMounted(() => {\r\n    getMyFocusNote(currentPage.value)\r\n})\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.first{\r\n    width: 77vw;\r\n    padding: 12px 12px 0px; \r\n    justify-content: center; \r\n    gap: 12px;\r\n    border-radius: 8px;\r\n    border: 2px solid #F0F0F0;\r\n    background: #FFF;\r\n    margin-top: 50px;\r\n}\r\n.one{\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n    align-items: center;\r\n}\r\n.one img{\r\n    width: 20px;\r\n    height: 20px;\r\n    align-items: center;\r\n}\r\n.one span{\r\n    color: #6B757B;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    line-height: 1.6; \r\n    margin-left: 8px;\r\n}\r\n.then{\r\n    width: 77vw;\r\n    height: 78vh;\r\n    overflow-y: scroll;\r\n    padding: 12px 12px 0px;\r\n    border-radius: 8px;\r\n    border: 2px solid #F0F0F0;\r\n    margin-top: 12px;\r\n}\r\n.box{\r\n    width: 95%;\r\n    margin: 0px auto;\r\n    border-bottom:1px solid #e7e7e7;\r\n    display: flex;\r\n}\r\n.cover{\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 100%;\r\n}\r\n.name{\r\n    color: #000;\r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 260%; \r\n    margin: 0 10px;\r\n}\r\n.middle{\r\n    color: #505050;\r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 260%;\r\n    margin-left: 10px;\r\n}\r\n.text{\r\n    display: inline-block;\r\n}\r\n.time{\r\n    color: #A1A1A1;\r\n    font-size: 12px;\r\n    line-height: 120%;\r\n    position: absolute;\r\n    right: 0px;\r\n    top: 50%;\r\n}\r\n.aritle{\r\n    width: 70px;\r\n    height: 70px;\r\n    position: absolute;\r\n    right: 36px;\r\n    bottom: 10px;\r\n    top: 10px;\r\n}\r\n.large{\r\n    display: flex;\r\n    align-items: center;\r\n    width: 98%;\r\n    gap: 5px;\r\n    height: 100px;\r\n    position: relative;\r\n}\r\n.number{\r\n    color: #9FA9CA;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    line-height: 120%;\r\n}\r\n::v-deep .el-checkbox.el-checkbox--large{\r\n    width: 80px;\r\n}\r\n@media (max-width: 768px) {\r\n    .first,\r\n    .then{\r\n        width: 800px;\r\n    }\r\n}\r\n</style>"],"mappings":";OAIqBA,UAAwC;OAWCC,UAA+B;;gEAbrFC,mBAAA,CAKM;EALDC,KAAK,EAAC;AAAO,I,aACdD,mBAAA,CAGM;EAHDC,KAAK,EAAC;AAAK,I,aACZD,mBAAA,CAAqD;EAAhDE,GAAwC,EAAxCJ,UAAwC;EAACK,GAAG,EAAC;iBAClDH,mBAAA,CAAiB,cAAX,MAAI,E;;EAGbC,KAAK,EAAC,MAAM;EAA0B,0BAAwB,EAAC,KAAK;EAAC,2BAAyB,EAAC;;;EAEvFA,KAAK,EAAC;AAAO;;;EAETA,KAAK,EAAC;AAAM;;EACRG,KAA0C,EAA1C;IAAA;IAAA;EAAA;AAA0C;;EACrCH,KAAK,EAAC;AAAM;;;EACgBC,GAA+B,EAA/BH,UAA+B;EAACK,KAAmD,EAAnD;IAAA;IAAA;IAAA;EAAA,CAAmD;EAACD,GAAG,EAAC;;gEAE9HH,mBAAA,CAAgC;EAA1BC,KAAK,EAAC;AAAQ,GAAC,MAAI;;EACnBA,KAAK,EAAC;AAAM;;;;uBAjBtCI,mBAAA,CA2BM,cA1BFC,UAKM,E,+BACND,mBAAA,CAmBM,OAnBNE,UAmBM,I,kBAlBFF,mBAAA,CAYMG,SAAA,QAAAC,WAAA,CAZwBC,MAAA,CAAAC,mBAAmB,GAApCC,MAAM,EAACC,KAAK;yBAAzBR,mBAAA,CAYM;MAZ8CS,GAAG,EAAED,KAAK;MAAEZ,KAAK,EAAC;QAClED,mBAAA,CAUM,OAVNe,UAUM,GATFf,mBAAA,CAA6C;MAAvCE,GAAG,EAACU,MAAM,CAACI,MAAM;MAACb,GAAG,EAAC,EAAE;MAACF,KAAK,EAAC;yCACrCD,mBAAA,CAOM,OAPNiB,UAOM,GANFjB,mBAAA,CAGM,OAHNkB,UAGM,GAFFlB,mBAAA,CAAkD,QAAlDmB,UAAkD,EAAAC,gBAAA,CAA5BR,MAAM,CAACS,WAAW,kBAC7BT,MAAM,CAACU,QAAQ,U,cAA1BjB,mBAAA,CAA6H,OAA7HkB,UAA6H,K,qCAEjIC,UAAgC,EAChCxB,mBAAA,CAAiD,QAAjDyB,WAAiD,EAAAL,gBAAA,CAA3BR,MAAM,CAACc,UAAU,iB;mCAKxChB,MAAA,CAAAC,mBAAmB,IAAID,MAAA,CAAAC,mBAAmB,CAACgB,MAAM,U,cAD5DC,YAAA,CAIEC,mBAAA;;IAFG,YAAU,EAAE,GAAG;IAChBC,WAAW,EAAC;4EAjBiBpB,MAAA,CAAAqB,IAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}