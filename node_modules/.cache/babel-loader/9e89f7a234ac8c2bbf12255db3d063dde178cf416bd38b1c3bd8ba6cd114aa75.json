{"ast":null,"code":"import { ElMessage } from 'element-plus';\nimport { ref, onMounted, computed, watchEffect } from \"vue\";\nimport axios from '../../utils/request';\nimport { compressImage, fetchFavoriteCoverage } from '@/utils/fileService';\nimport { getColumnPictureFromCOS, getFavoritePermission, getColumnPermission } from '@/utils/cosService';\nexport default {\n  __name: 'EditDialog',\n  props: {\n    ClassifyName: String,\n    modelValue: Boolean,\n    Id: Number\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const localDialogVisible2 = ref(props.modelValue);\n    watchEffect(() => {\n      if (localDialogVisible2.value !== props.modelValue) {\n        emit('update:modelValue', localDialogVisible2.value);\n      }\n    });\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\n    const checked = ref(false);\n    const listData = ref([]); //存放从专栏或收藏中获取的数据\n    const previousImageUrl = ref(''); //存放用户之前的专栏或收藏封面图\n    const fileName = ref();\n    const fileInput = ref(null);\n    const selectedImages = ref([]);\n    const imagePreviews = ref([]);\n    const text1 = computed({\n      get: () => listData.value.name,\n      set: newValue => listData.value.name = newValue\n    });\n    const textarea1 = computed({\n      get: () => listData.value.profile,\n      set: newValue => listData.value.profile = newValue\n    });\n    const visibility = computed(() => {\n      return checked.value ? 1 : 0;\n    });\n\n    // 当点击按钮时触发文件输入框\n    const triggerImageUpload = () => {\n      if (selectedImages.value.length < 2) {\n        fileInput.value.click();\n      } else {\n        ElMessage.error('只能提交一张照片');\n      }\n    };\n\n    // 当文件选择后处理图片\n    const handleImage = async event => {\n      const file = event.target.files[0];\n      if (file && selectedImages.value.length < 2) {\n        const timestamp = new Date().getTime(); // 获取当前时间戳\n        fileName.value = `${timestamp}-${file.name}`; // 在文件名前加时间戳\n        const compressedFile = await compressImage(file);\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          imagePreviews.value.push(e.target.result); // 添加DataURL到imagePreviews\n          selectedImages.value.push(compressedFile); // 添加文件对象到selectedImages\n        };\n        reader.readAsDataURL(compressedFile);\n      }\n    };\n\n    //删除图片\n    const removeImage = index => {\n      selectedImages.value.splice(index, 1);\n      imagePreviews.value.splice(index, 1); // 也删除对应的预览\n    };\n\n    //根据父组件传回的classifyname判断应该调用的接口类型（这个方法只是增加一个判断值）\n    const showData = async () => {\n      if (props.ClassifyName === \"文章专栏\") {\n        await getColumnArticleList(props.Id);\n      } else if (props.ClassifyName === \"分享专栏\") {\n        await getColumnShareList(props.Id);\n      } else if (props.ClassifyName === \"文章收藏\") {\n        await getFavoriteArticleList(props.Id);\n      } else if (props.ClassifyName === \"分享收藏\") {\n        await getFavoriteShareList(props.Id);\n      }\n    };\n\n    //根据父组件传回的classifyname判断应该调用的接口类型（这个方法只是增加一个判断值）\n    const submitData = () => {\n      if (props.ClassifyName === \"文章专栏\") {\n        setColumnList();\n        if (selectedImages.value) setColumnPitcure(props.Id);\n        localDialogVisible2.value = false;\n      } else if (props.ClassifyName === \"分享专栏\") {\n        setColumnList();\n        if (selectedImages.value) setColumnPitcure(props.Id);\n        localDialogVisible2.value = false;\n      } else if (props.ClassifyName === \"文章收藏\") {\n        setFavoriteList();\n        if (selectedImages.value) setFavoritePitcure(props.Id);\n        localDialogVisible2.value = false;\n      } else if (props.ClassifyName === \"分享收藏\") {\n        setFavoriteList();\n        if (selectedImages.value) setFavoritePitcure(props.Id);\n        localDialogVisible2.value = false;\n      }\n    };\n\n    //修改专栏图片\n    async function setColumnPitcure(ID) {\n      try {\n        await getColumnPermission(selectedImages.value[0], fileName.value, ID);\n      } catch (error) {\n        console.error(\"修改专栏图片接口失败\", error);\n        ElMessage.error('修改专栏图片接口失败');\n      }\n    }\n    //修改收藏图片\n    async function setFavoritePitcure(ID) {\n      try {\n        await getFavoritePermission(selectedImages.value[0], fileName.value, ID);\n      } catch (error) {\n        console.error(\"修改收藏图片接口失败\", error);\n        ElMessage.error('修改收藏图片接口失败');\n      }\n    }\n\n    //获取文章专栏\n    async function getColumnArticleList(ID) {\n      try {\n        const response = await axios.get('/column', {\n          params: {\n            type: 0,\n            page: 1,\n            pazeSize: 100,\n            userId: Number(userId)\n          }\n        });\n        if (response.data.code === 1) {\n          const filteredData = response.data.data.records.filter(item => item.id === ID);\n          if (filteredData.length > 0) {\n            listData.value = filteredData[0];\n            previousImageUrl.value = await getColumnPictureFromCOS(listData.value.id);\n            checked.value = listData.value.visibility;\n          } else {\n            console.error(\"未找到该专栏\");\n            ElMessage.error(\"未找到该专栏\");\n          }\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取文章专栏列表数据失败\");\n          ElMessage.error(\"获取文章专栏列表数据失败\");\n        }\n      } catch (error) {\n        console.error(\"请求文章专栏接口失败\", error);\n        ElMessage.error(\"请求文章专栏接口失败\");\n      }\n    }\n\n    //获取分享专栏\n    async function getColumnShareList(ID) {\n      try {\n        const response = await axios.get('/column', {\n          params: {\n            type: 1,\n            page: 1,\n            pazeSize: 100,\n            userId: Number(userId)\n          }\n        });\n        if (response.data.code === 1) {\n          const filteredData = response.data.data.records.filter(item => item.id === ID);\n          if (filteredData.length > 0) {\n            listData.value = filteredData[0];\n            previousImageUrl.value = await getColumnPictureFromCOS(listData.value.id);\n            checked.value = listData.value.visibility;\n          } else {\n            console.error(\"未找到该专栏\");\n            ElMessage.error(\"未找到该专栏\");\n          }\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取分享专栏数据失败\");\n          ElMessage.error(\"获取分享专栏数据失败\");\n        }\n      } catch (error) {\n        console.error(\"请求分享专栏接口失败\", error);\n        ElMessage.error(\"请求分享专栏接口失败\");\n      }\n    }\n\n    //获取文章收藏列表\n    async function getFavoriteArticleList(ID) {\n      try {\n        const response = await axios.get('/favorite', {\n          params: {\n            type: 0,\n            page: 1,\n            pazeSize: 100,\n            userId: Number(userId)\n          }\n        });\n        if (response.data.code === 1) {\n          const filteredData = response.data.data.records.filter(item => item.id === ID);\n          if (filteredData.length > 0) {\n            listData.value = filteredData[0];\n            previousImageUrl.value = await fetchFavoriteCoverage(listData.value.id);\n            checked.value = listData.value.visibility;\n          } else {\n            console.error(\"未找到该专栏\");\n            ElMessage.error(\"未找到该专栏\");\n          }\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取文章收藏数据失败\");\n          ElMessage.error(\"获取文章收藏数据失败\");\n        }\n      } catch (error) {\n        console.error(\"请求文章收藏接口失败\", error);\n        ElMessage.error(\"请求文章收藏接口失败\");\n      }\n    }\n\n    //获取分享收藏列表\n    async function getFavoriteShareList(ID) {\n      try {\n        const response = await axios.get('/favorite', {\n          params: {\n            type: 1,\n            page: 1,\n            pazeSize: 100,\n            userId: Number(userId)\n          }\n        });\n        if (response.data.code === 1) {\n          const filteredData = response.data.data.records.filter(item => item.id === ID);\n          if (filteredData.length > 0) {\n            listData.value = filteredData[0];\n            previousImageUrl.value = await fetchFavoriteCoverage(listData.value.id);\n            checked.value = listData.value.visibility;\n          } else {\n            console.error(\"未找到该专栏\");\n            ElMessage.error(\"未找到该专栏\");\n          }\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取分享收藏数据失败\");\n          ElMessage.error(\"获取分享收藏数据失败\");\n        }\n      } catch (error) {\n        console.error(\"请求分享收藏接口失败\", error);\n        ElMessage.error(\"请求分享收藏接口失败\");\n      }\n    }\n\n    //修改专栏信息\n    async function setColumnList() {\n      try {\n        const data = {\n          id: props.Id,\n          name: text1.value,\n          profile: textarea1.value,\n          visibility: visibility.value\n        };\n        const response = await axios.put('/column', data);\n        if (response.data.code === 1) {\n          ElMessage.success('修改成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"修改专栏数据失败\");\n          ElMessage.error(\"修改专栏数据失败\");\n        }\n      } catch (error) {\n        console.error(\"修改专栏接口失败\", error);\n        ElMessage.error(\"修改专栏数据失败\");\n      }\n    }\n\n    //修改收藏信息\n    async function setFavoriteList() {\n      try {\n        const data = {\n          id: props.Id,\n          name: text1.value,\n          profile: textarea1.value,\n          visibility: visibility.value\n        };\n        const response = await axios.put('/favorite', data);\n        if (response.data.code === 1) {\n          ElMessage.success('修改成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"修改收藏数据失败\");\n          ElMessage.error(\"修改收藏数据失败\");\n        }\n      } catch (error) {\n        console.error(\"修改收藏接口失败\", error);\n        ElMessage.error(\"修改收藏接口失败\");\n      }\n    }\n    onMounted(() => {\n      showData();\n    });\n    const __returned__ = {\n      props,\n      emit,\n      localDialogVisible2,\n      userId,\n      checked,\n      listData,\n      previousImageUrl,\n      fileName,\n      fileInput,\n      selectedImages,\n      imagePreviews,\n      text1,\n      textarea1,\n      visibility,\n      triggerImageUpload,\n      handleImage,\n      removeImage,\n      showData,\n      submitData,\n      setColumnPitcure,\n      setFavoritePitcure,\n      getColumnArticleList,\n      getColumnShareList,\n      getFavoriteArticleList,\n      getFavoriteShareList,\n      setColumnList,\n      setFavoriteList,\n      get ElMessage() {\n        return ElMessage;\n      },\n      ref,\n      onMounted,\n      computed,\n      watchEffect,\n      get axios() {\n        return axios;\n      },\n      get compressImage() {\n        return compressImage;\n      },\n      get fetchFavoriteCoverage() {\n        return fetchFavoriteCoverage;\n      },\n      get getColumnPictureFromCOS() {\n        return getColumnPictureFromCOS;\n      },\n      get getFavoritePermission() {\n        return getFavoritePermission;\n      },\n      get getColumnPermission() {\n        return getColumnPermission;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ElMessage","ref","onMounted","computed","watchEffect","axios","compressImage","fetchFavoriteCoverage","getColumnPictureFromCOS","getFavoritePermission","getColumnPermission","props","__props","emit","__emit","localDialogVisible2","modelValue","value","userId","localStorage","getItem","checked","listData","previousImageUrl","fileName","fileInput","selectedImages","imagePreviews","text1","get","name","set","newValue","textarea1","profile","visibility","triggerImageUpload","length","click","error","handleImage","event","file","target","files","timestamp","Date","getTime","compressedFile","reader","FileReader","onload","e","push","result","readAsDataURL","removeImage","index","splice","showData","ClassifyName","getColumnArticleList","Id","getColumnShareList","getFavoriteArticleList","getFavoriteShareList","submitData","setColumnList","setColumnPitcure","setFavoriteList","setFavoritePitcure","ID","console","response","params","type","page","pazeSize","Number","data","code","filteredData","records","filter","item","id","msg","toString","put","success"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/components/EditDialog.vue"],"sourcesContent":["<!-- 创作中心——专栏和收藏管理——编辑-->\r\n<template>\r\n  <div>\r\n    <el-dialog v-model=\"localDialogVisible2\" :title=\"'修改'+ClassifyName + '信息'\" style=\"width: 60%; height: 80%; min-height: 500px; margin-top: 10vh;\">\r\n        <div class=\"container\">\r\n            <!-- 添加封面 -->\r\n            <div class=\"coverage\">\r\n                <span class=\"pictext\">封面</span>\r\n                <div class=\"beforepic\">\r\n                  <img  :src=\"previousImageUrl\" alt=\"\" style=\"width: 180px; height: 180px; border-radius: 10px;\">\r\n                  <span>(之前使用的图片)</span>\r\n                </div>\r\n                <div class=\"afterpic\">\r\n                  <div class=\"picshow\">\r\n                    <input type=\"file\" ref=\"fileInput\" accept=\"image/*\" style=\"display: none;\" @change=\"handleImage\" />\r\n                    <div  class=\"tpic\" >\r\n                        <el-icon @click=\"triggerImageUpload\" style=\"position: absolute; left: 70px; top: 70px;font-size: 40px;cursor: pointer;\"><Plus /></el-icon>\r\n                    </div>\r\n                    <div class=\"pic_contain\">\r\n                      <div v-for=\"(imagePreview, index) in imagePreviews\" :key=\"index\" class=\"spic\" :style=\"{ backgroundImage: `url(${imagePreview})` }\">\r\n                        <el-icon class=\"delete-btn\" @click=\"removeImage(index)\"><CircleCloseFilled /></el-icon>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <span>(您要修改后的图片)</span>\r\n                </div>\r\n            </div>\r\n            <!-- 专栏/收藏名称 -->\r\n            <div class=\"ptitie\">\r\n                <span class=\"pictext\">名称</span>               \r\n                <el-input\r\n                v-model=\"text1\"\r\n                maxlength=\"20\"\r\n                show-word-limit\r\n                type=\"text\"\r\n                class=\"input_el\"\r\n                />  \r\n            </div>\r\n            <!-- 专栏/收藏简介 -->\r\n            <div class=\"mainp\">\r\n                <span class=\"pictext\">简介</span>\r\n                <el-input\r\n                v-model=\"textarea1\"\r\n                maxlength=\"150\"\r\n                placeholder=\"分享一下最近的趣事或心情吧\"\r\n                show-word-limit\r\n                type=\"textarea\"\r\n                size=\"large\"\r\n                resize=\"none\"\r\n                :autosize = \"{ minRows: 2, maxRows: 30 }\"\r\n                class=\"input_el\"\r\n                />\r\n            </div>\r\n            <!-- 是否展示专栏/收藏 -->\r\n            <el-checkbox v-model=\"checked\">展示{{ ClassifyName }}</el-checkbox>\r\n        </div>\r\n        <template #footer>\r\n        <span class=\"dialog-footer\">\r\n            <el-button @click=\"localDialogVisible2 = false\">Cancel</el-button>\r\n            <el-button type=\"primary\" @click =\"submitData\">\r\n            提交\r\n            </el-button>\r\n        </span>\r\n        </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus';\r\nimport { defineProps, ref,onMounted,computed,watchEffect,defineEmits} from \"vue\";\r\nimport axios from '../../utils/request';\r\nimport {compressImage,fetchFavoriteCoverage} from '@/utils/fileService';\r\nimport { getColumnPictureFromCOS,getFavoritePermission,getColumnPermission} from '@/utils/cosService';\r\n\r\nconst props = defineProps({\r\n    ClassifyName: String,\r\n    modelValue: Boolean,\r\n    Id:Number,\r\n});\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst localDialogVisible2 = ref(props.modelValue);\r\nwatchEffect(() => {\r\n  if (localDialogVisible2.value !== props.modelValue) {\r\n    emit('update:modelValue', localDialogVisible2.value);\r\n  }\r\n});\r\n\r\nconst userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\nconst checked = ref(false);\r\nconst listData = ref([]);//存放从专栏或收藏中获取的数据\r\nconst previousImageUrl = ref('');//存放用户之前的专栏或收藏封面图\r\nconst fileName = ref();\r\nconst fileInput = ref(null);\r\nconst selectedImages = ref([]);\r\nconst imagePreviews = ref([]);\r\n\r\n\r\nconst text1 = computed({\r\n  get: () => listData.value.name,\r\n  set: (newValue) => listData.value.name = newValue\r\n});\r\n\r\nconst textarea1 = computed({\r\n  get: () => listData.value.profile,\r\n  set: (newValue) => listData.value.profile = newValue\r\n});\r\n\r\nconst visibility = computed(() => {\r\n    return checked.value ? 1 : 0;\r\n});\r\n\r\n// 当点击按钮时触发文件输入框\r\nconst triggerImageUpload = () => {\r\n  if (selectedImages.value.length < 2) {\r\n    fileInput.value.click();\r\n  } else {\r\n    ElMessage.error('只能提交一张照片');\r\n  }\r\n};\r\n\r\n// 当文件选择后处理图片\r\nconst handleImage = async (event) => {\r\n  const file = event.target.files[0];\r\n  if (file && selectedImages.value.length < 2) {\r\n    const timestamp = new Date().getTime(); // 获取当前时间戳\r\n    fileName.value = `${timestamp}-${file.name}`; // 在文件名前加时间戳\r\n    const compressedFile =await compressImage(file);\r\n    const reader = new FileReader();\r\n    reader.onload = function(e) {\r\n      imagePreviews.value.push(e.target.result);  // 添加DataURL到imagePreviews\r\n      selectedImages.value.push(compressedFile);  // 添加文件对象到selectedImages\r\n    };\r\n    reader.readAsDataURL(compressedFile);\r\n  }\r\n};\r\n\r\n//删除图片\r\nconst removeImage = (index) => {\r\n    selectedImages.value.splice(index, 1);\r\n    imagePreviews.value.splice(index, 1);  // 也删除对应的预览\r\n};\r\n\r\n\r\n\r\n//根据父组件传回的classifyname判断应该调用的接口类型（这个方法只是增加一个判断值）\r\nconst showData = async () => {\r\n  if(props.ClassifyName === \"文章专栏\"){\r\n    await getColumnArticleList(props.Id);\r\n  }else if(props.ClassifyName === \"分享专栏\"){\r\n    await getColumnShareList(props.Id);\r\n  }else if(props.ClassifyName === \"文章收藏\"){\r\n    await getFavoriteArticleList(props.Id);\r\n  }else if(props.ClassifyName === \"分享收藏\"){\r\n    await getFavoriteShareList(props.Id);\r\n  }\r\n}\r\n\r\n\r\n//根据父组件传回的classifyname判断应该调用的接口类型（这个方法只是增加一个判断值）\r\nconst submitData = () => {\r\n  if(props.ClassifyName === \"文章专栏\"){\r\n    setColumnList();\r\n    if(selectedImages.value) setColumnPitcure(props.Id);\r\n    localDialogVisible2.value  = false;\r\n  }else if(props.ClassifyName === \"分享专栏\"){\r\n    setColumnList();\r\n    if(selectedImages.value) setColumnPitcure(props.Id);\r\n    localDialogVisible2.value  = false;\r\n  }else if(props.ClassifyName === \"文章收藏\"){\r\n    setFavoriteList();\r\n    if(selectedImages.value) setFavoritePitcure(props.Id);\r\n    localDialogVisible2.value  = false;\r\n  }else if(props.ClassifyName === \"分享收藏\"){\r\n    setFavoriteList();\r\n    if(selectedImages.value) setFavoritePitcure(props.Id);\r\n    localDialogVisible2.value = false\r\n  }\r\n}\r\n\r\n\r\n//修改专栏图片\r\nasync function setColumnPitcure(ID) {\r\n  try {\r\n    await getColumnPermission( selectedImages.value[0],fileName.value,ID);\r\n  } catch (error) {\r\n      console.error(\"修改专栏图片接口失败\", error); \r\n      ElMessage.error('修改专栏图片接口失败');\r\n  }\r\n}\r\n//修改收藏图片\r\nasync function setFavoritePitcure(ID) {\r\n  try {\r\n    await getFavoritePermission( selectedImages.value[0],fileName.value,ID);\r\n  } catch (error) {\r\n      console.error(\"修改收藏图片接口失败\", error); \r\n      ElMessage.error('修改收藏图片接口失败');\r\n  }\r\n}\r\n\r\n//获取文章专栏\r\nasync function getColumnArticleList(ID) {\r\n    try {\r\n        const response = await axios.get('/column', {\r\n            params: {\r\n                type:0,\r\n                page:1,\r\n                pazeSize:100,\r\n                userId:Number(userId),\r\n            }\r\n          });\r\n        if(response.data.code === 1){\r\n            const filteredData = response.data.data.records.filter(item => item.id === ID);\r\n            if (filteredData.length > 0) {\r\n                listData.value = filteredData[0];  \r\n                previousImageUrl.value = await getColumnPictureFromCOS(listData.value.id);\r\n                checked.value = listData.value.visibility;\r\n            } else {\r\n                console.error(\"未找到该专栏\");\r\n                ElMessage.error(\"未找到该专栏\");\r\n            }\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error(\"获取文章专栏列表数据失败\");\r\n            ElMessage.error(\"获取文章专栏列表数据失败\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"请求文章专栏接口失败\", error);\r\n        ElMessage.error(\"请求文章专栏接口失败\");\r\n    }\r\n}\r\n\r\n\r\n//获取分享专栏\r\nasync function getColumnShareList(ID) {\r\n  try {\r\n    const response = await axios.get('/column', {\r\n        params: {\r\n            type:1,\r\n            page:1,\r\n            pazeSize:100,\r\n            userId:Number(userId),\r\n          }\r\n      });\r\n    if(response.data.code === 1){\r\n        const filteredData = response.data.data.records.filter(item => item.id === ID);\r\n        if (filteredData.length > 0) {\r\n          listData.value = filteredData[0]; \r\n          previousImageUrl.value = await getColumnPictureFromCOS(listData.value.id);\r\n          checked.value = listData.value.visibility;\r\n        } else {\r\n          console.error(\"未找到该专栏\");\r\n          ElMessage.error(\"未找到该专栏\");\r\n        }\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n    console.error(\"获取分享专栏数据失败\");\r\n    ElMessage.error(\"获取分享专栏数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"请求分享专栏接口失败\", error); \r\n    ElMessage.error(\"请求分享专栏接口失败\");\r\n  }\r\n}\r\n \r\n//获取文章收藏列表\r\nasync function getFavoriteArticleList(ID) {\r\n  try {\r\n    const response = await axios.get('/favorite',{ \r\n      params: { \r\n        type:0,\r\n        page:1,\r\n        pazeSize:100,\r\n        userId:Number(userId),\r\n      } \r\n    });\r\n    if(response.data.code === 1){\r\n        const filteredData = response.data.data.records.filter(item => item.id === ID);\r\n        if (filteredData.length > 0) {\r\n          listData.value = filteredData[0]; \r\n          previousImageUrl.value = await fetchFavoriteCoverage(listData.value.id);\r\n          checked.value = listData.value.visibility;\r\n        } else {\r\n          console.error(\"未找到该专栏\");\r\n          ElMessage.error(\"未找到该专栏\");\r\n        }\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n    console.error(\"获取文章收藏数据失败\");\r\n    ElMessage.error(\"获取文章收藏数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"请求文章收藏接口失败\", error);\r\n    ElMessage.error(\"请求文章收藏接口失败\");\r\n  }\r\n}\r\n\r\n//获取分享收藏列表\r\nasync function getFavoriteShareList(ID) {\r\n  try {\r\n    const response = await axios.get('/favorite',{ \r\n      params: { \r\n        type:1,\r\n        page:1,\r\n        pazeSize:100,\r\n        userId:Number(userId),\r\n      } \r\n    });\r\n    if(response.data.code === 1){\r\n        const filteredData = response.data.data.records.filter(item => item.id === ID);\r\n        if (filteredData.length > 0) {\r\n          listData.value = filteredData[0]; \r\n          previousImageUrl.value = await fetchFavoriteCoverage(listData.value.id);\r\n          checked.value = listData.value.visibility;\r\n        } else {\r\n          console.error(\"未找到该专栏\");\r\n          ElMessage.error(\"未找到该专栏\");\r\n        }\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n    console.error(\"获取分享收藏数据失败\");\r\n    ElMessage.error(\"获取分享收藏数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"请求分享收藏接口失败\", error); \r\n    ElMessage.error(\"请求分享收藏接口失败\");\r\n  }\r\n}\r\n\r\n\r\n\r\n//修改专栏信息\r\nasync function setColumnList() {\r\n  try {\r\n    const data = {\r\n      id: props.Id,\r\n      name:text1.value,\r\n      profile:textarea1.value,\r\n      visibility:visibility.value,\r\n    };\r\n    const response = await axios.put('/column',data)\r\n    if(response.data.code === 1){\r\n        ElMessage.success('修改成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n    console.error(\"修改专栏数据失败\");\r\n    ElMessage.error(\"修改专栏数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"修改专栏接口失败\", error); \r\n    ElMessage.error(\"修改专栏数据失败\");\r\n  }\r\n}\r\n\r\n//修改收藏信息\r\nasync function setFavoriteList() {\r\n  try {\r\n    const data = {\r\n      id: props.Id,\r\n      name:text1.value,\r\n      profile:textarea1.value,\r\n      visibility:visibility.value,\r\n    };\r\n    const response = await axios.put('/favorite',data)\r\n    if(response.data.code === 1){\r\n        ElMessage.success('修改成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n    console.error(\"修改收藏数据失败\");\r\n    ElMessage.error(\"修改收藏数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"修改收藏接口失败\", error); \r\n    ElMessage.error(\"修改收藏接口失败\");\r\n  }\r\n}\r\n\r\n\r\n\r\nonMounted(() => {\r\n    showData();\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n}\r\n.coverage{\r\n    display: flex;\r\n    gap: 20px;\r\n    width: 100%;\r\n    height: 180px;\r\n}\r\n.pictext {\r\n    display: block;\r\n    width: 45px;\r\n}\r\n.beforepic,\r\n.afterpic {\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: flex-end;\r\n}\r\n.picshow {\r\n    width: 180px;\r\n    height: 180px;\r\n    border: 1px dashed #bbbbbb;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    position: relative;\r\n}\r\n.spic{\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    width: 180px;\r\n    height: 180px;\r\n}\r\n.pic_contain{\r\n  position: relative;\r\n}\r\ni.delete-btn {\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 8px;\r\n  cursor: pointer;\r\n}\r\n.ptitie {\r\n  height: 32px;\r\n  width: 92%;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  align-self: stretch;\r\n}\r\n::v-deep .el-dialog__body {\r\n  padding: 0px var(--el-dialog-padding-primary);\r\n}\r\n::v-deep .el-dialog__header{\r\n  padding-bottom: 20px;\r\n}\r\n::v-deep .el-dialog__footer {\r\n  padding: 0px;\r\n  position: absolute;\r\n  right: 15px;\r\n  bottom: 10px;\r\n}\r\n::v-deep .el-input ,\r\n::v-deep .el-textarea{\r\n  width: 90%;\r\n}\r\n/* 三个输入框边框样式 */\r\n::v-deep .el-input__wrapper,\r\n::v-deep .el-textarea__inner{\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n::v-deep .el-input__wrapper{\r\n  height: 40px;\r\n}  \r\n::v-deep .el-textarea__inner{\r\n  height: 130px;\r\n}  \r\n/* 三个输入框获得焦点时的边框样式 */\r\n::v-deep .el-input__wrapper.is-focus,\r\n::v-deep .el-textarea__inner:focus{\r\n  box-shadow: 0 2px 6px #cfd7e2;\r\n  border: 1px solid #d7d7d7;\r\n}\r\n.input_el textarea {\r\n  overflow: hidden;\r\n}\r\n.mainp{\r\n  width: 92%;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 20px;\r\n  align-self: stretch;\r\n}\r\n.dialog-footer button:first-child {\r\n  margin-right: 10px;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}