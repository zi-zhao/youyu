{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from '../../../../utils/request';\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\nimport { convertDateFormat } from '../../../../utils/timeFormat';\nimport CreportedDialog from '@/page/components/CreportedDialog.vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'ShareComment',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const currentPage = ref(1);\n    const activeTab = ref('near');\n    const isChecked = ref(false); //判断某条评论是否被选中\n    const flag = ref(0);\n    const workId = ref();\n    const type = ref(0);\n    const shareCommentGroups = ref([]);\n    const dialogVisible = ref(false); //控制评论举报弹框是否显示\n\n    const tabValueMapping = {\n      'near': 0,\n      'like': 1,\n      'reply': 2\n    };\n    //选择评论排序方式，在map中匹配对应的值\n    const handleTapageClick = tabName => {\n      if (tabValueMapping[tabName] !== undefined) {\n        flag.value = tabValueMapping[tabName];\n        getShareComment(flag.value);\n      }\n    };\n\n    //当全部选择时候，统一改变所有分享评论的选中状态（无视对某条评论的单选状态）\n    const handleAllSelected = () => {\n      shareCommentGroups.value.forEach(item => {\n        item.isSelected = isChecked.value;\n      });\n    };\n\n    //向举报弹窗赋值的函数\n    const commentReport = (id, typeNum) => {\n      workId.value = id;\n      type.value = typeNum;\n      dialogVisible.value = true;\n    };\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getShareComment(flag.value, currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n\n    //获取对自己分享的评论列表\n    async function getShareComment(flag, currentPage) {\n      if (currentPage === 1) {\n        shareCommentGroups.value = [];\n      }\n      try {\n        let params = {\n          pageSize: 10,\n          currentPage: currentPage,\n          flag: flag,\n          type: 1\n        };\n        const response = await axios.get('/comment/list/receive', {\n          params: params\n        });\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\n          const commentUpdates = response.data.data.records.map(async record => {\n            const coverPicturePromise = getUsersAvatarFromCOS(record.userId);\n            const formattedDate = convertDateFormat(record.createTime);\n            const verified = await fetchUserInformation(record.userId);\n            const coverPicture = await coverPicturePromise;\n            return {\n              ...record,\n              verified: verified,\n              coverPicture: coverPicture,\n              createTime: formattedDate,\n              isSelected: isChecked.value\n            };\n          });\n          const updatedComments = await Promise.all(commentUpdates);\n          shareCommentGroups.value = [...shareCommentGroups.value, ...updatedComments];\n          console.log(response.data);\n          // ElMessage.success('获取分享评论成功');\n        } else if (response.data.code === 1 && response.data.data.records.length === 0) {\n          ElMessage.info('已加载所有数据');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取分享评论数据失败\");\n        }\n      } catch (error) {\n        console.error(\"请求分享评论接口失败\", error);\n      }\n    }\n\n    // 获取用户信息\n    const fetchUserInformation = async userId => {\n      try {\n        const response = await axios.get(`/users/${userId}`);\n        if (response.data.code === 1) {\n          return response.data.data.verified;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取用户信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户信息失败\", error);\n        ElMessage.error('获取用户信息失败');\n      }\n    };\n    onMounted(() => {\n      getShareComment(flag.value, currentPage.value);\n    });\n    const __returned__ = {\n      currentPage,\n      activeTab,\n      isChecked,\n      flag,\n      workId,\n      type,\n      shareCommentGroups,\n      dialogVisible,\n      tabValueMapping,\n      handleTapageClick,\n      handleAllSelected,\n      commentReport,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getShareComment,\n      fetchUserInformation,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get getUsersAvatarFromCOS() {\n        return getUsersAvatarFromCOS;\n      },\n      get convertDateFormat() {\n        return convertDateFormat;\n      },\n      CreportedDialog,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","getUsersAvatarFromCOS","convertDateFormat","CreportedDialog","ElMessage","currentPage","activeTab","isChecked","flag","workId","type","shareCommentGroups","dialogVisible","tabValueMapping","handleTapageClick","tabName","undefined","value","getShareComment","handleAllSelected","forEach","item","isSelected","commentReport","id","typeNum","isLoading","load","error","console","params","pageSize","response","get","data","code","records","length","commentUpdates","map","record","coverPicturePromise","userId","formattedDate","createTime","verified","fetchUserInformation","coverPicture","updatedComments","Promise","all","log","info","msg","toString"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/CreateCenter/components/CommentManagement/ShareComment.vue"],"sourcesContent":["<template>\r\n    <div class=\"filter\">\r\n        <!-- 后端实现这个筛选稍有困难，故暂时删去这个分类 -->\r\n        <!-- <el-select v-model=\"selectedCategory\" placeholder=\"全部文章\" @change=\"handleTextChange\">\r\n            <el-option-group>\r\n                <el-option v-for=\"option in options\" :key=\"option.value\" :label=\"option.label\"></el-option>\r\n            </el-option-group>\r\n        </el-select> -->\r\n\r\n        <!-- <el-tabs v-model=\"activeTab\" @tab-change=\"handleTapageClick\">\r\n            <el-tab-pane label=\"最近发布\" name=\"near\"></el-tab-pane>\r\n            <el-tab-pane label=\"点赞最多\" name =\"like\"></el-tab-pane>\r\n            <el-tab-pane label=\"回复最多\" name =\"reply\"></el-tab-pane>\r\n        </el-tabs> -->\r\n    </div>\r\n    <!-- <el-checkbox @change=\"handleAllSelected\" v-model=\"isChecked\" label=\"全选\" style=\"padding-right: 2rem;\" /> -->\r\n    <!-- <el-link type=\"danger\"  @click=\"dialogVisible = true\" >举报</el-link> -->\r\n\r\n    <div class=\"content-container\"  v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n        <div class=\"content-box underline\" v-for=\"item in shareCommentGroups\" :key=\"item.id\">\r\n            <div class=\"left-content\">\r\n                <!-- <el-checkbox  v-model=\"item.isSelected\"></el-checkbox> -->\r\n                <div class=\"detail-content\">\r\n                    <div style=\"display: flex;gap: 0.8rem;align-items: center;\">\r\n                        <img :src=\"item.coverPicture\" alt=\"\" class=\"image\">\r\n                        <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                            <div>{{ item.username }}</div>\r\n                            <img v-if=\"item.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n                        </div>\r\n                    </div>\r\n                    <div style=\"margin-left: calc(36px + 0.5rem);\">{{ item.content }}</div>\r\n                    <div style=\"margin-left: calc(36px + 0.5rem);\">\r\n                        <span style=\"font-size: 14px;\">{{ item.createTime }}</span>\r\n                        <div style=\"display: flex;align-items: center;gap: 3px;font-size: 14px;\">\r\n                            <img src=\"@/assets/LikeBefore.svg\" alt=\"\">\r\n                            <span class=\"icon-text\">{{ item.likeCount }}</span>\r\n                        </div>\r\n                        <div style=\"display: flex;align-items: center;gap: 3px;font-size: 14px;\">\r\n                            <img src=\"@/assets/Comment.svg\" alt=\"\">\r\n                            <span class=\"icon-text\">{{ item.replyCount }}</span>\r\n                        </div>\r\n                        <span style=\"font-size: 14px;\">回复</span>\r\n                        <el-link type=\"danger\"  @click=\"commentReport(item.id,0)\" >举报</el-link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"right-content\">{{ item.articleTitle }}</div>\r\n        </div>\r\n        <el-empty \r\n            v-if=\"!shareCommentGroups || shareCommentGroups.length === 0 \" \r\n            :image-size=\"200\" \r\n            description=\"您的分享还暂时没有评论呢，请耐心等待呀！\"\r\n        />\r\n     </div>   \r\n     <div v-if=\"dialogVisible\">\r\n        <CreportedDialog v-model=\"dialogVisible\" :id=\"workId\" :type=\"type\" ></CreportedDialog>\r\n    </div> \r\n</template>\r\n\r\n<script setup>\r\nimport { ref,onMounted } from 'vue'\r\nimport axios from '../../../../utils/request';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport { convertDateFormat } from '../../../../utils/timeFormat'; \r\nimport CreportedDialog from '@/page/components/CreportedDialog.vue';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nconst currentPage = ref(1);\r\nconst activeTab = ref('near');\r\nconst isChecked = ref(false); //判断某条评论是否被选中\r\nconst flag = ref(0);\r\nconst workId = ref();\r\nconst type = ref(0);\r\nconst shareCommentGroups = ref([]);\r\nconst dialogVisible = ref(false);//控制评论举报弹框是否显示\r\n\r\nconst tabValueMapping = {\r\n    'near': 0,\r\n    'like': 1,\r\n    'reply': 2\r\n};\r\n//选择评论排序方式，在map中匹配对应的值\r\nconst handleTapageClick = (tabName) => {\r\n    if (tabValueMapping[tabName] !== undefined) {\r\n        flag.value = tabValueMapping[tabName];\r\n        getShareComment(flag.value);\r\n    }\r\n};\r\n\r\n//当全部选择时候，统一改变所有分享评论的选中状态（无视对某条评论的单选状态）\r\nconst handleAllSelected = () => {\r\n  shareCommentGroups.value.forEach(item => {\r\n    item.isSelected = isChecked.value;\r\n  });\r\n};\r\n\r\n//向举报弹窗赋值的函数\r\nconst commentReport = (id,typeNum) =>{\r\n    workId.value = id;\r\n    type.value = typeNum;\r\n    dialogVisible.value = true;\r\n}\r\n\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n        if(currentPage.value === 1){\r\n            currentPage.value++;\r\n        }\r\n        await getShareComment( flag.value,currentPage.value );\r\n        currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n//获取对自己分享的评论列表\r\nasync function getShareComment( flag ,currentPage) {\r\n    if(currentPage === 1){\r\n        shareCommentGroups.value =[];\r\n    }\r\n    try {\r\n        let params = {\r\n            pageSize:10,\r\n            currentPage:currentPage,\r\n            flag:flag,\r\n            type:1\r\n        };\r\n        const response = await axios.get('/comment/list/receive',{ params: params });\r\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n            const commentUpdates = response.data.data.records.map(async (record) => {\r\n                const coverPicturePromise = getUsersAvatarFromCOS(record.userId);\r\n                const formattedDate = convertDateFormat(record.createTime);\r\n                const verified = await fetchUserInformation(record.userId);\r\n                const coverPicture = await coverPicturePromise;\r\n                return {\r\n                    ...record,\r\n                    verified:verified,\r\n                    coverPicture: coverPicture,\r\n                    createTime: formattedDate,\r\n                    isSelected: isChecked.value  \r\n                };\r\n            });\r\n            const updatedComments = await Promise.all(commentUpdates);\r\n            shareCommentGroups.value = [...shareCommentGroups.value, ...updatedComments];\r\n            console.log(response.data); \r\n            // ElMessage.success('获取分享评论成功');\r\n        }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n        ElMessage.info('已加载所有数据');\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error(\"获取分享评论数据失败\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"请求分享评论接口失败\", error);\r\n    }\r\n}\r\n\r\n// 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\n\r\nonMounted(() => {\r\n    getShareComment( flag.value,currentPage.value );\r\n})\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.filter {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    /* margin-top: 2rem; */\r\n}\r\n\r\n.content-box {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 1rem 0;\r\n}\r\n\r\n.left-content {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    min-height: 7rem;\r\n}\r\n.icon-text{\r\n    color:#2d2d2d;\r\n}\r\n\r\n.detail-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    gap: 1rem;\r\n    margin: 0.8rem 1rem;\r\n}\r\n\r\n.detail-content div:first-child {\r\n    color: #9B9B9B;\r\n}\r\n\r\n.detail-content div:nth-child(3) {\r\n    display: flex;\r\n    align-items: center;\r\n    color: #9B9B9B;\r\n    gap: 4rem;\r\n}\r\n\r\n.image {\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 36px;\r\n    margin-top: 0.6rem;\r\n}\r\n\r\n.underline {\r\n  border-bottom: 1px solid #ccc;\r\n}\r\n\r\n::v-deep .el-tabs__nav-wrap::after {\r\n    height: 0px;\r\n}</style>"],"mappings":"AA4DA,SAASA,GAAG,EAACC,SAAS,QAAQ,KAAK;AACnC,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,SAASC,qBAAqB,QAAQ,oBAAoB;AAC1D,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,OAAOC,eAAe,MAAM,uCAAuC;AACnE,SAASC,SAAS,QAAQ,cAAc;;;;;;;IAExC,MAAMC,WAAW,GAAGP,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMQ,SAAS,GAAGR,GAAG,CAAC,MAAM,CAAC;IAC7B,MAAMS,SAAS,GAAGT,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMU,IAAI,GAAGV,GAAG,CAAC,CAAC,CAAC;IACnB,MAAMW,MAAM,GAAGX,GAAG,CAAC,CAAC;IACpB,MAAMY,IAAI,GAAGZ,GAAG,CAAC,CAAC,CAAC;IACnB,MAAMa,kBAAkB,GAAGb,GAAG,CAAC,EAAE,CAAC;IAClC,MAAMc,aAAa,GAAGd,GAAG,CAAC,KAAK,CAAC,CAAC;;IAEjC,MAAMe,eAAe,GAAG;MACpB,MAAM,EAAE,CAAC;MACT,MAAM,EAAE,CAAC;MACT,OAAO,EAAE;IACb,CAAC;IACD;IACA,MAAMC,iBAAiB,GAAIC,OAAO,IAAK;MACnC,IAAIF,eAAe,CAACE,OAAO,CAAC,KAAKC,SAAS,EAAE;QACxCR,IAAI,CAACS,KAAK,GAAGJ,eAAe,CAACE,OAAO,CAAC;QACrCG,eAAe,CAACV,IAAI,CAACS,KAAK,CAAC;MAC/B;IACJ,CAAC;;IAED;IACA,MAAME,iBAAiB,GAAGA,CAAA,KAAM;MAC9BR,kBAAkB,CAACM,KAAK,CAACG,OAAO,CAACC,IAAI,IAAI;QACvCA,IAAI,CAACC,UAAU,GAAGf,SAAS,CAACU,KAAK;MACnC,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,MAAMM,aAAa,GAAGA,CAACC,EAAE,EAACC,OAAO,KAAI;MACjChB,MAAM,CAACQ,KAAK,GAAGO,EAAE;MACjBd,IAAI,CAACO,KAAK,GAAGQ,OAAO;MACpBb,aAAa,CAACK,KAAK,GAAG,IAAI;IAC9B,CAAC;;IAGD;IACA,IAAIS,SAAS,GAAG,KAAK;IACrB,eAAeC,IAAIA,CAAA,EAAG;MAClB,IAAID,SAAS,EAAE,OAAO,CAAC;MACvBA,SAAS,GAAG,IAAI,CAAC,CAAC;MAClB,IAAI;QACA,IAAGrB,WAAW,CAACY,KAAK,KAAK,CAAC,EAAC;UACvBZ,WAAW,CAACY,KAAK,EAAE;QACvB;QACA,MAAMC,eAAe,CAAEV,IAAI,CAACS,KAAK,EAACZ,WAAW,CAACY,KAAM,CAAC;QACrDZ,WAAW,CAACY,KAAK,EAAE,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOW,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBxB,SAAS,CAACwB,KAAK,CAAC,UAAU,CAAC;MAC/B,CAAC,SAAS;QACNF,SAAS,GAAG,KAAK,CAAC,CAAC;MACvB;IACJ;;IAEA;IACA,eAAeR,eAAeA,CAAEV,IAAI,EAAEH,WAAW,EAAE;MAC/C,IAAGA,WAAW,KAAK,CAAC,EAAC;QACjBM,kBAAkB,CAACM,KAAK,GAAE,EAAE;MAChC;MACA,IAAI;QACA,IAAIa,MAAM,GAAG;UACTC,QAAQ,EAAC,EAAE;UACX1B,WAAW,EAACA,WAAW;UACvBG,IAAI,EAACA,IAAI;UACTE,IAAI,EAAC;QACT,CAAC;QACD,MAAMsB,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAG,CAAC,uBAAuB,EAAC;UAAEH,MAAM,EAAEA;QAAO,CAAC,CAAC;QAC5E,IAAIE,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIH,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;UACnE,MAAMC,cAAc,GAAGN,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACE,OAAO,CAACG,GAAG,CAAC,MAAOC,MAAM,IAAK;YACpE,MAAMC,mBAAmB,GAAGxC,qBAAqB,CAACuC,MAAM,CAACE,MAAM,CAAC;YAChE,MAAMC,aAAa,GAAGzC,iBAAiB,CAACsC,MAAM,CAACI,UAAU,CAAC;YAC1D,MAAMC,QAAQ,GAAG,MAAMC,oBAAoB,CAACN,MAAM,CAACE,MAAM,CAAC;YAC1D,MAAMK,YAAY,GAAG,MAAMN,mBAAmB;YAC9C,OAAO;cACH,GAAGD,MAAM;cACTK,QAAQ,EAACA,QAAQ;cACjBE,YAAY,EAAEA,YAAY;cAC1BH,UAAU,EAAED,aAAa;cACzBrB,UAAU,EAAEf,SAAS,CAACU;YAC1B,CAAC;UACL,CAAC,CAAC;UACF,MAAM+B,eAAe,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACZ,cAAc,CAAC;UACzD3B,kBAAkB,CAACM,KAAK,GAAG,CAAC,GAAGN,kBAAkB,CAACM,KAAK,EAAE,GAAG+B,eAAe,CAAC;UAC5EnB,OAAO,CAACsB,GAAG,CAACnB,QAAQ,CAACE,IAAI,CAAC;UAC1B;QACJ,CAAC,MAAK,IAAIF,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIH,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACE,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;UAC/EjC,SAAS,CAACgD,IAAI,CAAC,SAAS,CAAC;QACzB,CAAC,MAAK,IAAGpB,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIH,QAAQ,CAACE,IAAI,CAACmB,GAAG,EAAC;UACnDjD,SAAS,CAACwB,KAAK,CAACI,QAAQ,CAACE,IAAI,CAACmB,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC;QACjD,CAAC,MAAK;UACFzB,OAAO,CAACD,KAAK,CAAC,YAAY,CAAC;QAC/B;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACtC;IACJ;;IAEA;IACA,MAAMkB,oBAAoB,GAAG,MAAOJ,MAAM,IAAK;MAC3C,IAAI;QACA,MAAMV,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAG,CAAE,UAASS,MAAO,EAAC,CAAC;QACpD,IAAGV,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,EAAC;UACxB,OAAQH,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACW,QAAQ;QACvC,CAAC,MAAK,IAAGb,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIH,QAAQ,CAACE,IAAI,CAACmB,GAAG,EAAC;UACnDjD,SAAS,CAACwB,KAAK,CAACI,QAAQ,CAACE,IAAI,CAACmB,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC;QACjD,CAAC,MAAI;UACDlD,SAAS,CAACwB,KAAK,CAAC,UAAU,CAAC;QAC/B;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;QAChCxB,SAAS,CAACwB,KAAK,CAAC,UAAU,CAAC;MAC/B;IACJ,CAAC;IAGD7B,SAAS,CAAC,MAAM;MACZmB,eAAe,CAAEV,IAAI,CAACS,KAAK,EAACZ,WAAW,CAACY,KAAM,CAAC;IACnD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}