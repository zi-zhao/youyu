{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-62a176fc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"cbutton\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"tatitle\"\n}, \"我的分享专栏\")], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"hh\",\n  \"infinite-scroll-distance\": \"100\",\n  \"infinite-scroll-immediate\": \"false\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\",\n    \"justify-content\": \"space-between\",\n    \"height\": \"100%\"\n  }\n};\nconst _hoisted_4 = {\n  class: \"title\"\n};\nconst _hoisted_5 = {\n  class: \"content multi-line-ellipsis-2\"\n};\nconst _hoisted_6 = {\n  class: \"more\"\n};\nconst _hoisted_7 = {\n  class: \"time\"\n};\nconst _hoisted_8 = {\n  class: \"time\"\n};\nconst _hoisted_9 = {\n  class: \"time\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _directive_infinite_scroll = _resolveDirective(\"infinite-scroll\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.shareColumnData, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"show\",\n      key: item.id\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_5, _toDisplayString(item.profile), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, \"创建时间\" + _toDisplayString(item.createTime), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_8, \"分享数量 \" + _toDisplayString(item.number), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, \"获赞数 \" + _toDisplayString(item.likeCount), 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: \"text\",\n      onClick: $event => $setup.setActive(item)\n    }, \"进入专栏夹\", 8 /* PROPS */, _hoisted_10)])]), _createElementVNode(\"img\", {\n      src: item.coverPicture,\n      alt: \"\",\n      class: \"carepic\"\n    }, null, 8 /* PROPS */, _hoisted_11)]);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.shareColumnData.length === 0 || !$setup.shareColumnData ? (_openBlock(), _createBlock(_component_el_empty, {\n    key: 0,\n    \"image-size\": 200,\n    description: \"您还没有分享专栏呢，快去创作吧！\"\n  })) : _createCommentVNode(\"v-if\", true)])), [[_directive_infinite_scroll, $setup.load]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","style","_hoisted_1","_createElementBlock","_hoisted_2","_Fragment","_renderList","$setup","shareColumnData","item","key","id","_hoisted_3","_hoisted_4","_toDisplayString","name","_hoisted_5","profile","_hoisted_6","_hoisted_7","createTime","_hoisted_8","number","_hoisted_9","likeCount","onClick","$event","setActive","_hoisted_10","src","coverPicture","alt","length","_createBlock","_component_el_empty","description","load"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\Personalpage\\shareColumn\\ColumnListS.vue"],"sourcesContent":["<template>\r\n    <div class=\"cbutton\">\r\n        <span class=\"tatitle\">我的分享专栏</span>\r\n    </div>\r\n    <div class=\"hh\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n        <div class=\"show\" v-for=\"item in shareColumnData\" :key=\"item.id\" >\r\n            <div style=\"display: flex;flex-direction: column;justify-content: space-between;height: 100%;\">\r\n                <span class=\"title\">{{ item.name }}</span>\r\n                <span class=\"content multi-line-ellipsis-2 \">{{ item.profile }}</span>\r\n                <div class=\"more\">\r\n                    <span class=\"time\">创建时间{{ item.createTime }}</span>\r\n                    <span class=\"time\">分享数量 {{ item.number }}</span>\r\n                    <span class=\"time\">获赞数 {{ item.likeCount }}</span>\r\n                    <span class=\"text\" @click=\"setActive(item)\">进入专栏夹</span>\r\n                </div>\r\n            </div>\r\n            <img :src=\"item.coverPicture\" alt=\"\" class=\"carepic\">       \r\n        </div>\r\n        <el-empty \r\n            v-if=\"shareColumnData.length === 0 || !shareColumnData\" \r\n            :image-size=\"200\" \r\n            description=\"您还没有分享专栏呢，快去创作吧！\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { ref, onMounted,defineEmits } from 'vue';\r\n    import axios from '../../../utils/request';\r\n    import { getColumnPictureFromCOS } from '@/utils/cosService';\r\n    import { ElMessage } from 'element-plus';\r\n\r\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\n    const currentPage = ref(1);\r\n    const emits = defineEmits(['dataFromChild']);\r\n    const setActive = (item) => {\r\n        const name = '分享专栏';\r\n        const id = item.id;\r\n        emits('dataFromChild', name,id);\r\n    }\r\n    const shareColumnData = ref([]);\r\n\r\n    // 添加一个锁状态\r\n    let isLoading = false;\r\n    async function load() {\r\n        if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n        isLoading = true; // 开始加载数据，设置锁状态为true\r\n        try {\r\n            if(currentPage.value === 1){\r\n                currentPage.value++;\r\n            }\r\n            await getColumnShareList(currentPage.value);\r\n            currentPage.value++; // 只有在请求成功完成后才递增页码\r\n        } catch (error) {\r\n            console.error(error);\r\n            ElMessage.error('滚动时的未知错误');\r\n        } finally {\r\n            isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n        }\r\n    }\r\n\r\n    async function getColumnShareList(currentPage) {\r\n        try {\r\n            const response = await axios.get('/column',{\r\n                params: {\r\n                    type:1,\r\n                    page:currentPage,\r\n                    pageSize:10,\r\n                    userId:Number(userId),\r\n                }\r\n            });\r\n            if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n                const updates = response.data.data.records.map(async(column) => {\r\n                    return getColumnPictureFromCOS(column.id).then(coverPicture => {\r\n                    return { ...column, coverPicture };\r\n                    });\r\n                });\r\n                const updatedColumns = await Promise.all(updates);\r\n                shareColumnData.value = [...shareColumnData.value, ...updatedColumns];\r\n            }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n                // ElMessage.info('已加载所有数据');\r\n            }else if(response.data.code === 0 && response.data.msg){\r\n                ElMessage.error(response.data.msg.toString());\r\n            }else{\r\n                console.error(\"获取分享专栏数据失败\");\r\n                ElMessage.error(\"获取分享专栏数据失败\");\r\n            }\r\n        } catch (error) {\r\n            console.error('获取分享专栏数据失败', error);\r\n            ElMessage.error(\"获取分享专栏数据失败\");\r\n        }\r\n    }\r\n\r\n    onMounted(() => {\r\n        getColumnShareList(currentPage.value)\r\n    });\r\n\r\n</script>\r\n    \r\n<style scoped>\r\n.hh{\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 81vh;\r\n    width: 100%;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n}\r\n.cbutton{\r\n    border-bottom: 1px solid rgb(212, 212, 212);\r\n    padding: 9px 1%;\r\n    width: 98%;\r\n}\r\n.tatitle{\r\n    color: #000; \r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 23px;\r\n    line-height: 1.6; \r\n}\r\n.show{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 30px 30px;\r\n    gap: 16px;\r\n    border-radius: 4px;\r\n    background-color: #fffffc;\r\n    border-bottom: 1px solid rgb(240 240 240);\r\n}\r\n.title{\r\n    color: #000;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    line-height: 120%; \r\n}\r\n.content{\r\n    width: 600px;\r\n    margin: 15px 0px;\r\n    color: #646464;\r\n    line-height: 1.6;\r\n}\r\n.more{\r\n    display: flex;\r\n    gap: 40px;\r\n    margin-top: 15px;\r\n}\r\n.time{\r\n    color: #76849f;;\r\n    font-size: 14px;\r\n    line-height: 120%;\r\n}\r\n.text{\r\n    color: #2B6AE8;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    line-height: 120%; \r\n    cursor: pointer;\r\n}\r\n.carepic{\r\n    width: 170px;\r\n    height: 110px;\r\n    border-radius: 8px;\r\n}\r\n/* 调整滚动条宽度和颜色 */\r\n::-webkit-scrollbar {\r\n    width: 6px; /* 增加纵向滚动条的宽度 */\r\n    height: 8px; /* 增加横向滚动条的高度 */\r\n    background: transparent;\r\n}\r\n\r\n/* 定义滚动条轨道，设置为透明 */\r\n::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 8px rgba(0, 0, 0, 0); /* 内阴影 */\r\n    background: transparent; /* 将轨道背景设置为透明 */\r\n}\r\n\r\n/* 定义滑块，设置为浅灰色并增加内阴影 */\r\n::-webkit-scrollbar-thumb {\r\n    box-shadow: inset 0 0 8px rgba(145, 145, 145, 0.3); /* 添加淡灰色内阴影 */\r\n    background-color: #e2e2e2; /* 滑块的颜色改为浅灰色 */\r\n    border-radius: 10px; /* 保持圆角不变 */\r\n}\r\n/* 当鼠标悬停在滚动条滑块上时改变滑块的颜色 */\r\n::-webkit-scrollbar-thumb:hover {\r\n    background: #c8c8c8;\r\n}\r\n</style>"],"mappings":";;gEACIA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAS,I,aAChBD,mBAAA,CAAmC;EAA7BC,KAAK,EAAC;AAAS,GAAC,QAAM,E;;EAE3BA,KAAK,EAAC,IAAI;EAA0B,0BAAwB,EAAC,KAAK;EAAC,2BAAyB,EAAC;;;EAErFC,KAAyF,EAAzF;IAAA;IAAA;IAAA;IAAA;EAAA;AAAyF;;EACpFD,KAAK,EAAC;AAAO;;EACbA,KAAK,EAAC;AAAgC;;EACvCA,KAAK,EAAC;AAAM;;EACPA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAM;;;;;;6DAXlCE,UAEM,E,+BACNC,mBAAA,CAmBM,OAnBNC,UAmBM,I,kBAlBFD,mBAAA,CAYME,SAAA,QAAAC,WAAA,CAZ2BC,MAAA,CAAAC,eAAe,EAAvBC,IAAI;yBAA7BN,mBAAA,CAYM;MAZDH,KAAK,EAAC,MAAM;MAAkCU,GAAG,EAAED,IAAI,CAACE;QACzDZ,mBAAA,CASM,OATNa,UASM,GARFb,mBAAA,CAA0C,QAA1Cc,UAA0C,EAAAC,gBAAA,CAAnBL,IAAI,CAACM,IAAI,kBAChChB,mBAAA,CAAsE,QAAtEiB,UAAsE,EAAAF,gBAAA,CAAtBL,IAAI,CAACQ,OAAO,kBAC5DlB,mBAAA,CAKM,OALNmB,UAKM,GAJFnB,mBAAA,CAAmD,QAAnDoB,UAAmD,EAAhC,MAAI,GAAAL,gBAAA,CAAGL,IAAI,CAACW,UAAU,kBACzCrB,mBAAA,CAAgD,QAAhDsB,UAAgD,EAA7B,OAAK,GAAAP,gBAAA,CAAGL,IAAI,CAACa,MAAM,kBACtCvB,mBAAA,CAAkD,QAAlDwB,UAAkD,EAA/B,MAAI,GAAAT,gBAAA,CAAGL,IAAI,CAACe,SAAS,kBACxCzB,mBAAA,CAAwD;MAAlDC,KAAK,EAAC,MAAM;MAAEyB,OAAK,EAAAC,MAAA,IAAEnB,MAAA,CAAAoB,SAAS,CAAClB,IAAI;OAAG,OAAK,iBAAAmB,WAAA,E,KAGzD7B,mBAAA,CAAqD;MAA/C8B,GAAG,EAAEpB,IAAI,CAACqB,YAAY;MAAEC,GAAG,EAAC,EAAE;MAAC/B,KAAK,EAAC;;kCAGrCO,MAAA,CAAAC,eAAe,CAACwB,MAAM,WAAWzB,MAAA,CAAAC,eAAe,I,cAD1DyB,YAAA,CAIEC,mBAAA;;IAFG,YAAU,EAAE,GAAG;IAChBC,WAAW,EAAC;4EAjBe5B,MAAA,CAAA6B,IAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}