{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = math_plugin;\n\n// Modified from https://github.com/waylonflinn/markdown-it-katex/blob/master/index.js\n\n/* eslint-disable */\nfunction isValidDelim(state, pos) {\n  var prevChar;\n  var nextChar;\n  var max = state.posMax;\n  var can_open = true;\n  var can_close = true;\n  prevChar = pos > 0 ? state.src.charCodeAt(pos - 1) : -1;\n  nextChar = pos + 1 <= max ? state.src.charCodeAt(pos + 1) : -1;\n  if (prevChar === 0x20\n  /* \" \" */ || prevChar === 0x09\n  /* \\t */ || nextChar >= 0x30\n  /* \"0\" */ && nextChar <= 0x39\n  /* \"9\" */) {\n    can_close = false;\n  }\n  if (nextChar === 0x20\n  /* \" \" */ || nextChar === 0x09\n  /* \\t */) {\n    can_open = false;\n  }\n  return {\n    can_open: can_open,\n    can_close: can_close\n  };\n}\nfunction math_inline(state, silent) {\n  var start;\n  var match;\n  var token;\n  var res;\n  var pos;\n  var esc_count;\n  if (state.src[state.pos] !== '$') {\n    return false;\n  }\n  res = isValidDelim(state, state.pos);\n  if (!res.can_open) {\n    if (!silent) {\n      state.pending += '$';\n    }\n    state.pos += 1;\n    return true;\n  }\n  start = state.pos + 1;\n  match = start;\n  while ((match = state.src.indexOf('$', match)) !== -1) {\n    pos = match - 1;\n    while (state.src[pos] === '\\\\') {\n      pos -= 1;\n    }\n    if ((match - pos) % 2 == 1) {\n      break;\n    }\n    match += 1;\n  }\n  if (match === -1) {\n    if (!silent) {\n      state.pending += '$';\n    }\n    state.pos = start;\n    return true;\n  }\n  if (match - start === 0) {\n    if (!silent) {\n      state.pending += '$$';\n    }\n    state.pos = start + 1;\n    return true;\n  }\n  res = isValidDelim(state, match);\n  if (!res.can_close) {\n    if (!silent) {\n      state.pending += '$';\n    }\n    state.pos = start;\n    return true;\n  }\n  if (!silent) {\n    token = state.push('math_inline', 'math', 0);\n    token.markup = '$';\n    token.content = state.src.slice(start, match);\n  }\n  state.pos = match + 1;\n  return true;\n}\nfunction math_block(state, start, end, silent) {\n  var firstLine;\n  var lastLine;\n  var next;\n  var lastPos;\n  var found = false;\n  var token;\n  var pos = state.bMarks[start] + state.tShift[start];\n  var max = state.eMarks[start];\n  if (pos + 2 > max) {\n    return false;\n  }\n  if (state.src.slice(pos, pos + 2) !== '$$') {\n    return false;\n  }\n  pos += 2;\n  firstLine = state.src.slice(pos, max);\n  if (silent) {\n    return true;\n  }\n  if (firstLine.trim().slice(-2) === '$$') {\n    firstLine = firstLine.trim().slice(0, -2);\n    found = true;\n  }\n  for (next = start; !found;) {\n    next++;\n    if (next >= end) {\n      break;\n    }\n    pos = state.bMarks[next] + state.tShift[next];\n    max = state.eMarks[next];\n    if (pos < max && state.tShift[next] < state.blkIndent) {\n      break;\n    }\n    if (state.src.slice(pos, max).trim().slice(-2) === '$$') {\n      lastPos = state.src.slice(0, max).lastIndexOf('$$');\n      lastLine = state.src.slice(pos, lastPos);\n      found = true;\n    }\n  }\n  state.line = next + 1;\n  token = state.push('math_block', 'math', 0);\n  token.block = true;\n  token.content = (firstLine && firstLine.trim() ? firstLine + '\\n' : '') + state.getLines(start + 1, next, state.tShift[start], true) + (lastLine && lastLine.trim() ? lastLine : '');\n  token.map = [start, state.line];\n  token.markup = '$$';\n  return true;\n}\nfunction math_plugin(md, options) {\n  options = options || {};\n  var _options = options,\n    katex = _options.katex;\n  var katexInline = function katexInline(latex) {\n    options.displayMode = false;\n    try {\n      return katex.renderToString(latex, options);\n    } catch (error) {\n      if (options.throwOnError) {\n        console.log(error);\n      }\n      return latex;\n    }\n  };\n  var inlineRenderer = function inlineRenderer(tokens, idx) {\n    return katexInline(tokens[idx].content);\n  };\n  var katexBlock = function katexBlock(latex) {\n    options.displayMode = true;\n    try {\n      return '<p>' + katex.renderToString(latex, options) + '</p>';\n    } catch (error) {\n      if (options.throwOnError) {\n        console.log(error);\n      }\n      return latex;\n    }\n  };\n  var blockRenderer = function blockRenderer(tokens, idx) {\n    return katexBlock(tokens[idx].content) + '\\n';\n  };\n  md.inline.ruler.after('escape', 'math_inline', math_inline);\n  md.block.ruler.after('blockquote', 'math_block', math_block, {\n    alt: ['paragraph', 'reference', 'blockquote', 'list']\n  });\n  md.renderer.rules.math_inline = inlineRenderer;\n  md.renderer.rules.math_block = blockRenderer;\n}","map":{"version":3,"names":["exports","__esModule","default","math_plugin","isValidDelim","state","pos","prevChar","nextChar","max","posMax","can_open","can_close","src","charCodeAt","math_inline","silent","start","match","token","res","esc_count","pending","indexOf","push","markup","content","slice","math_block","end","firstLine","lastLine","next","lastPos","found","bMarks","tShift","eMarks","trim","blkIndent","lastIndexOf","line","block","getLines","map","md","options","_options","katex","katexInline","latex","displayMode","renderToString","error","throwOnError","console","log","inlineRenderer","tokens","idx","katexBlock","blockRenderer","inline","ruler","after","alt","renderer","rules"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/node_modules/@kangc/v-md-editor/lib/utils/markdown-it-katex.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = math_plugin;\n\n// Modified from https://github.com/waylonflinn/markdown-it-katex/blob/master/index.js\n\n/* eslint-disable */\nfunction isValidDelim(state, pos) {\n  var prevChar;\n  var nextChar;\n  var max = state.posMax;\n  var can_open = true;\n  var can_close = true;\n  prevChar = pos > 0 ? state.src.charCodeAt(pos - 1) : -1;\n  nextChar = pos + 1 <= max ? state.src.charCodeAt(pos + 1) : -1;\n\n  if (prevChar === 0x20\n  /* \" \" */\n  || prevChar === 0x09\n  /* \\t */\n  || nextChar >= 0x30\n  /* \"0\" */\n  && nextChar <= 0x39\n  /* \"9\" */\n  ) {\n      can_close = false;\n    }\n\n  if (nextChar === 0x20\n  /* \" \" */\n  || nextChar === 0x09\n  /* \\t */\n  ) {\n      can_open = false;\n    }\n\n  return {\n    can_open: can_open,\n    can_close: can_close\n  };\n}\n\nfunction math_inline(state, silent) {\n  var start;\n  var match;\n  var token;\n  var res;\n  var pos;\n  var esc_count;\n\n  if (state.src[state.pos] !== '$') {\n    return false;\n  }\n\n  res = isValidDelim(state, state.pos);\n\n  if (!res.can_open) {\n    if (!silent) {\n      state.pending += '$';\n    }\n\n    state.pos += 1;\n    return true;\n  }\n\n  start = state.pos + 1;\n  match = start;\n\n  while ((match = state.src.indexOf('$', match)) !== -1) {\n    pos = match - 1;\n\n    while (state.src[pos] === '\\\\') {\n      pos -= 1;\n    }\n\n    if ((match - pos) % 2 == 1) {\n      break;\n    }\n\n    match += 1;\n  }\n\n  if (match === -1) {\n    if (!silent) {\n      state.pending += '$';\n    }\n\n    state.pos = start;\n    return true;\n  }\n\n  if (match - start === 0) {\n    if (!silent) {\n      state.pending += '$$';\n    }\n\n    state.pos = start + 1;\n    return true;\n  }\n\n  res = isValidDelim(state, match);\n\n  if (!res.can_close) {\n    if (!silent) {\n      state.pending += '$';\n    }\n\n    state.pos = start;\n    return true;\n  }\n\n  if (!silent) {\n    token = state.push('math_inline', 'math', 0);\n    token.markup = '$';\n    token.content = state.src.slice(start, match);\n  }\n\n  state.pos = match + 1;\n  return true;\n}\n\nfunction math_block(state, start, end, silent) {\n  var firstLine;\n  var lastLine;\n  var next;\n  var lastPos;\n  var found = false;\n  var token;\n  var pos = state.bMarks[start] + state.tShift[start];\n  var max = state.eMarks[start];\n\n  if (pos + 2 > max) {\n    return false;\n  }\n\n  if (state.src.slice(pos, pos + 2) !== '$$') {\n    return false;\n  }\n\n  pos += 2;\n  firstLine = state.src.slice(pos, max);\n\n  if (silent) {\n    return true;\n  }\n\n  if (firstLine.trim().slice(-2) === '$$') {\n    firstLine = firstLine.trim().slice(0, -2);\n    found = true;\n  }\n\n  for (next = start; !found;) {\n    next++;\n\n    if (next >= end) {\n      break;\n    }\n\n    pos = state.bMarks[next] + state.tShift[next];\n    max = state.eMarks[next];\n\n    if (pos < max && state.tShift[next] < state.blkIndent) {\n      break;\n    }\n\n    if (state.src.slice(pos, max).trim().slice(-2) === '$$') {\n      lastPos = state.src.slice(0, max).lastIndexOf('$$');\n      lastLine = state.src.slice(pos, lastPos);\n      found = true;\n    }\n  }\n\n  state.line = next + 1;\n  token = state.push('math_block', 'math', 0);\n  token.block = true;\n  token.content = (firstLine && firstLine.trim() ? firstLine + '\\n' : '') + state.getLines(start + 1, next, state.tShift[start], true) + (lastLine && lastLine.trim() ? lastLine : '');\n  token.map = [start, state.line];\n  token.markup = '$$';\n  return true;\n}\n\nfunction math_plugin(md, options) {\n  options = options || {};\n  var _options = options,\n      katex = _options.katex;\n\n  var katexInline = function katexInline(latex) {\n    options.displayMode = false;\n\n    try {\n      return katex.renderToString(latex, options);\n    } catch (error) {\n      if (options.throwOnError) {\n        console.log(error);\n      }\n\n      return latex;\n    }\n  };\n\n  var inlineRenderer = function inlineRenderer(tokens, idx) {\n    return katexInline(tokens[idx].content);\n  };\n\n  var katexBlock = function katexBlock(latex) {\n    options.displayMode = true;\n\n    try {\n      return '<p>' + katex.renderToString(latex, options) + '</p>';\n    } catch (error) {\n      if (options.throwOnError) {\n        console.log(error);\n      }\n\n      return latex;\n    }\n  };\n\n  var blockRenderer = function blockRenderer(tokens, idx) {\n    return katexBlock(tokens[idx].content) + '\\n';\n  };\n\n  md.inline.ruler.after('escape', 'math_inline', math_inline);\n  md.block.ruler.after('blockquote', 'math_block', math_block, {\n    alt: ['paragraph', 'reference', 'blockquote', 'list']\n  });\n  md.renderer.rules.math_inline = inlineRenderer;\n  md.renderer.rules.math_block = blockRenderer;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}