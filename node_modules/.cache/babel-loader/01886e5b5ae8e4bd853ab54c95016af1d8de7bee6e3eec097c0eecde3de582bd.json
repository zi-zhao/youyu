{"ast":null,"code":"import { ref, onMounted, watchEffect } from 'vue';\nimport axios from '../../utils/request';\nimport { ElMessage } from 'element-plus';\nimport { getColumnPictureFromCOS, getFavoritePictureFromCOS } from '@/utils/cosService';\nexport default {\n  __name: 'CfDialog',\n  props: {\n    ClassifyName: String,\n    modelValue: Boolean\n  },\n  emits: ['updateValue', 'update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\n    const props = __props;\n    const emits = __emit;\n    const localDialogVisible = ref(props.modelValue);\n    watchEffect(() => {\n      if (localDialogVisible.value !== props.modelValue) {\n        emits('update:modelValue', localDialogVisible.value);\n      }\n    });\n    const dataData = ref([]);\n    const columnId = ref();\n    const columnName = ref();\n    const setActive = (itemId, itemName) => {\n      columnId.value = itemId;\n      columnName.value = itemName;\n    };\n\n    //将专栏ID传回父组件的函数\n    const someMethodInChildComponent = () => {\n      const data = [columnId.value, columnName.value];\n      emits('updateValue', data);\n      localDialogVisible.value = false;\n    };\n\n    //根据父组件传回的classifyname判断应该调用的接口类型（这个方法只是增加一个判断值）\n    const submitData = () => {\n      if (props.ClassifyName === \"文章专栏\") {\n        fetchArticleColumnData();\n      } else if (props.ClassifyName === \"分享专栏\") {\n        fetchShareColumnData();\n      } else if (props.ClassifyName === \"文章收藏\") {\n        fetchArticleFavoriteData();\n      } else if (props.ClassifyName === \"分享收藏\") {\n        fetchShareFavoriteData();\n      }\n    };\n\n    //获取文章专栏\n    async function fetchArticleColumnData() {\n      try {\n        const response = await axios.get('/column', {\n          params: {\n            type: 0,\n            page: 1,\n            pazeSize: 100,\n            userId: Number(userId)\n          }\n        });\n        if (response.data.code === 1) {\n          dataData.value = response.data.data.records;\n          const updatesAsync = dataData.value.map(async record => {\n            const coverPicture = await getColumnPictureFromCOS(record.id);\n            return {\n              ...record,\n              coverPicture\n            };\n          });\n          dataData.value = await Promise.all(updatesAsync);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取文章专栏列表数据失败\");\n          ElMessage.error(\"获取文章专栏列表数据失败\");\n        }\n      } catch (error) {\n        console.error(\"请求文章专栏接口失败\", error);\n        ElMessage.error(\"请求文章专栏接口失败\");\n      }\n    }\n\n    //获取分享专栏\n    async function fetchShareColumnData() {\n      try {\n        const response = await axios.get('/column', {\n          params: {\n            type: 1,\n            page: 1,\n            pazeSize: 1000,\n            userId: Number(userId)\n          }\n        });\n        if (response.data.code === 1) {\n          dataData.value = response.data.data.records;\n          const updatesAsync = dataData.value.map(async record => {\n            const coverPicture = await getColumnPictureFromCOS(record.id);\n            return {\n              ...record,\n              coverPicture\n            };\n          });\n          dataData.value = await Promise.all(updatesAsync);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取分享专栏列表数据失败\");\n          ElMessage.error(\"获取分享专栏列表数据失败\");\n        }\n      } catch (error) {\n        console.error(\"请求分享专栏接口失败\", error);\n        ElMessage.error(\"请求分享专栏接口失败\");\n      }\n    }\n\n    //获取文章收藏\n    async function fetchArticleFavoriteData() {\n      try {\n        const response = await axios.get('/favorite', {\n          params: {\n            type: 0,\n            page: 1,\n            pazeSize: 100,\n            userId: Number(userId)\n          }\n        });\n        if (response.data.code === 1) {\n          dataData.value = response.data.data.records;\n          const updatesAsync = dataData.value.map(async record => {\n            const coverPicture = await getFavoritePictureFromCOS(record.id);\n            return {\n              ...record,\n              coverPicture\n            };\n          });\n          dataData.value = await Promise.all(updatesAsync);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取文章收藏列表数据失败\");\n          ElMessage.error(\"获取文章收藏列表数据失败\");\n        }\n      } catch (error) {\n        console.error(\"请求文章收藏接口失败\", error);\n        ElMessage.error(\"请求文章收藏接口失败\");\n      }\n    }\n\n    //获取分享收藏\n    async function fetchShareFavoriteData() {\n      try {\n        const response = await axios.get('/favorite', {\n          params: {\n            type: 1,\n            page: 1,\n            pazeSize: 100,\n            userId: Number(userId)\n          }\n        });\n        if (response.data.code === 1) {\n          dataData.value = response.data.data.records;\n          const updatesAsync = dataData.value.map(async record => {\n            const coverPicture = await getFavoritePictureFromCOS(record.id);\n            return {\n              ...record,\n              coverPicture\n            };\n          });\n          const updatedRecords = await Promise.all(updatesAsync);\n          dataData.value = updatedRecords;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取分享收藏列表数据失败\");\n          ElMessage.error(\"获取分享收藏列表数据失败\");\n        }\n      } catch (error) {\n        console.error(\"请求分享收藏接口失败\", error);\n        ElMessage.error(\"请求分享收藏接口失败\");\n      }\n    }\n    onMounted(() => {\n      submitData();\n    });\n    const __returned__ = {\n      userId,\n      props,\n      emits,\n      localDialogVisible,\n      dataData,\n      columnId,\n      columnName,\n      setActive,\n      someMethodInChildComponent,\n      submitData,\n      fetchArticleColumnData,\n      fetchShareColumnData,\n      fetchArticleFavoriteData,\n      fetchShareFavoriteData,\n      ref,\n      onMounted,\n      watchEffect,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getColumnPictureFromCOS() {\n        return getColumnPictureFromCOS;\n      },\n      get getFavoritePictureFromCOS() {\n        return getFavoritePictureFromCOS;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watchEffect","axios","ElMessage","getColumnPictureFromCOS","getFavoritePictureFromCOS","userId","localStorage","getItem","props","__props","emits","__emit","localDialogVisible","modelValue","value","dataData","columnId","columnName","setActive","itemId","itemName","someMethodInChildComponent","data","submitData","ClassifyName","fetchArticleColumnData","fetchShareColumnData","fetchArticleFavoriteData","fetchShareFavoriteData","response","get","params","type","page","pazeSize","Number","code","records","updatesAsync","map","record","coverPicture","id","Promise","all","msg","error","toString","console","updatedRecords"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/components/CfDialog.vue"],"sourcesContent":["<!-- 用户已经创建的专栏或收藏列表，有以下几种触发方式：\r\n1、浏览其他人的作品，想要收藏至自己的收藏夹\r\n2、创作文章或分享时，需要选择将这篇作品放置在哪个专栏下 -->\r\n<template>\r\n    <div>\r\n        <el-dialog  v-model=\"localDialogVisible\" :title=\"ClassifyName + '信息'\" style=\"margin-top: 9vh\">\r\n            <!-- <div class=\"cbutton\">\r\n                <span class=\"tatitle\">TA的文章专栏</span>\r\n            </div> -->\r\n            <div class=\"hh\">\r\n                <div class=\"show\" v-for=\"item in dataData\" :key=\"item.id\" @click=\"setActive(item.id,item.name)\" tabindex=\"0\">\r\n                    <div class=\"left\">\r\n                        <span class=\"title\">{{ item.name }}</span>\r\n                        <span class=\"content\">{{ item.profile }}</span>\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <img :src=\"item.coverPicture\" alt=\"\" class=\"carepic\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <template #footer>\r\n            <span class=\"dialog-footer\">\r\n                <el-button @click=\"localDialogVisible = false\">取消</el-button>\r\n                <el-button type=\"primary\" @click=\"someMethodInChildComponent()\">\r\n                确定\r\n                </el-button>\r\n            </span>\r\n            </template>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n    \r\n<script setup>\r\n    import { ref, onMounted,defineProps,defineEmits,watchEffect} from 'vue';\r\n    import axios from '../../utils/request';\r\n    import { ElMessage } from 'element-plus';\r\n    import { getColumnPictureFromCOS,getFavoritePictureFromCOS } from '@/utils/cosService';\r\n\r\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\n    const props = defineProps({\r\n        ClassifyName: String,\r\n        modelValue: Boolean,\r\n    });\r\n    const emits = defineEmits(['updateValue', 'update:modelValue']);\r\n    const localDialogVisible = ref(props.modelValue);\r\n    watchEffect(() => {\r\n    if (localDialogVisible.value !== props.modelValue) {\r\n        emits('update:modelValue', localDialogVisible.value);\r\n    }\r\n    });\r\n\r\n    const dataData =ref([]);\r\n    const columnId = ref();\r\n    const columnName = ref();\r\n\r\n\r\n    const setActive = (itemId,itemName) => {\r\n        columnId.value = itemId;\r\n        columnName.value = itemName;\r\n    }\r\n\r\n    //将专栏ID传回父组件的函数\r\n    const someMethodInChildComponent = () => {\r\n        const data = [columnId.value, columnName.value];\r\n        emits('updateValue', data);\r\n        localDialogVisible.value = false;\r\n    }\r\n\r\n    //根据父组件传回的classifyname判断应该调用的接口类型（这个方法只是增加一个判断值）\r\n    const submitData = () => {\r\n        if(props.ClassifyName === \"文章专栏\"){\r\n            fetchArticleColumnData();\r\n        }else if(props.ClassifyName === \"分享专栏\"){\r\n            fetchShareColumnData();\r\n        }else if(props.ClassifyName === \"文章收藏\"){\r\n            fetchArticleFavoriteData();\r\n        }else if(props.ClassifyName === \"分享收藏\"){\r\n            fetchShareFavoriteData();\r\n        }\r\n    }\r\n\r\n    //获取文章专栏\r\n    async function fetchArticleColumnData() {\r\n        try {\r\n            const response = await axios.get('/column', {\r\n                    params: {\r\n                        type:0,\r\n                        page:1,\r\n                        pazeSize:100,\r\n                        userId:Number(userId),\r\n                    }\r\n                });\r\n            if(response.data.code === 1){\r\n                dataData.value = response.data.data.records;\r\n                const updatesAsync = dataData.value.map(async (record) => {\r\n                    const coverPicture = await getColumnPictureFromCOS(record.id);\r\n                    return {\r\n                        ...record,\r\n                        coverPicture\r\n                    };\r\n                });\r\n                dataData.value = await Promise.all(updatesAsync);\r\n            } else if(response.data.code === 0 && response.data.msg){\r\n                ElMessage.error(response.data.msg.toString());\r\n            }else {\r\n                    console.error(\"获取文章专栏列表数据失败\");\r\n                    ElMessage.error(\"获取文章专栏列表数据失败\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"请求文章专栏接口失败\", error);\r\n                ElMessage.error(\"请求文章专栏接口失败\");\r\n            }\r\n    }\r\n\r\n\r\n    //获取分享专栏\r\n    async function fetchShareColumnData() {\r\n        try {\r\n            const response = await axios.get('/column', {\r\n                    params: {\r\n                        type:1,\r\n                        page:1,\r\n                        pazeSize:1000,\r\n                        userId:Number(userId),\r\n                    }\r\n                });\r\n            if(response.data.code === 1){\r\n                dataData.value = response.data.data.records;\r\n                const updatesAsync = dataData.value.map(async (record) => {\r\n                    const coverPicture = await getColumnPictureFromCOS(record.id);\r\n                    return {\r\n                        ...record,\r\n                        coverPicture\r\n                    };\r\n                });\r\n                dataData.value = await Promise.all(updatesAsync);\r\n            } else if(response.data.code === 0 && response.data.msg){\r\n                ElMessage.error(response.data.msg.toString());\r\n            }else {\r\n                    console.error(\"获取分享专栏列表数据失败\");\r\n                    ElMessage.error(\"获取分享专栏列表数据失败\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"请求分享专栏接口失败\", error);\r\n                ElMessage.error(\"请求分享专栏接口失败\");\r\n            }\r\n    }\r\n\r\n\r\n    //获取文章收藏\r\n    async function fetchArticleFavoriteData() {\r\n        try {\r\n            const response = await axios.get('/favorite', {\r\n                    params: {\r\n                        type:0,\r\n                        page:1,\r\n                        pazeSize:100,\r\n                        userId:Number(userId),\r\n                    }\r\n                });\r\n            if(response.data.code === 1){\r\n                dataData.value = response.data.data.records;\r\n                const updatesAsync = dataData.value.map(async (record) => {\r\n                    const coverPicture = await getFavoritePictureFromCOS(record.id);\r\n                    return {\r\n                        ...record,\r\n                        coverPicture\r\n                    };\r\n                });\r\n                dataData.value = await Promise.all(updatesAsync);\r\n            } else if(response.data.code === 0 && response.data.msg){\r\n                ElMessage.error(response.data.msg.toString());\r\n            }else {\r\n                    console.error(\"获取文章收藏列表数据失败\");\r\n                    ElMessage.error(\"获取文章收藏列表数据失败\");\r\n                }\r\n        } catch (error) {\r\n            console.error(\"请求文章收藏接口失败\", error);\r\n            ElMessage.error(\"请求文章收藏接口失败\");\r\n        }\r\n    }\r\n\r\n\r\n    //获取分享收藏\r\n    async function fetchShareFavoriteData() {\r\n        try {\r\n            const response = await axios.get('/favorite', {\r\n                    params: {\r\n                        type:1,\r\n                        page:1,\r\n                        pazeSize:100,\r\n                        userId:Number(userId),\r\n                    }\r\n                });\r\n            if(response.data.code === 1){\r\n                dataData.value = response.data.data.records;\r\n                const updatesAsync = dataData.value.map(async (record) => {\r\n                    const coverPicture = await getFavoritePictureFromCOS(record.id);\r\n                    return {\r\n                        ...record,\r\n                        coverPicture\r\n                    };\r\n                });\r\n                const updatedRecords = await Promise.all(updatesAsync);\r\n                dataData.value = updatedRecords;\r\n            } else if(response.data.code === 0 && response.data.msg){\r\n                ElMessage.error(response.data.msg.toString());\r\n            }else {\r\n                    console.error(\"获取分享收藏列表数据失败\");\r\n                    ElMessage.error(\"获取分享收藏列表数据失败\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"请求分享收藏接口失败\", error);\r\n                ElMessage.error(\"请求分享收藏接口失败\");\r\n            }\r\n        }\r\n\r\n    onMounted(() => {\r\n        submitData();\r\n    });\r\n\r\n</script>\r\n    \r\n<style scoped>\r\n::v-deep  .el-dialog{\r\n    width: 75%;\r\n    height: 80%;\r\n}\r\n::v-deep .el-dialog__body{\r\n    padding: 10px 30px;\r\n    height: 73%;\r\n}\r\n::v-deep  .el-dialog__header{\r\n    text-align: center;\r\n}\r\n::v-deep  .el-dialog__title {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n}\r\n.hh{\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow-y: auto; \r\n    overflow-x: hidden; \r\n    }\r\n.cbutton{\r\n    position: relative;\r\n    gap: 22px;\r\n    border-bottom: 1px solid rgb(212, 212, 212);;\r\n    padding: 14px 12px;\r\n    width: 866px;\r\n}\r\n.tatitle{\r\n    color: #000; \r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 23px;\r\n    line-height: 120%; \r\n}\r\n.show{\r\n    position: relative;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    width: 90%;\r\n    height: 120px;\r\n    padding: 10px 50px;\r\n    margin: 0px auto;\r\n    border-radius: 4px;\r\n    background-color: #fffffc;\r\n    border-bottom: 1px solid rgb(240 240 240);\r\n    cursor: pointer;\r\n}\r\n.show:focus,\r\n.show:hover{\r\n    background-color:#dde9f5;\r\n}\r\n.left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    margin-top: 5px;\r\n}\r\n.title{\r\n    color: #000;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 18px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 120%; \r\n}\r\n.content{\r\n    width: 500px;\r\n    color: #646464;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 120%; \r\n}\r\n.carepic{\r\n    width: 160px;\r\n    height: 100px;\r\n    flex-shrink: 0;\r\n    border-radius: 8px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}