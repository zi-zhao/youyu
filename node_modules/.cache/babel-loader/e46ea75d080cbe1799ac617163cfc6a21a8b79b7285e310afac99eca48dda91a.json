{"ast":null,"code":"import { useRouter } from 'vue-router';\nimport { ref, onMounted } from 'vue';\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\nimport axios from '@/utils/request';\nimport { ElMessage } from 'element-plus';\nimport { openUrl } from '@/utils/routeJudge';\nexport default {\n  setup() {\n    const user = ref({});\n    const activeLink = ref(null); // 用于记录当前激活标签的响应式引用\n    const router = useRouter();\n    const data = ref({});\n    const numData = ref(0);\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\n\n    const navigateTo = linkName => {\n      if (linkName === '主页') {\n        router.push('/TheMain');\n      }\n      if (linkName === '分享展示') {\n        // const routeLocation = router.resolve({ path: '/ShareShow' });\n        // window.open(routeLocation.href, '_blank');\n        router.push('/ShareShow');\n      }\n      if (linkName === '问答中心') {\n        // const routeLocation = router.resolve({ path: '/DefaultPresentation' });\n        // window.open(routeLocation.href, '_blank');\n        router.push('/DefaultPresentation');\n      }\n      if (linkName === '视频课程') {\n        // const routeLocation = router.resolve({ path: '/VideoMain' });\n        // window.open(routeLocation.href, '_blank');\n        router.push('/VideoMain');\n      }\n      if (linkName === '创作中心') {\n        // const routeLocation = router.resolve({ path: '/CreateCenter' });\n        // window.open(routeLocation.href, '_blank');\n        router.push('/CreateCenter');\n      }\n    };\n    const goToFirstpage = () => {\n      router.push('/');\n    };\n    const goToMessageCenter = () => {\n      // const routeLocation = router.resolve({ path: '/MessageCenter' });\n      // window.open(routeLocation.href, '_blank');\n      openUrl('/MessageCenter');\n    };\n    const goToTheSetting = () => {\n      // const routeLocation = router.resolve({ path: '/TheSettings' });\n      // window.open(routeLocation.href, '_blank');\n      openUrl('/TheSettings');\n    };\n    const goToHistoryRecord = () => {\n      // const routeLocation = router.resolve({ path: '/HistoryRecord' });\n      // window.open(routeLocation.href, '_blank');\n      openUrl('/HistoryRecord');\n    };\n    const goToCustomerService = () => {\n      // const routeLocation = router.resolve({ path: '/CustomerService' });\n      // window.open(routeLocation.href, '_blank');\n      openUrl('/CustomerService');\n    };\n\n    // 获取用户信息\n    const fetchAvatar = async () => {\n      try {\n        const response = await axios.get(`/users/${userId}`);\n        if (response.data.code === 1) {\n          user.value = response.data.data;\n          user.value.newAvatar = await getUsersAvatarFromCOS(userId);\n          user.value.manuscript = Number(user.value.articleCount) + Number(user.value.shareCount);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取用户信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户信息失败\", error);\n        ElMessage.error('获取用户信息失败');\n      }\n    };\n    function isMobileDevice() {\n      return /Mobi|Android|iPhone/i.test(navigator.userAgent);\n    }\n\n    //点击头像是否可以跳转要根据使用设备进行判断\n    const navigateToUserProfile1 = () => {\n      if (isMobileDevice()) {\n        return;\n      }\n      openUrl('/PersonalPage');\n    };\n    // 隐藏起来的盒子只有在手机端才会有“个人主页”\n    const navigateToUserProfile2 = () => {\n      router.push('/PersonalPage');\n    };\n    const setActiveLink = index => {\n      activeLink.value = index;\n    };\n\n    //获取各个类别消息数目\n    async function getNotice() {\n      try {\n        const response = await axios.get('/notice');\n        if (response.data.code === 1) {\n          data.value = response.data.data;\n          numData.value = Number(data.value[0] + data.value[1] + data.value[2] + data.value[3] + data.value[4] + data.value[5] + data.value[6]);\n          console.log(numData.value);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取各个类别消息数目失败\");\n        }\n      } catch (error) {\n        console.error(\"获取各个类别消息数目失败\", error);\n      }\n    }\n    // 在创建组件后立即获取用户头像\n\n    onMounted(() => {\n      fetchAvatar();\n      getNotice();\n      isMobileDevice();\n    });\n    return {\n      user,\n      activeLink,\n      data,\n      numData,\n      navigateTo,\n      goToFirstpage,\n      getUsersAvatarFromCOS,\n      navigateToUserProfile1,\n      navigateToUserProfile2,\n      setActiveLink,\n      getNotice,\n      goToMessageCenter,\n      goToTheSetting,\n      goToHistoryRecord,\n      goToCustomerService\n    };\n  }\n};","map":{"version":3,"names":["useRouter","ref","onMounted","getUsersAvatarFromCOS","axios","ElMessage","openUrl","setup","user","activeLink","router","data","numData","userId","localStorage","getItem","navigateTo","linkName","push","goToFirstpage","goToMessageCenter","goToTheSetting","goToHistoryRecord","goToCustomerService","fetchAvatar","response","get","code","value","newAvatar","manuscript","Number","articleCount","shareCount","msg","error","toString","console","isMobileDevice","test","navigator","userAgent","navigateToUserProfile1","navigateToUserProfile2","setActiveLink","index","getNotice","log"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\components\\TheHeader.vue"],"sourcesContent":["<template>\r\n    <div class=\"large\">\r\n        <div class=\"logo\" @click=\"goToFirstpage\">\r\n            <img src=\"@/assets/fish.png\"  alt=\"\" >\r\n            <span class=\"hover-text\">返回首页</span>\r\n        </div>\r\n        <div class=\"little\">\r\n            <!-- 用户头像 -->\r\n            <div class=\"navbar-avatar-container\">\r\n                <img \r\n                    v-if=\"user.newAvatar\"\r\n                    :src=\"user.newAvatar\"\r\n                    alt=\"\"\r\n                    class=\"navbar-avatar\"\r\n                    @click=\"navigateToUserProfile1\"\r\n                >\r\n                <div class=\"hover-box\">\r\n                    <div style=\"display: flex;justify-content: space-around;\">\r\n                        <div class=\"data-item\">\r\n                            <span class=\"num\">{{ user.subscribeCount }}</span>\r\n                            <span class=\"text1\">关注</span>\r\n                        </div>\r\n                        <div class=\"data-item\">\r\n                            <span class=\"num\">{{ user.fanCount }}</span>\r\n                            <span class=\"text1\">粉丝</span>\r\n                        </div>\r\n                        <div class=\"data-item\">\r\n                            <span class=\"num\">{{ user.manuscript }}</span>\r\n                            <span class=\"text1\">发帖</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"line\"></div>\r\n                    <div style=\"display: flex;flex-direction: column;align-items: center;gap: 12px;\">\r\n                        <div @click=\"navigateToUserProfile2\" class=\"fun-item phone\">\r\n                            <span>个人主页</span>\r\n                        </div>\r\n                        <div @click=\"goToMessageCenter\" class=\"fun-item\">\r\n                            <span>消息中心</span>\r\n                            <img src=\"@/assets/MessageCenter/message.svg\" alt=\"\">\r\n                        </div>\r\n                        <div @click=\"goToTheSetting\" class=\"fun-item\">\r\n                            <span>个人设置</span>\r\n                            <el-icon><Setting /></el-icon>\r\n                        </div>\r\n                        <div @click=\"goToHistoryRecord\" class=\"fun-item\">\r\n                            <span>历史记录</span>\r\n                            <img src=\"@/assets/HistoryRecord/RecordCircle.svg\" alt=\"\">\r\n                        </div>\r\n                        <div @click=\"goToCustomerService\" class=\"fun-item\">\r\n                            <span>网站反馈</span>\r\n                            <img src=\"@/assets/CustomerServices/网站说明.svg\" alt=\"\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- 对a标签遍历添加点击后样式 -->\r\n            <div class=\"list\">\r\n                <a\r\n                    href=\"#\"\r\n                    class=\"navbar-link\"\r\n                    :class=\"{'navbar-link-active': activeLink === index, 'message-center': link === '消息中心'}\"\r\n                    @click.prevent=\"navigateTo(link, index)\"\r\n                    v-for=\"(link, index) in ['主页', '问答中心','视频课程','创作中心','分享展示']\"\r\n                    :key=\"index\"\r\n                >\r\n                    {{ link }}\r\n                    <!-- 判断当前是否是消息中心 -->\r\n                    <!-- 判断消息条数是否大于99，若不是，则只用unread类名即可，若大于，则需再加一个unread-99类名 -->\r\n                    <div v-if=\"link === '消息中心' && numData > 99 \" class=\"unread \">\r\n                        {{ numData }}\r\n                    </div>\r\n                    <div v-if=\"link === '消息中心'  && numData <= 99 && numData != 0\" class=\"unread-99\">\r\n                        {{ numData }}\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { useRouter } from 'vue-router'\r\nimport {ref,onMounted} from 'vue'\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport axios from '@/utils/request';\r\nimport { ElMessage } from 'element-plus';\r\nimport { openUrl } from '@/utils/routeJudge'\r\n\r\nexport default {\r\n    setup() {\r\n        const user = ref({});\r\n        const activeLink = ref(null);// 用于记录当前激活标签的响应式引用\r\n        const router = useRouter();\r\n        const data = ref({});\r\n        const numData = ref(0);\r\n        const userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\n\r\n        const navigateTo = (linkName) => {\r\n            if (linkName === '主页') {\r\n                router.push('/TheMain');\r\n            }\r\n            if (linkName === '分享展示') {\r\n                // const routeLocation = router.resolve({ path: '/ShareShow' });\r\n                // window.open(routeLocation.href, '_blank');\r\n                router.push('/ShareShow');\r\n            }\r\n            if (linkName === '问答中心') {\r\n                // const routeLocation = router.resolve({ path: '/DefaultPresentation' });\r\n                // window.open(routeLocation.href, '_blank');\r\n                router.push('/DefaultPresentation');\r\n            }\r\n            if (linkName === '视频课程') {\r\n                // const routeLocation = router.resolve({ path: '/VideoMain' });\r\n                // window.open(routeLocation.href, '_blank');\r\n                router.push('/VideoMain');\r\n            }\r\n            if (linkName === '创作中心') {\r\n                // const routeLocation = router.resolve({ path: '/CreateCenter' });\r\n                // window.open(routeLocation.href, '_blank');\r\n                router.push('/CreateCenter');\r\n            }\r\n        };\r\n\r\n        const goToFirstpage = () => {\r\n            router.push('/');\r\n        };\r\n        const goToMessageCenter = () => {\r\n            // const routeLocation = router.resolve({ path: '/MessageCenter' });\r\n            // window.open(routeLocation.href, '_blank');\r\n            openUrl('/MessageCenter');\r\n        };\r\n        const goToTheSetting = () => {\r\n            // const routeLocation = router.resolve({ path: '/TheSettings' });\r\n            // window.open(routeLocation.href, '_blank');\r\n            openUrl('/TheSettings');\r\n        };\r\n        const goToHistoryRecord = () => {\r\n            // const routeLocation = router.resolve({ path: '/HistoryRecord' });\r\n            // window.open(routeLocation.href, '_blank');\r\n            openUrl('/HistoryRecord');\r\n        };\r\n        const goToCustomerService = () => {\r\n            // const routeLocation = router.resolve({ path: '/CustomerService' });\r\n            // window.open(routeLocation.href, '_blank');\r\n            openUrl('/CustomerService');\r\n        };\r\n\r\n\r\n        // 获取用户信息\r\n        const fetchAvatar = async () => {\r\n            try {\r\n                const response = await axios.get(`/users/${userId}`);\r\n                if(response.data.code === 1){\r\n                    user.value = response.data.data;\r\n                    user.value.newAvatar = await getUsersAvatarFromCOS(userId);\r\n                    user.value.manuscript =  Number(user.value.articleCount) +  Number(user.value.shareCount);\r\n                }else if(response.data.code === 0 && response.data.msg){\r\n                    ElMessage.error(response.data.msg.toString());\r\n                }else{\r\n                    ElMessage.error('获取用户信息失败');\r\n                }\r\n            } catch (error) {\r\n                console.error(\"获取用户信息失败\", error);\r\n                ElMessage.error('获取用户信息失败');\r\n            }\r\n        };\r\n\r\n        function isMobileDevice() {\r\n            return /Mobi|Android|iPhone/i.test(navigator.userAgent);\r\n        }\r\n\r\n        //点击头像是否可以跳转要根据使用设备进行判断\r\n        const navigateToUserProfile1 = () => {\r\n            if (isMobileDevice()) {\r\n                return;\r\n            }\r\n            openUrl('/PersonalPage');\r\n        };\r\n        // 隐藏起来的盒子只有在手机端才会有“个人主页”\r\n        const navigateToUserProfile2 = () => {\r\n            router.push('/PersonalPage')\r\n        };\r\n\r\n        const setActiveLink = (index) => {\r\n            activeLink.value = index;\r\n        };\r\n\r\n        //获取各个类别消息数目\r\n        async function getNotice() {\r\n            try {\r\n                const response = await axios.get('/notice');\r\n                if(response.data.code === 1){\r\n                    data.value = response.data.data;\r\n                    numData.value = Number(data.value[0]+data.value[1]+data.value[2]+data.value[3]+data.value[4]+data.value[5]+data.value[6]);\r\n                    console.log(numData.value);\r\n                }else if(response.data.code === 0 && response.data.msg){\r\n                    ElMessage.error(response.data.msg.toString());\r\n                }else{\r\n                    console.error(\"获取各个类别消息数目失败\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"获取各个类别消息数目失败\", error); \r\n            }\r\n        }\r\n        // 在创建组件后立即获取用户头像\r\n        \r\n        onMounted(() => {\r\n            fetchAvatar();\r\n            getNotice();\r\n            isMobileDevice()\r\n        })\r\n\r\n        return {\r\n            user,\r\n            activeLink,\r\n            data,\r\n            numData,\r\n            navigateTo,\r\n            goToFirstpage,\r\n            getUsersAvatarFromCOS,\r\n            navigateToUserProfile1,\r\n            navigateToUserProfile2,\r\n            setActiveLink,\r\n            getNotice,\r\n            goToMessageCenter,\r\n            goToTheSetting,\r\n            goToHistoryRecord,\r\n            goToCustomerService\r\n        };\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.large{\r\n    width: 100%;\r\n    height: 2.5rem;\r\n    background-color: rgb(207 215 226);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    /* 固定导航栏 */\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9999;\r\n}\r\n.logo{\r\n    cursor: pointer;\r\n    position: relative;\r\n}\r\n.hover-text {\r\n    visibility: hidden;\r\n    position: absolute;\r\n    bottom: -28px;\r\n    left: 75%;\r\n    transform: translateX(-50%);\r\n    background-color: #f9f9f9;\r\n    color: black;\r\n    font-size: 14px;\r\n    text-align: center;\r\n    padding: 3px 5px;\r\n    border-radius: 5px;\r\n    white-space: nowrap;\r\n}\r\n\r\n.logo:hover .hover-text {\r\n    visibility: visible; /* 当鼠标悬停在 .logo 上时显示文本 */\r\n}\r\n/* logo图片样式 */\r\n.logo img{\r\n    display: flex;\r\n    width: 32px;\r\n    height: 32px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-shrink: 0;\r\n    margin-left: 12px;\r\n}\r\n.little{\r\n    height: 40px;\r\n    display: flex;  \r\n    align-items: center;  \r\n    justify-content: center;\r\n    margin-right: 10px;\r\n}\r\n.list {\r\n    border-radius: 20px;\r\n    background-color: #f1f3ff;\r\n}\r\n.navbar-avatar-container{\r\n    position: relative;\r\n    height: 35px;\r\n}\r\n.navbar-avatar-container:hover .hover-box {\r\n    visibility: visible;\r\n}\r\n/* 用户头像 */\r\n.navbar-avatar {\r\n    display: inline-block; \r\n    width: 35px;\r\n    height: 35px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    margin-right: 10px; \r\n}\r\n.hover-box{\r\n    visibility: hidden;\r\n    width: 160px;\r\n    height: 200px;\r\n    border: 1px solid #e7e7e7;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    left: -77px;\r\n    top: 35px;\r\n    position: absolute;\r\n    border-radius: 10px;\r\n    background: #fff;\r\n    box-shadow: 1px 1px 12px 1px rgb(108 108 108 / 16%);\r\n    padding: 20px;\r\n}\r\n.data-item{\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n.num{\r\n    font-weight: 700;\r\n    text-align: center;\r\n}\r\n.text1{\r\n    font-size: 14px;\r\n    color: #9F9F9F;\r\n    line-height: 1.6;\r\n}\r\n.line{\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: #7D7D7D;;\r\n}\r\n.fun-item{\r\n    display: flex;\r\n    gap: 15px;\r\n    align-items: center;\r\n    cursor: pointer;\r\n}\r\n.fun-item img{\r\n    width: 18px;\r\n    height: 18px;\r\n}\r\n/* a标签样式 */\r\n.navbar-link {\r\n  display: inline-block;\r\n  text-decoration: none;\r\n  color: #706969;\r\n  padding: 5px 25px 5px 25px;\r\n  transition: background-color 0.3s ease;\r\n  position: relative;\r\n}\r\n\r\n.navbar-link-active {\r\n  background-color: rgba(114, 139, 171, 0.34);\r\n  color: black;\r\n  border-radius: 20px;\r\n}\r\n/* 添加伪类实现鼠标悬停效果 */\r\n/* .navbar-link::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: black;\r\n  transform: scaleY(0);\r\n  transition: transform 0.3s ease;\r\n} */\r\n\r\n.navbar-link:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.navbar-link:hover::after {\r\n  transform: scaleY(1);\r\n}\r\n.message-center{\r\n    position: relative;\r\n}\r\n.unread,\r\n.unread-99{\r\n    position: absolute;\r\n    top: 0px;\r\n    height: 16px;\r\n    font-size: 9px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #ff5757;\r\n    color: #fff;\r\n    font-weight: 700;\r\n}\r\n.unread{\r\n    width: 16px;\r\n    border-radius: 50%;\r\n    right: -4px;\r\n}\r\n.unread-99{\r\n    width: 26px;\r\n    border-radius: 50%;\r\n    right: -10px;\r\n}\r\n.phone{\r\n    display: none;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n    .logo img {\r\n        width: 28px;\r\n        height: 28px;\r\n    }\r\n    .navbar-link {\r\n        padding: 5px 8px;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .navbar-avatar {\r\n        width: 30px;\r\n        height: 30px;\r\n    }\r\n\r\n    .hover-box {\r\n        width: 140px;\r\n        height: auto;\r\n        flex-direction: column;\r\n    }\r\n    .phone{\r\n        display: block;\r\n        margin-top: 10px;\r\n    }\r\n    .fun-item img,\r\n    .fun-item .el-icon{\r\n        display: none;\r\n    }\r\n    .list a:last-child,\r\n    .list a:nth-last-child(2){\r\n        display: none;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}