{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from '@/utils/request';\nimport { getArticleCoverageFromCOS } from '@/utils/cosService';\nimport { ElMessage } from 'element-plus';\nimport { convertDateFormat } from '@/utils/timeFormat';\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\nexport default {\n  __name: 'ArticleComponent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const currentPage = ref(1);\n    const articleData = ref([]);\n    const userId = parseInt(localStorage.getItem(\"userId\")); // 获取用户ID\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getDynamicData(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n\n    // 获取分享和文章数据\n    async function getDynamicData(currentPage) {\n      try {\n        const response = await axios.get(`/users/works`, {\n          params: {\n            userId: userId,\n            page: currentPage,\n            pageSize: 10,\n            type: 0\n          }\n        });\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\n          const updates = response.data.data.records.map(async record => {\n            const avatarPromise = getUsersAvatarFromCOS(record.userId);\n            const coverPicturePromise = getArticleCoverageFromCOS(record.id);\n            const [avatar, newCoverPicture] = await Promise.all([avatarPromise, coverPicturePromise]);\n            const createTime = convertDateFormat(record.createTime);\n            return {\n              ...record,\n              avatar,\n              newCoverPicture,\n              createTime\n            };\n          });\n          const updatedRecords = await Promise.all(updates);\n          articleData.value = [...articleData.value, ...updatedRecords];\n          // ElMessage.success('获取用户动态成功');\n        } else if (response.data.code === 1 && response.data.data.records.length === 0) {\n          // ElMessage.info('已加载所有数据');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户动态失败\");\n          ElMessage.error('获取用户动态失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户动态失败\", error);\n        ElMessage.error('获取用户动态失败');\n      }\n    }\n\n    // const goToDetail = (item) =>{\n    //       const routeLocation = router.resolve({ path: `/TheArticle/${item.articleId}`});\n    //       window.open(routeLocation.href, '_blank');\n    //   }\n\n    onMounted(() => {\n      getDynamicData(currentPage.value);\n    });\n    const __returned__ = {\n      currentPage,\n      articleData,\n      userId,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getDynamicData,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get getArticleCoverageFromCOS() {\n        return getArticleCoverageFromCOS;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get convertDateFormat() {\n        return convertDateFormat;\n      },\n      get getUsersAvatarFromCOS() {\n        return getUsersAvatarFromCOS;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","getArticleCoverageFromCOS","ElMessage","convertDateFormat","getUsersAvatarFromCOS","currentPage","articleData","userId","parseInt","localStorage","getItem","isLoading","load","value","getDynamicData","error","console","response","get","params","page","pageSize","type","data","code","records","length","updates","map","record","avatarPromise","coverPicturePromise","id","avatar","newCoverPicture","Promise","all","createTime","updatedRecords","msg","toString"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/Personalpage/dynamic/ArticleComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"main_2\">\r\n    <div class=\"pageshow\"  v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n      <el-timeline>\r\n        <el-timeline-item v-for=\"item in articleData\" :key=\"item.id\" :timestamp=\"item.createTime\" placement=\"top\">          \r\n          <el-card>\r\n            <div class=\"card\">\r\n              <!-- 左侧标题，简介，点赞等图标 -->\r\n              <div style=\"display: flex;flex-direction: column;\">\r\n                <h1 class=\"phtitle\">{{ item.title }}</h1>\r\n                <p class=\"chtitle multi-line-ellipsis-4\">{{ item.summary }}</p>\r\n                <div class=\"icon_container\">\r\n                  <div class=\"cri\">\r\n                    <img class=\"like-pic\" src=\"@/assets/LikeBefore.svg\" />\r\n                    <span class=\"cname\">{{ item.likeCount }}</span>\r\n                  </div>\r\n                  <div class=\"cri\">\r\n                    <img class=\"like-pic\" src=\"@/assets/Comment.svg\" />\r\n                    <span class=\"cname\">{{ item.commentCount }}</span>\r\n                  </div>\r\n                  <div class=\"cri\">\r\n                    <img class=\"like-pic\" src=\"@/assets/Transpond.svg\" />\r\n                    <span class=\"cname\">{{ item.transmitCount }}</span>\r\n                  </div>\r\n                  <div class=\"cri\">\r\n                    <img class=\"like-pic\" src=\"@/assets/FavoriteBefore.svg\" />\r\n                    <span class=\"cname\">{{ item.favoriteCount }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- 右侧封面图片 -->\r\n              <div>\r\n                <img \r\n                  :src='item.newCoverPicture'  \r\n                  :key=\"imgIndex\" \r\n                  alt=\"Share Image\"\r\n                  class=\"pic\" \r\n                /> \r\n              </div>  \r\n            </div>\r\n          </el-card>\r\n        </el-timeline-item>\r\n      </el-timeline>\r\n      <el-empty \r\n          v-if=\"articleData.length === 0 || !articleData\" \r\n          :image-size=\"200\" \r\n          description=\"您还没有文章呢，快去创作吧！\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { ref,onMounted } from 'vue';\r\nimport axios from '@/utils/request';\r\nimport { getArticleCoverageFromCOS } from '@/utils/cosService';\r\nimport { ElMessage } from 'element-plus';\r\nimport { convertDateFormat } from '@/utils/timeFormat'; \r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\n\r\nconst currentPage =ref(1);\r\nconst articleData = ref([]);\r\nconst userId = parseInt(localStorage.getItem(\"userId\")); // 获取用户ID\r\n\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n      if(currentPage.value === 1){\r\n          currentPage.value++;\r\n      }\r\n      await getDynamicData(currentPage.value);\r\n      currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n // 获取分享和文章数据\r\n  async function getDynamicData(currentPage) {\r\n    try{\r\n      const response = await axios.get(`/users/works`,{\r\n          params: {\r\n              userId:userId,\r\n              page:currentPage,\r\n              pageSize:10,\r\n              type:0,\r\n          }\r\n      });\r\n      if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n        const updates = response.data.data.records.map(async (record) => {\r\n          const avatarPromise = getUsersAvatarFromCOS(record.userId);\r\n          const coverPicturePromise = getArticleCoverageFromCOS(record.id);\r\n          const [avatar, newCoverPicture] = await Promise.all([avatarPromise, coverPicturePromise]);\r\n          const createTime = convertDateFormat(record.createTime);\r\n          return {\r\n            ...record,\r\n            avatar,\r\n            newCoverPicture,\r\n            createTime\r\n          };\r\n        });\r\n        const updatedRecords = await Promise.all(updates);\r\n        articleData.value = [...articleData.value, ...updatedRecords];\r\n        // ElMessage.success('获取用户动态成功');\r\n      }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n          // ElMessage.info('已加载所有数据');\r\n      }else if(response.data.code === 0 && response.data.msg){\r\n          ElMessage.error(response.data.msg.toString());\r\n      }else{\r\n          console.error(\"获取用户动态失败\");\r\n          ElMessage.error('获取用户动态失败');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"获取用户动态失败\", error); \r\n      ElMessage.error('获取用户动态失败');\r\n    }\r\n  }\r\n\r\n      // const goToDetail = (item) =>{\r\n    //       const routeLocation = router.resolve({ path: `/TheArticle/${item.articleId}`});\r\n    //       window.open(routeLocation.href, '_blank');\r\n    //   }\r\n  \r\n  onMounted(() => {\r\n    getDynamicData(currentPage.value);\r\n  })\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.main_2 {\r\n  display: flex;\r\n  padding-left: 0px;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  flex-shrink: 0;\r\n  min-height: 225px;\r\n}\r\n.pageshow {\r\n  width: 90%;\r\n  gap: 12px;\r\n  margin: 30px auto 0px;\r\n  min-height: 100px;\r\n}\r\n.card{\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.phtitle {\r\n  color: #000;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 120%; \r\n}\r\n.chtitle {\r\n  min-height: 58px;\r\n  width: 500px;\r\n  line-height: 1.6;\r\n  font-size: 14px;\r\n}\r\n.icon_container {\r\n  display: flex;\r\n  gap: 20px;\r\n  width: 500px;\r\n  margin-top: 20px;\r\n}\r\n.cri {\r\n  display: flex;\r\n  gap: 4px;\r\n}\r\n\r\n.like-pic {\r\n    display: block;\r\n    margin: auto;\r\n    height: 16px;\r\n    width: 16px;\r\n    margin-right: 2px;\r\n    cursor: pointer;\r\n}\r\n.cname{\r\n  color: #2d2d2d;\r\n  font-size: 13px;\r\n  line-height: 120%;\r\n}\r\n.pic{\r\n  width: 200px;\r\n  height: 140px;\r\n  flex-shrink: 0;\r\n  border-radius: 8px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}