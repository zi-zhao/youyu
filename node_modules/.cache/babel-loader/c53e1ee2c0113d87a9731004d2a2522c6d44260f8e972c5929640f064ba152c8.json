{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock, vShow as _vShow, resolveDirective as _resolveDirective, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/LikeBefore.svg';\nimport _imports_1 from '@/assets/Comment.svg';\nimport _imports_2 from '@/assets/InsertCoins.svg';\nimport _imports_3 from '@/assets/FavoriteBefore.svg';\nimport _imports_4 from '@/assets/Transpond.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-0f439010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"search\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"width\": \"300px\",\n    \"height\": \"35px\",\n    \"border\": \"1px solid #ccc\",\n    \"border-radius\": \"4px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"content-container\",\n  \"infinite-scroll-distance\": \"100\",\n  \"infinite-scroll-immediate\": \"false\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"title\"\n};\nconst _hoisted_6 = {\n  class: \"head\"\n};\nconst _hoisted_7 = {\n  class: \"tags\",\n  style: {\n    \"display\": \"flex\",\n    \"gap\": \"8px\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"foot\"\n};\nconst _hoisted_9 = {\n  class: \"icon\"\n};\nconst _hoisted_10 = {\n  class: \"icon-box\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"icon-text\"\n};\nconst _hoisted_13 = {\n  class: \"icon-box\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_15 = {\n  class: \"icon-text\"\n};\nconst _hoisted_16 = {\n  class: \"icon-box\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_18 = {\n  class: \"icon-text\"\n};\nconst _hoisted_19 = {\n  class: \"icon-box\"\n};\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_3,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_21 = {\n  class: \"icon-text\"\n};\nconst _hoisted_22 = {\n  class: \"icon-box\"\n};\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_4,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_24 = {\n  class: \"icon-text\"\n};\nconst _hoisted_25 = {\n  class: \"time\"\n};\nconst _hoisted_26 = {\n  class: \"detailed-time\"\n};\nconst _hoisted_27 = {\n  class: \"btn\"\n};\nconst _hoisted_28 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_Search = _resolveComponent(\"Search\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_Plus = _resolveComponent(\"Plus\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_MoreFilled = _resolveComponent(\"MoreFilled\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _directive_infinite_scroll = _resolveDirective(\"infinite-scroll\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_tabs, {\n    modelValue: $setup.filter,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filter = $event),\n    onTabChange: $setup.handleTapageClick\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"全部\",\n      name: \"all\"\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"仅我可见\",\n      name: \"mesee\"\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"审核中\",\n      name: \"audit\"\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"草稿箱\",\n      name: \"draft\"\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"回收站\",\n      name: \"recycleBin\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" <el-select v-model=\\\"selectedColumnCategory\\\" placeholder=\\\"专栏分类\\\" @change=\\\"handleColumnCategoryChange\\\">\\r\\n                    <el-option-group>\\r\\n                        <el-option :value=\\\"option.name\\\" v-for=\\\"option in columnGroup\\\" :key=\\\"option.id\\\"></el-option>\\r\\n                    </el-option-group>\\r\\n            </el-select>  \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    style: {\n      \"flex\": \"1\",\n      \"padding\": \"6px 10px\",\n      \"border\": \"none\",\n      \"outline\": \"none\",\n      \"font-size\": \"14px\"\n    },\n    placeholder: \"请输入关键字\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.keyword = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.keyword]]), _createElementVNode(\"div\", {\n    style: {\n      \"padding\": \"0 10px\"\n    },\n    class: \"search-box\",\n    onClick: $setup.handleSearch\n  }, [_createVNode(_component_el_icon, null, {\n    default: _withCtx(() => [_createVNode(_component_Search)]),\n    _: 1 /* STABLE */\n  })])])]), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" 文章管理内容 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.articleGroup, compositionOption => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"content-box\",\n      key: compositionOption.id\n    }, [_createCommentVNode(\" 若封面图片为空，则设置为默认文章封面 \"), _createElementVNode(\"img\", {\n      src: compositionOption.tags.articleStatus === '草稿' ? $setup.defaultCoverage : compositionOption.newCoverPicture,\n      alt: \"Composition Image\",\n      class: \"image\"\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, _toDisplayString(compositionOption.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(compositionOption.tags, tag => {\n      return _openBlock(), _createBlock(_component_el_tag, {\n        key: tag,\n        size: \"mini\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(tag), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"span\", _hoisted_12, _toDisplayString(compositionOption.likeCount), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createElementVNode(\"span\", _hoisted_15, _toDisplayString(compositionOption.commentCount), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _createElementVNode(\"span\", _hoisted_18, _toDisplayString(compositionOption.rewardCount), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_19, [_hoisted_20, _createElementVNode(\"span\", _hoisted_21, _toDisplayString(compositionOption.favoriteCount), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_22, [_hoisted_23, _createElementVNode(\"span\", _hoisted_24, _toDisplayString(compositionOption.transmitCount), 1 /* TEXT */)])])])]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, _toDisplayString(compositionOption.postTime), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_27, [compositionOption.tags.articleStatus == '已发表' ? (_openBlock(), _createBlock(_component_el_button, {\n      key: 0,\n      onClick: $event => $setup.goToTheArticle(compositionOption.id)\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_Plus)]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\"查看 \")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), compositionOption.editorType === 0 && compositionOption.tags.articleStatus == '草稿' ? (_openBlock(), _createBlock(_component_el_button, {\n      key: 1,\n      onClick: $event => $setup.goToReWangEditorEditor(compositionOption.id)\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_Plus)]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\"编辑 \")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), compositionOption.editorType === 1 && compositionOption.tags.articleStatus == '草稿' ? (_openBlock(), _createBlock(_component_el_button, {\n      key: 2,\n      onClick: $event => $setup.goToReMarkDownEditor(compositionOption.id)\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_Plus)]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\"编辑 \")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <el-button>\\r\\n                            <el-icon><Tickets /></el-icon>数据\\r\\n                        </el-button> \"), _createVNode(_component_el_button, {\n      onClick: $event => compositionOption.showDeletebtn = true\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_MoreFilled)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _withDirectives(_createElementVNode(\"div\", {\n      onClick: $event => $setup.deleteArticle(compositionOption),\n      onMouseleave: _cache[2] || (_cache[2] = $event => $setup.showDeletebtn = false),\n      class: \"delete-btn\"\n    }, \"删除\", 40 /* PROPS, NEED_HYDRATION */, _hoisted_28), [[_vShow, compositionOption.showDeletebtn]])])])]);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.articleGroup.length === 0 || !$setup.articleGroup ? (_openBlock(), _createBlock(_component_el_empty, {\n    key: 0,\n    \"image-size\": 200,\n    description: \"您还没有文章呢，快去创作吧！\"\n  })) : _createCommentVNode(\"v-if\", true)])), [[_directive_infinite_scroll, $setup.load]])]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","_imports_4","class","style","_createElementVNode","src","alt","_createElementBlock","_createVNode","_component_el_tabs","$setup","filter","$event","onTabChange","handleTapageClick","_component_el_tab_pane","label","name","_hoisted_1","_createCommentVNode","_hoisted_2","type","placeholder","keyword","onClick","handleSearch","_component_el_icon","_component_Search","_hoisted_3","_Fragment","_renderList","articleGroup","compositionOption","key","id","tags","articleStatus","defaultCoverage","newCoverPicture","_hoisted_5","_hoisted_6","_toDisplayString","title","_hoisted_7","tag","_createBlock","_component_el_tag","size","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","likeCount","_hoisted_13","_hoisted_14","_hoisted_15","commentCount","_hoisted_16","_hoisted_17","_hoisted_18","rewardCount","_hoisted_19","_hoisted_20","_hoisted_21","favoriteCount","_hoisted_22","_hoisted_23","_hoisted_24","transmitCount","_hoisted_25","_hoisted_26","postTime","_hoisted_27","_component_el_button","goToTheArticle","_component_Plus","editorType","goToReWangEditorEditor","goToReMarkDownEditor","showDeletebtn","_component_MoreFilled","deleteArticle","onMouseleave","_cache","_hoisted_28","length","_component_el_empty","description","load"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\CreateCenter\\components\\WorkManagement\\ArticleManagement.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-tabs v-model=\"filter\"  @tab-change=\"handleTapageClick\">\r\n            <el-tab-pane label=\"全部\" name=\"all\"></el-tab-pane>\r\n            <el-tab-pane label=\"仅我可见\" name=\"mesee\"></el-tab-pane>\r\n            <el-tab-pane label=\"审核中\" name=\"audit\"></el-tab-pane>\r\n            <el-tab-pane label=\"草稿箱\" name=\"draft\"></el-tab-pane>\r\n            <el-tab-pane label=\"回收站\" name=\"recycleBin\"></el-tab-pane>\r\n        </el-tabs>\r\n        <div class=\"search\">\r\n            <!-- <el-select v-model=\"selectedColumnCategory\" placeholder=\"专栏分类\" @change=\"handleColumnCategoryChange\">\r\n                    <el-option-group>\r\n                        <el-option :value=\"option.name\" v-for=\"option in columnGroup\" :key=\"option.id\"></el-option>\r\n                    </el-option-group>\r\n            </el-select>  -->\r\n            <div style=\"display: flex; align-items: center; width: 300px; height: 35px; border: 1px solid #ccc; border-radius: 4px;\">\r\n                <input type=\"text\" style=\"flex: 1; padding: 6px 10px; border: none; outline: none; font-size: 14px;\"\r\n                    placeholder=\"请输入关键字\" v-model=\"keyword\">\r\n                <div style=\"padding: 0 10px;\" class=\"search-box\" @click=\"handleSearch\">\r\n                    <el-icon>\r\n                        <Search />\r\n                    </el-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"content-container\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n            <!-- 文章管理内容 -->\r\n            <div class=\"content-box\" v-for=\"compositionOption in articleGroup\" :key=\"compositionOption.id\">\r\n                <!-- 若封面图片为空，则设置为默认文章封面 -->\r\n                <img :src=\"compositionOption.tags.articleStatus === '草稿' ? defaultCoverage : compositionOption.newCoverPicture\" alt=\"Composition Image\" class=\"image\">\r\n                <div class=\"title\">\r\n                    <div class=\"head\">{{ compositionOption.title }}</div>\r\n                    <div class=\"tags\" style=\"display: flex; gap: 8px;\">\r\n                        <el-tag v-for=\"tag in compositionOption.tags\" :key=\"tag\" size=\"mini\">{{ tag }}</el-tag>\r\n                    </div>\r\n                    <div class=\"foot\">\r\n                        <div class=\"icon\">\r\n                             <div class=\"icon-box\">\r\n                                <img src=\"@/assets/LikeBefore.svg\" alt=\"\">\r\n                                <span class=\"icon-text\">{{ compositionOption.likeCount }}</span>\r\n                            </div>\r\n                            <div class=\"icon-box\">\r\n                                <img src=\"@/assets/Comment.svg\" alt=\"\">\r\n                                <span class=\"icon-text\">{{ compositionOption.commentCount}}</span>\r\n                            </div>\r\n                            <div class=\"icon-box\">\r\n                                <img src=\"@/assets/InsertCoins.svg\" alt=\"\">\r\n                                <span class=\"icon-text\">{{ compositionOption.rewardCount}}</span>\r\n                            </div>\r\n                            <div class=\"icon-box\">\r\n                                <img src=\"@/assets/FavoriteBefore.svg\" alt=\"\">\r\n                                <span class=\"icon-text\">{{ compositionOption.favoriteCount }}</span>\r\n                             </div>\r\n                             <div class=\"icon-box\">\r\n                                <img src=\"@/assets/Transpond.svg\" alt=\"\">\r\n                                <span class=\"icon-text\">{{ compositionOption.transmitCount }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"time\">\r\n                    <div class=\"detailed-time\">{{ compositionOption.postTime }}</div>\r\n                    <div class=\"btn\">\r\n                        <el-button v-if=\"compositionOption.tags.articleStatus == '已发表'\" @click=\"goToTheArticle(compositionOption.id)\">\r\n                            <el-icon><Plus /></el-icon>查看\r\n                        </el-button>\r\n                        <el-button v-if=\"compositionOption.editorType === 0 && compositionOption.tags.articleStatus == '草稿'\" @click=\"goToReWangEditorEditor(compositionOption.id)\">\r\n                            <el-icon><Plus /></el-icon>编辑\r\n                        </el-button>\r\n                        <el-button v-if=\"compositionOption.editorType === 1 && compositionOption.tags.articleStatus == '草稿'\" @click=\"goToReMarkDownEditor(compositionOption.id)\">\r\n                            <el-icon><Plus /></el-icon>编辑\r\n                        </el-button>\r\n                        <!-- <el-button>\r\n                            <el-icon><Tickets /></el-icon>数据\r\n                        </el-button> -->\r\n                        <el-button @click=\"compositionOption.showDeletebtn=true\">\r\n                            <el-icon><MoreFilled /></el-icon>\r\n                        </el-button>\r\n                        <div v-show=\"compositionOption.showDeletebtn\" @click=\"deleteArticle(compositionOption)\" @mouseleave=\"showDeletebtn=false\" class=\"delete-btn\">删除</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <el-empty \r\n                v-if=\"articleGroup.length === 0 || !articleGroup\" \r\n                :image-size=\"200\" \r\n                description=\"您还没有文章呢，快去创作吧！\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessageBox , ElMessage } from 'element-plus';\r\nimport { ref,onMounted,watch} from 'vue';\r\nimport { getArticleCoverageFromCOS } from '@/utils/cosService';\r\nimport axios from '@/utils/request';\r\nimport { convertDateFormat } from '@/utils/timeFormat'; \r\nimport { useRouter } from 'vue-router';\r\nimport defaultCoverage from '@/assets/CreateCenter/DraftCov.png'\r\nimport { openUrl } from '@/utils/routeJudge'\r\n\r\nconst router = useRouter()\r\nconst currentPageArticle = ref(1);\r\n// const userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\nconst filter = ref('all');\r\nconst selectedColumnCategory = ref();\r\nconst keyword = ref();\r\n// const columnGroup = ref([]);\r\nconst articleGroup = ref([]);\r\n// const newColumnArray = ref([]);//存放用户的文章专栏数据\r\nconst type = ref(0);\r\nconst showDeletebtn = ref(false)//控制删除按钮是否显示\r\n\r\n//点击编辑按钮，跳转至编辑器数据回显页面\r\nconst goToReWangEditorEditor = (articleId) =>{\r\n    // const routeLocation = router.resolve({ path: `/WangEditor/${articleId}` });\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl(`/WangEditor/${articleId}`)\r\n    \r\n}\r\n\r\n//点击编辑按钮，跳转至编辑器数据回显页面\r\nconst goToReMarkDownEditor = (articleId) =>{\r\n    // const routeLocation = router.resolve({ path: `/MarkDown/${articleId}` });\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl(`/MarkDown/${articleId}`)\r\n}\r\n\r\n\r\n//点击查看进入文章展示页面\r\nconst goToTheArticle = (articleId) =>{\r\n    // const routeLocation = router.resolve({ path: `/TheArticle/${articleId}`});\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl(`/TheArticle/${articleId}`)\r\n}\r\n\r\n//点击删除的弹框\r\nconst deleteArticle = async (article) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要删除该文章吗？',\r\n      {\r\n        confirmButtonText: '确认删除',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }\r\n    );\r\n    handleDelete(article);\r\n  } catch {\r\n    console.log('关闭弹框')\r\n  }\r\n}\r\n\r\n//点击范围分类\r\nfunction handleTapageClick(tabName){\r\n    if(tabName === 'all' ){\r\n        type.value = 0;\r\n    }else if (tabName === 'mesee'){\r\n        type.value = 1;\r\n    }\r\n    else if (tabName === 'audit'){\r\n        type.value = 3;\r\n    }\r\n    else if (tabName === 'draft'){\r\n        type.value = 2;\r\n    }\r\n    else if (tabName === 'recycleBin'){\r\n        type.value = 4;\r\n    }\r\n    console.log(tabName);\r\n}\r\n\r\n// 使用watch来监听type的变化\r\nwatch(type, (newValue, oldValue) => {\r\n    currentPageArticle.value = 1;\r\n    keyword.value ='';\r\n    getArticleList(keyword.value, currentPageArticle.value,newValue);\r\n});\r\n\r\n\r\n// // 点击专栏分类\r\n// function handleColumnCategoryChange() {\r\n//     selectedColumnCategory.value = getIdFromColumnName( selectedColumnCategory.value);\r\n//     currentPageArticle.value = 1;\r\n//     keyword.value ='';\r\n//     getArticleList(selectedColumnCategory.value, keyword.value, currentPageArticle.value,type.value);\r\n// }\r\n\r\n//点击搜索框\r\nfunction handleSearch() {\r\n    currentPageArticle.value = 1;\r\n    getArticleList(keyword.value, currentPageArticle.value,type.value);\r\n}\r\n\r\n\r\n// //根据专栏名获取专栏ID\r\n// function getIdFromColumnName(columnName) {\r\n//     const matchedItem = newColumnArray.value.find(item => item.name == columnName);\r\n//     return matchedItem ? matchedItem.id : null;  \r\n// }\r\n\r\n// //根据专栏id获取专栏名\r\n// function getNameFromColumnId(columnId) {\r\n//     const matchedItem = newColumnArray.value.find(item => item.id == columnId);\r\n//     return matchedItem ? matchedItem.name : null;  \r\n// }\r\n\r\n//根据文章分页数据判断文章类型\r\nfunction juageArticleType(type) {\r\n    if(type === 0) return '原创'\r\n    if(type === 1) return '转载'\r\n    if(type === 2) return '翻译'\r\n}\r\n//根据文章分页数据判断文章状态\r\nfunction juageArticleStatus(status) {\r\n    if(status === 0) return '草稿'\r\n    if(status === 1) return '审核中'\r\n    if(status === 2) return '已发表'\r\n    if(status === 4) return '被举报'\r\n    if(status === -1) return '审核未通过'\r\n}\r\n//根据文章分页数据判断文章付费类型\r\nfunction juageArticlePayType(coin,point) {\r\n    if(coin === 0 && point === 0 ) return '免费'\r\n    else return '付费'\r\n}\r\n\r\n\r\n//根据文章分页数据判断文章可见范围\r\nfunction juageArticleAccess(access) {\r\n    if(access === 0) return '全部可见'\r\n    if(access === 1) return '仅我可见'\r\n}\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载，则直接返回\r\n    isLoading = true; // 设置加载状态为true\r\n    try {\r\n        if(currentPageArticle.value === 1){\r\n            currentPageArticle.value++;\r\n        }\r\n        // 加载类型2的数据\r\n        await getArticleList(keyword.value, currentPageArticle.value,type.value);\r\n        currentPageArticle.value++;\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      isLoading = false; // 无论加载成功或失败，都重置加载状态\r\n    }\r\n}\r\n\r\n//删除文章接口\r\nasync function handleDelete(article) {\r\n    try {\r\n        const response = await axios.delete(`/article/${article.id}`);\r\n        if (response.data.code === 1) {\r\n            article.showDeletebtn = false;\r\n            ElMessage.success('删除文章成功！');\r\n            getArticleList(keyword.value, currentPageArticle.value,type.value);\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error('删除文章失败', response.data.msg);\r\n            ElMessage.error('删除文章失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"删除文章失败\", error); \r\n        ElMessage.error('删除文章失败');\r\n    }\r\n}\r\n\r\n\r\n//因为要获取多种文章数据列表，所以封装一下获取到文章分类数据后的处理函数\r\nasync function processArticleGroup(articleArray) {\r\n    const updates = articleArray.map(async (record) => {\r\n        const showDeletebtn = false;\r\n        const newCoverPicture = await getArticleCoverageFromCOS(record.id);\r\n        const postTime = convertDateFormat(record.postTime);\r\n        let tags = {}; \r\n        tags.type = juageArticleType(record.type);\r\n        tags.articleStatus = juageArticleStatus(record.status);\r\n        // tags.column = getNameFromColumnId(record.columnId);\r\n        tags.payType = juageArticlePayType(record.requiredCoin,record.requiredPoint);\r\n        tags.access = juageArticleAccess(record.access);\r\n        return {\r\n            ...record, \r\n            showDeletebtn,\r\n            newCoverPicture, \r\n            postTime, \r\n            tags\r\n        };\r\n    });\r\n    // 等待所有的并行操作完成\r\n    return Promise.all(updates);\r\n}\r\n\r\n//获取文章分页数据\r\nasync function getArticleList(textValue,currentPage,type) {\r\n  try {\r\n    if(currentPage === 1){\r\n        articleGroup.value =[];\r\n    }\r\n    let params = {\r\n        currentPage:currentPage,\r\n        type:type,\r\n    };\r\n    // if (selectedColumnId) params.columnId = selectedColumnId;\r\n    if (textValue) params.title = textValue;\r\n    const response = await axios.get('/users/article/list',{ params: params });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n        const articleGroupNew = response.data.data.records;\r\n        const processedArticleGroup = await processArticleGroup(articleGroupNew);\r\n        articleGroup.value = [...articleGroup.value, ...processedArticleGroup];\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n        // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取文章数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"请求文章接口失败\", error); \r\n  }\r\n}\r\n\r\n// // 获取文章专栏列表\r\n// async function getColumnArticleList() {\r\n//   try {\r\n//     const response = await axios.get('/column',{\r\n//       params: {\r\n//           type:0,\r\n//           page:1,\r\n//           pageSize:1000,\r\n//           userId:userId,\r\n//         }\r\n//     });\r\n//     if (response.data.code === 1 ){\r\n//         columnGroup.value = response.data.data.records;\r\n//         console.log(columnGroup.value);\r\n//     }else if(response.data.code === 0 && response.data.msg){\r\n//         ElMessage.error(response.data.msg.toString());\r\n//     }else{\r\n//         console.error(\"获取文章专栏数据失败\");\r\n//         ElMessage.error(\"获取文章专栏数据失败\");\r\n//     }\r\n//   } catch (error) {\r\n//     console.error(\"请求文章专栏接口失败\", error); \r\n//     ElMessage.error(\"请求文章专栏接口失败\");\r\n//   }\r\n// }\r\n\r\n//一定要先等待获取专栏的接口完成，不然在获取文章分页数据时无法确定每篇文章的专栏名称\r\nonMounted(async () => {\r\n    // await getColumnArticleList();  \r\n    await getArticleList(keyword.value, currentPageArticle.value,type.value);\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.icon-text{\r\n    color:#2d2d2d;\r\n}\r\n.search {\r\n    display: flex;\r\n    gap: 2rem;\r\n}\r\n\r\n.search-box {\r\n    cursor: pointer;\r\n}\r\n\r\n\r\n.content-box {\r\n    display: flex;\r\n    width: 100%;\r\n    border-radius: 4px;\r\n    padding: 1rem 1rem;\r\n    border-bottom: 1px solid #ccc;\r\n}\r\n.image {\r\n    width: 142px;\r\n    height: 100px;\r\n    border-radius: 8px;\r\n}\r\n.title {\r\n    padding-left: 1rem;\r\n    flex: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n}\r\n.icon {\r\n    width: 50%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    color: #888;\r\n    gap: 8px;\r\n}\r\n.icon-box {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 3px;\r\n}\r\n.icon-box span{\r\n    font-size: 14px;\r\n}\r\n.detailed-time {\r\n    font-size: 14px;\r\n}\r\n\r\n.time {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    padding-right: 1rem;\r\n    color: #888;\r\n    gap: 1rem;\r\n}\r\n\r\n.btn {\r\n    color: black;\r\n    position: relative;\r\n}\r\n.delete-btn{\r\n    position: absolute;\r\n    top: 35px ;\r\n    right: 0px;\r\n    width: 50px;\r\n    height: 26px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 5px; \r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    color: #5d5d5d;\r\n}\r\n.underline {\r\n  border: none;\r\n  border-top: 1px solid #ccc;\r\n}\r\n\r\n/* 去除el-tabs底部灰色横线 */\r\n::v-deep .el-tabs__nav-wrap::after {\r\n    height: 0px;\r\n}\r\n.el-select-dropdown{\r\n    overflow-y: auto;\r\n    height: 180px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}