{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from '@/utils/request';\nimport { fetchShareCoverage } from '@/utils/fileService';\nimport { ElMessage } from 'element-plus';\nimport { useStore } from 'vuex';\nimport ShareDialog from '../../ShareShow/components/ShareDialog.vue';\nexport default {\n  __name: 'ShareListF',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const currentPage = ref(1);\n    const articles = ref([]);\n    const store = useStore();\n    const id = store.state.favoriteShareTest;\n    const dialogShowVisible = ref(false); //控制分享展示弹框是否展示\n    const shareId = ref(null);\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getColumnShareList(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n    async function getColumnShareList(currentPage) {\n      try {\n        const response = await axios.get('/favorite/share', {\n          params: {\n            id: id,\n            page: currentPage,\n            pageSize: 10\n          }\n        });\n        if (response.data.code === 1) {\n          const updates = response.data.data.records.map(async share => {\n            const coverPicture = await fetchShareCoverage(share.id);\n            return {\n              ...share,\n              coverPicture\n            };\n          });\n          const updatedShares = await Promise.all(updates);\n          articles.value = [...articles.value, ...updatedShares];\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取收藏的分享列表失败\");\n          ElMessage.error('获取收藏的分享列表失败');\n        }\n      } catch (error) {\n        console.error(\"获取收藏的分享列表失败\", error);\n        ElMessage.error('获取收藏的分享列表失败');\n      }\n    }\n    const goToDetail = item => {\n      shareId.value = item.id;\n      dialogShowVisible.value = true;\n    };\n\n    // 生命周期钩子\n    onMounted(() => {\n      getColumnShareList(currentPage.value);\n    });\n    const __returned__ = {\n      currentPage,\n      articles,\n      store,\n      id,\n      dialogShowVisible,\n      shareId,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getColumnShareList,\n      goToDetail,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get fetchShareCoverage() {\n        return fetchShareCoverage;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useStore() {\n        return useStore;\n      },\n      ShareDialog\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","fetchShareCoverage","ElMessage","useStore","ShareDialog","currentPage","articles","store","id","state","favoriteShareTest","dialogShowVisible","shareId","isLoading","load","value","getColumnShareList","error","console","response","get","params","page","pageSize","data","code","updates","records","map","share","coverPicture","updatedShares","Promise","all","msg","toString","goToDetail","item"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/Personalpage/shareFavorite/ShareListF.vue"],"sourcesContent":["<template>\r\n  <div class=\"cbutton\">\r\n    <span class=\"tatitle\">我的分享</span>\r\n  </div>\r\n  <div class=\"sharepage1\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n    <div class=\"show\" v-for=\"(data, index) in articles\" :key=\"index\" @click=\"goToDetail(data)\">\r\n      <span class=\"title\">{{ data.title }}</span>\r\n      <span class=\"content multi-line-ellipsis-4\">{{ data.content }}</span>\r\n      <div class=\"piccontainer\" >\r\n        <img class=\"pic\" :src=\"image\" v-for= \"(image, imgIndex) in data.coverPicture.slice(0, 4)\"  :key=\"imgIndex\" alt=\"\" />\r\n      </div>\r\n      <div class=\"lablecontainer\">\r\n        <span\r\n          class=\"lable\"\r\n          v-for=\"(label, labelIndex) in data.label.split(' ')\"\r\n          :key=\"labelIndex\"\r\n          >{{ \"#\" + label }}</span\r\n        >\r\n      </div>\r\n      <div class=\"icon_container\">\r\n        <div class=\"cri\">\r\n          <img class=\"like-pic\" src=\"@/assets/LikeBefore.svg\" />\r\n          <span class=\"cname\">{{ data.likeCount }}</span>\r\n        </div>\r\n        <div class=\"cri\">\r\n          <img class=\"like-pic\" src=\"@/assets/Comment.svg\" />\r\n          <span class=\"cname\">{{ data.commentCount }}</span>\r\n        </div>\r\n        <div>\r\n          <span class=\"ltime\">{{ data.createTime }} 发布了动态</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <el-empty \r\n        v-if=\"articles.length === 0 || !articles\" \r\n        :image-size=\"200\" \r\n        description=\"您还没有分享呢，快去创作吧！\"\r\n    />\r\n  </div>\r\n  <div v-if=\"dialogShowVisible\">\r\n      <ShareDialog v-model=\"dialogShowVisible\" :Id = shareId ></ShareDialog>\r\n  </div>\r\n</template>\r\n    \r\n<script setup>\r\n  import { ref, onMounted} from 'vue';\r\n  import axios from '@/utils/request';\r\n  import { fetchShareCoverage } from '@/utils/fileService'; \r\n  import { ElMessage } from 'element-plus';\r\n  import { useStore } from 'vuex';\r\n  import ShareDialog from '../../ShareShow/components/ShareDialog.vue';\r\n\r\n  const currentPage = ref(1);\r\n  const articles = ref([]);\r\n  const store = useStore();\r\n  const id = store.state.favoriteShareTest;\r\n  const dialogShowVisible = ref(false);//控制分享展示弹框是否展示\r\n  const shareId = ref(null);\r\n\r\n  // 添加一个锁状态\r\n  let isLoading = false;\r\n  async function load() {\r\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n      isLoading = true; // 开始加载数据，设置锁状态为true\r\n      try {\r\n          if(currentPage.value === 1){\r\n            currentPage.value++;\r\n          }\r\n          await getColumnShareList(currentPage.value);\r\n          currentPage.value++; // 只有在请求成功完成后才递增页码\r\n      } catch (error) {\r\n          console.error(error);\r\n          ElMessage.error('滚动时的未知错误');\r\n      } finally {\r\n          isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n      }\r\n  }\r\n\r\n  async function getColumnShareList(currentPage) {\r\n    try {\r\n      const response = await axios.get('/favorite/share', {\r\n        params: {\r\n          id: id,\r\n          page: currentPage,\r\n          pageSize: 10, \r\n        }\r\n      });\r\n      if (response.data.code === 1) {\r\n        const updates = response.data.data.records.map(async (share) => {\r\n          const coverPicture = await fetchShareCoverage(share.id);\r\n          return {\r\n            ...share,\r\n            coverPicture\r\n          };\r\n        });\r\n        const updatedShares = await Promise.all(updates);\r\n        articles.value = [...articles.value, ...updatedShares];\r\n      } else if (response.data.code === 0 && response.data.msg) {\r\n        ElMessage.error(response.data.msg.toString());\r\n      } else {\r\n        console.error(\"获取收藏的分享列表失败\");\r\n        ElMessage.error('获取收藏的分享列表失败');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"获取收藏的分享列表失败\", error);\r\n      ElMessage.error('获取收藏的分享列表失败');\r\n    }\r\n  }\r\n\r\n  const goToDetail = (item) =>{\r\n    shareId.value = item.id;\r\n    dialogShowVisible.value = true\r\n  }\r\n\r\n  // 生命周期钩子\r\n  onMounted(() => {\r\n    getColumnShareList(currentPage.value);\r\n  });\r\n\r\n</script>\r\n  \r\n<style scoped>\r\n.sharepage1 {\r\n  height: 81vh;\r\n  width: 100%;\r\n  overflow-y: auto; \r\n  overflow-x: hidden; \r\n}\r\n.cbutton{\r\n  border-bottom: 1px solid rgb(212, 212, 212);;\r\n  padding: 9px 1%;\r\n  width: 98%;\r\n}\r\n.tatitle{\r\n  color: #000; \r\n  text-align: center;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 23px;\r\n  line-height: 1.6; \r\n}\r\n.show {\r\n  width: 85%;\r\n  display: flex;\r\n  padding: 16px 5%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  gap: 10px;\r\n  border-radius: 16px;\r\n  border: 1px solid #e7e7e7;\r\n  background: #fffffc;\r\n  margin: 20px auto 40px;\r\n  box-shadow: 1px 1px 7px 0px rgb(112 112 112 / 16%);\r\n}\r\n.title {\r\n  color: #000;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 120%; /* 19.2px */\r\n}\r\n.content {\r\n  color: #000;\r\n  font-size: 14px;\r\n  min-height: 40px;\r\n  line-height: 1.6; \r\n  width: 100%;\r\n  flex-shrink: 0;\r\n}\r\n.lablecontainer {\r\n  width: 690px;\r\n  position: relative;\r\n  display: flex; \r\n  flex-direction: row; \r\n  gap: 10px; \r\n}\r\n.lable {\r\n  display: flex;\r\n  padding: 3px 8px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  border-radius: 16px;\r\n  border: 1px solid #a6a6a6;\r\n  backdrop-filter: blur(10px);\r\n  color: #7d88af;\r\n  font-size: 12px;\r\n}\r\n.ltime {\r\n  position: absolute;\r\n  right: 0px;\r\n  transform: translateY(-50%);\r\n  color: #666666;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  line-height: 1.6;\r\n}\r\n.pic {\r\n  width: 190px;\r\n  height: 160px;\r\n}\r\n.piccontainer{\r\n  display: flex;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n  gap: 1rem calc((100% - 760px)/3);\r\n}\r\n.icon_container {\r\n  display: flex;\r\n  gap: 20px;\r\n  width: 100%;\r\n  position: relative;\r\n  height: 16px;\r\n  align-items: center;\r\n  margin-top: 5px;\r\n}\r\n.cri {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\n.like-pic {\r\n  display: block;\r\n  margin: auto;\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 2px;\r\n  cursor: pointer;\r\n}\r\n\r\n.cname {\r\n  color: #2d2d2d;\r\n  font-size: 13px;\r\n  display: inline-block;\r\n}\r\n/* 调整滚动条宽度和颜色 */\r\n::-webkit-scrollbar {\r\n    width: 6px; /* 增加纵向滚动条的宽度 */\r\n    height: 8px; /* 增加横向滚动条的高度 */\r\n    background: transparent;\r\n}\r\n\r\n/* 定义滚动条轨道，设置为透明 */\r\n::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 8px rgba(0, 0, 0, 0); /* 内阴影 */\r\n    background: transparent; /* 将轨道背景设置为透明 */\r\n}\r\n\r\n/* 定义滑块，设置为浅灰色并增加内阴影 */\r\n::-webkit-scrollbar-thumb {\r\n    box-shadow: inset 0 0 8px rgba(145, 145, 145, 0.3); /* 添加淡灰色内阴影 */\r\n    background-color: #e2e2e2; /* 滑块的颜色改为浅灰色 */\r\n    border-radius: 10px; /* 保持圆角不变 */\r\n}\r\n/* 当鼠标悬停在滚动条滑块上时改变滑块的颜色 */\r\n::-webkit-scrollbar-thumb:hover {\r\n    background: #c8c8c8;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}