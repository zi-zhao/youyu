{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/VerifiedUser.svg';\nimport _imports_1 from '@/assets/Comment.svg';\nimport _imports_2 from '@/assets/More.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-40205f28\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"commont_body\"\n};\nconst _hoisted_2 = {\n  class: \"commentList-box\"\n};\nconst _hoisted_3 = {\n  class: \"commentInput\"\n};\nconst _hoisted_4 = {\n  class: \"commentList\",\n  \"infinite-scroll-distance\": \"100\",\n  \"infinite-scroll-immediate\": \"false\"\n};\nconst _hoisted_5 = [\"onMouseenter\", \"onMouseleave\"];\nconst _hoisted_6 = {\n  class: \"userPhoto_1\"\n};\nconst _hoisted_7 = [\"src\", \"onClick\"];\nconst _hoisted_8 = {\n  class: \"userComment1\"\n};\nconst _hoisted_9 = {\n  class: \"name-time\"\n};\nconst _hoisted_10 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"gap\": \"3px\"\n  }\n};\nconst _hoisted_11 = {\n  class: \"userName\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  src: _imports_0,\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\"\n  },\n  alt: \"\"\n};\nconst _hoisted_13 = {\n  class: \"commentDate\"\n};\nconst _hoisted_14 = {\n  class: \"content\"\n};\nconst _hoisted_15 = {\n  class: \"operationBar\"\n};\nconst _hoisted_16 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"gap\": \"3px\"\n  }\n};\nconst _hoisted_17 = [\"src\", \"onClick\"];\nconst _hoisted_18 = {\n  class: \"like-count\"\n};\nconst _hoisted_19 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"gap\": \"3px\"\n  }\n};\nconst _hoisted_20 = [\"onClick\"];\nconst _hoisted_21 = {\n  class: \"like-count\"\n};\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = [\"onClick\"];\nconst _hoisted_24 = [\"onMouseleave\"];\nconst _hoisted_25 = {\n  key: 0,\n  class: \"userinput2\"\n};\nconst _hoisted_26 = [\"onClick\"];\nconst _hoisted_27 = {\n  key: 1\n};\nconst _hoisted_28 = [\"onMouseenter\", \"onMouseleave\"];\nconst _hoisted_29 = {\n  class: \"userPhoto_2\"\n};\nconst _hoisted_30 = [\"src\", \"onClick\"];\nconst _hoisted_31 = {\n  class: \"userComment2\"\n};\nconst _hoisted_32 = {\n  class: \"name-time\"\n};\nconst _hoisted_33 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"gap\": \"3px\"\n  }\n};\nconst _hoisted_34 = {\n  class: \"userName2\"\n};\nconst _hoisted_35 = {\n  key: 0,\n  src: _imports_0,\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\"\n  },\n  alt: \"\"\n};\nconst _hoisted_36 = {\n  class: \"commentDate2\"\n};\nconst _hoisted_37 = {\n  class: \"content2\"\n};\nconst _hoisted_38 = {\n  class: \"operationBar2\"\n};\nconst _hoisted_39 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"gap\": \"3px\"\n  }\n};\nconst _hoisted_40 = [\"src\", \"onClick\"];\nconst _hoisted_41 = {\n  class: \"like-count2\"\n};\nconst _hoisted_42 = [\"onClick\"];\nconst _hoisted_43 = [\"onMouseleave\"];\nconst _hoisted_44 = {\n  class: \"bottom\"\n};\nconst _hoisted_45 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _directive_infinite_scroll = _resolveDirective(\"infinite-scroll\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 一级评论 输入 \"), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_input, {\n    modelValue: $setup.levelOneCommentContent,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.levelOneCommentContent = $event),\n    modelModifiers: {\n      lazy: true,\n      trim: true\n    },\n    autosize: {\n      minRows: 1,\n      maxRows: 5\n    },\n    type: \"textarea\",\n    maxlength: \"200\",\n    \"show-word-limit\": \"true\",\n    resize: \"none\",\n    placeholder: \"发表你的评论吧\",\n    class: \"comment-input\",\n    style: {\n      \"width\": \"85%\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"button\", {\n    onClick: $setup.handlerlevelOneComment\n  }, \"评论\")]), _createCommentVNode(\" 评论渲染 \"), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createCommentVNode(\" 评论item \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.records, record => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: record.id\n    }, [_createCommentVNode(\" 一级评论 \"), _createElementVNode(\"div\", {\n      class: \"levelOneComment\",\n      onMouseenter: $event => record.showMore = true,\n      onMouseleave: $event => record.showMore = false\n    }, [_createCommentVNode(\" 一级评论用户头像 \"), _createElementVNode(\"div\", _hoisted_6, [record.newAvatar ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: record.newAvatar,\n      alt: \"\",\n      onClick: $event => $setup.navigateToUserProfile(record.userId),\n      style: {\n        cursor: 'pointer'\n      }\n    }, null, 8 /* PROPS */, _hoisted_7)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 一级评论内容 \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"p\", _hoisted_11, _toDisplayString(record.username), 1 /* TEXT */), record.verified === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_12)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 发布时间 \"), _createElementVNode(\"span\", _hoisted_13, _toDisplayString(record.createTime), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_14, _toDisplayString(record.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_15, [_createCommentVNode(\" 点赞 \"), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"img\", {\n      class: \"like-pic\",\n      src: record.state === 0 ? $setup.unlikedImage : $setup.likedImage,\n      onClick: $event => $setup.increaseCount(record)\n    }, null, 8 /* PROPS */, _hoisted_17), _createElementVNode(\"span\", _hoisted_18, _toDisplayString(record.likeCount), 1 /* TEXT */)]), _createCommentVNode(\" 评论 \"), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"img\", {\n      class: \"like-pic\",\n      src: _imports_1,\n      onClick: $event => $setup.handleSubComment(record.id)\n    }, null, 8 /* PROPS */, _hoisted_20), _createElementVNode(\"span\", _hoisted_21, _toDisplayString(record.replyCount), 1 /* TEXT */)]), _createCommentVNode(\" 回复 \"), _createElementVNode(\"span\", {\n      class: \"commentBtn\",\n      onClick: $event => $setup.toggleReplyBox(record.id, record.userId, record.username)\n    }, \"回复\", 8 /* PROPS */, _hoisted_22), _createCommentVNode(\" 更多 \"), record.showMore ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: _imports_2,\n      class: \"more\",\n      onClick: $event => record.showReported = true,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_23)) : _createCommentVNode(\"v-if\", true), record.showReported ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      class: \"hover-box\",\n      onMouseleave: $event => record.showReported = false\n    }, [_createElementVNode(\"div\", {\n      class: \"report-hover\",\n      onClick: _cache[1] || (_cache[1] = $event => $setup.dialogVisible2 = true)\n    }, \" 举报 \")], 40 /* PROPS, NEED_HYDRATION */, _hoisted_24)) : _createCommentVNode(\"v-if\", true)])])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), _createCommentVNode(\" 一级回复输入框 - 显示在每个一级评论的底下 \"), $setup.activeReplyBoxId === record.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_createVNode(_component_el_input, {\n      modelValue: $setup.replyCommentContent,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.replyCommentContent = $event),\n      modelModifiers: {\n        lazy: true,\n        trim: true\n      },\n      autosize: {\n        minRows: 1,\n        maxRows: 5\n      },\n      type: \"textarea\",\n      maxlength: \"200\",\n      \"show-word-limit\": \"true\",\n      resize: \"none\",\n      placeholder: \"文本中的评论将被发送\",\n      class: \"comment-input comment-smallinput\",\n      style: {\n        \"width\": \"85%\"\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"button\", {\n      onClick: $event => $setup.handleReplyToFirstLevelComment(record)\n    }, \" 评论 \", 8 /* PROPS */, _hoisted_26)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 二级评论 \"), record.showComments ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.repliesMap || [], reply => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: reply.id,\n        style: {\n          \"margin-left\": \"35px\"\n        }\n      }, [_createCommentVNode(\" 二级评论 \"), _createElementVNode(\"div\", {\n        class: \"leveltwoComment\",\n        onMouseenter: $event => reply.showMore = true,\n        onMouseleave: $event => reply.showMore = false\n      }, [_createCommentVNode(\" 二级评论用户头像 \"), _createElementVNode(\"div\", _hoisted_29, [reply.newAvatar ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        src: reply.newAvatar,\n        alt: \"\",\n        onClick: $event => $setup.navigateToUserProfile(reply.userId),\n        style: {\n          cursor: 'pointer'\n        }\n      }, null, 8 /* PROPS */, _hoisted_30)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 二级评论内容 \"), _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"p\", _hoisted_34, _toDisplayString(reply.username), 1 /* TEXT */), reply.verified === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_35)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"span\", _hoisted_36, _toDisplayString(reply.createTime), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_37, _toDisplayString(reply.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_38, [_createCommentVNode(\" 点赞图片 \"), _createElementVNode(\"div\", _hoisted_39, [_createElementVNode(\"img\", {\n        class: \"like-pic2\",\n        src: reply.state === 0 ? $setup.unlikedImage : $setup.likedImage,\n        onClick: $event => $setup.increaseCount2(reply)\n      }, null, 8 /* PROPS */, _hoisted_40), _createElementVNode(\"span\", _hoisted_41, _toDisplayString(reply.likeCount), 1 /* TEXT */)]), _createCommentVNode(\" 评论举报 \"), reply.showMore ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        src: _imports_2,\n        class: \"more\",\n        onClick: $event => reply.showReported = true,\n        alt: \"\"\n      }, null, 8 /* PROPS */, _hoisted_42)) : _createCommentVNode(\"v-if\", true), reply.showReported ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 1,\n        class: \"hover-box\",\n        onMouseleave: $event => reply.showReported = false\n      }, [_createElementVNode(\"div\", {\n        class: \"report-hover\",\n        onClick: _cache[3] || (_cache[3] = $event => $setup.dialogVisible2 = true)\n      }, \" 举报 \")], 40 /* PROPS, NEED_HYDRATION */, _hoisted_43)) : _createCommentVNode(\"v-if\", true)])])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_28), _createElementVNode(\"div\", _hoisted_44, [_createVNode($setup[\"ElPagination\"], {\n        \"current-page\": $setup.paginationStates[record.id].currentPage,\n        \"onUpdate:currentPage\": $event => $setup.paginationStates[record.id].currentPage = $event,\n        \"page-size\": $setup.paginationStates[record.id].pageSize,\n        \"onUpdate:pageSize\": $event => $setup.paginationStates[record.id].pageSize = $event,\n        small: _ctx.small,\n        layout: \"prev, pager, next\",\n        \"pager-count\": $setup.paginationStates[record.id].pageCount,\n        \"page-count\": $setup.paginationStates[record.id].pageCount,\n        onCurrentChange: newPage => $setup.handleCurrentChange(record.id, newPage)\n      }, null, 8 /* PROPS */, [\"current-page\", \"onUpdate:currentPage\", \"page-size\", \"onUpdate:pageSize\", \"small\", \"pager-count\", \"page-count\", \"onCurrentChange\"])])]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])), [[_directive_infinite_scroll, $setup.load]])]), $setup.dialogVisible2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_45, [_createVNode($setup[\"CreportedDialog\"], {\n    modelValue: $setup.dialogVisible2,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.dialogVisible2 = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","style","src","alt","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","_createVNode","_component_el_input","$setup","levelOneCommentContent","$event","lazy","trim","autosize","minRows","maxRows","type","maxlength","resize","placeholder","onClick","handlerlevelOneComment","_hoisted_4","_Fragment","_renderList","records","record","key","id","onMouseenter","showMore","onMouseleave","_hoisted_6","newAvatar","navigateToUserProfile","userId","cursor","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_toDisplayString","username","verified","_hoisted_12","_hoisted_13","createTime","_hoisted_14","content","_hoisted_15","_hoisted_16","state","unlikedImage","likedImage","increaseCount","_hoisted_18","likeCount","_hoisted_19","handleSubComment","_hoisted_21","replyCount","toggleReplyBox","_hoisted_22","showReported","_cache","dialogVisible2","activeReplyBoxId","_hoisted_25","replyCommentContent","handleReplyToFirstLevelComment","_hoisted_26","showComments","_hoisted_27","repliesMap","reply","_hoisted_29","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","increaseCount2","_hoisted_41","_hoisted_44","paginationStates","currentPage","pageSize","small","_ctx","layout","pageCount","onCurrentChange","newPage","handleCurrentChange","load","_hoisted_45"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\ShareShow\\components\\DialogComment.vue"],"sourcesContent":["<template>\r\n  <div class=\"commont_body\">\r\n    <div class=\"commentList-box\">\r\n      <!-- 一级评论 输入 -->\r\n      <div class=\"commentInput\">\r\n          <el-input\r\n              v-model.lazy.trim=\"levelOneCommentContent\"\r\n              :autosize=\"{ minRows: 1, maxRows: 5 }\"\r\n              type=\"textarea\"\r\n              maxlength=\"200\"\r\n              show-word-limit=\"true\"\r\n              resize=\"none\"\r\n              placeholder=\"发表你的评论吧\"\r\n              class=\"comment-input\"\r\n              style=\"width: 85%;\"\r\n          />\r\n          <button @click=\"handlerlevelOneComment\">评论</button>\r\n      </div>\r\n\r\n      <!-- 评论渲染 -->\r\n      <div class=\"commentList\"  v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n        <!-- 评论item -->\r\n        <div v-for=\"record in records\" :key=\"record.id\" >\r\n          <!-- 一级评论 -->\r\n          <div class=\"levelOneComment\" @mouseenter=\"record.showMore = true\" @mouseleave=\"record.showMore = false\">\r\n              <!-- 一级评论用户头像 -->\r\n              <div class=\"userPhoto_1\">\r\n                  <img \r\n                  v-if=\"record.newAvatar\"\r\n                  :src=\"record.newAvatar\"\r\n                  alt=\"\"\r\n                  @click=\"navigateToUserProfile(record.userId)\"\r\n                  :style=\"{ cursor: 'pointer' }\"\r\n              >\r\n              </div>\r\n              <!-- 一级评论内容 -->\r\n              <div class=\"userComment1\">\r\n                  <div class=\"name-time\">\r\n                      <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                          <p class=\"userName\">{{ record.username }}</p>\r\n                          <img v-if=\"record.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n                      </div>\r\n                      <!-- 发布时间 -->\r\n                      <span class=\"commentDate\">{{ record.createTime }}</span>\r\n                  </div>\r\n                  <p class=\"content\">{{ record.content }}</p>\r\n                  <div class=\"operationBar\">\r\n                      <!-- 点赞 -->\r\n                      <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                          <img\r\n                              class=\"like-pic\"\r\n                              :src=\" record.state === 0 ? unlikedImage : likedImage\"\r\n                              @click=\"increaseCount(record)\"\r\n                          />\r\n                          <span class=\"like-count\">{{ record.likeCount }}</span>\r\n                      </div>\r\n                      <!-- 评论 -->\r\n                      <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                          <img class=\"like-pic\" src=\"@/assets/Comment.svg\"  @click=\"handleSubComment(record.id)\"/>\r\n                          <span class=\"like-count\">{{ record.replyCount }}</span>\r\n                      </div>\r\n                      <!-- 回复 -->\r\n                      <span class=\"commentBtn\" @click=\"toggleReplyBox(record.id,record.userId,record.username)\"\r\n                          >回复</span\r\n                      >\r\n                      <!-- 更多 -->\r\n                      <img src=\"@/assets/More.svg\" class=\"more\" v-if=\"record.showMore\" @click=\"record.showReported = true\" alt=\"\">\r\n                      <div class=\"hover-box\" v-if=\"record.showReported\" @mouseleave=\"record.showReported = false\">\r\n                          <div class=\"report-hover\" @click=\"dialogVisible2 = true\">\r\n                              举报\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <!-- 一级回复输入框 - 显示在每个一级评论的底下 -->\r\n          <div v-if=\"activeReplyBoxId === record.id\" class=\"userinput2\">\r\n              <el-input\r\n                  v-model.lazy.trim=\"replyCommentContent\"\r\n                  :autosize=\"{ minRows: 1, maxRows: 5 }\"\r\n                  type=\"textarea\"\r\n                  maxlength=\"200\"\r\n                  show-word-limit=\"true\"\r\n                  resize=\"none\"\r\n                  placeholder=\"文本中的评论将被发送\"\r\n                  class=\"comment-input comment-smallinput\"\r\n                  style=\"width: 85%;\"\r\n              />\r\n              <button @click=\"handleReplyToFirstLevelComment(record)\">\r\n                评论\r\n              </button>\r\n          </div>\r\n\r\n          <!-- 二级评论 -->\r\n          <div v-if=\"record.showComments\" >\r\n            <div\r\n              v-for=\"reply in repliesMap || []\"\r\n              :key=\"reply.id\"\r\n              style=\"margin-left: 35px;\"\r\n            >\r\n              <!-- 二级评论 -->\r\n              <div class=\"leveltwoComment\" @mouseenter=\"reply.showMore = true\" @mouseleave=\"reply.showMore = false\">\r\n                  <!-- 二级评论用户头像 -->\r\n                  <div class=\"userPhoto_2\">\r\n                  <img \r\n                      v-if=\"reply.newAvatar\"\r\n                      :src=\"reply.newAvatar\"\r\n                      alt=\"\"\r\n                      @click=\"navigateToUserProfile(reply.userId)\"\r\n                      :style=\"{ cursor: 'pointer' }\"\r\n                  >\r\n                  </div>\r\n                  <!-- 二级评论内容 -->\r\n                  <div class=\"userComment2\">\r\n                      <div class=\"name-time\">\r\n                          <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                              <p class=\"userName2\">{{ reply.username }}</p>\r\n                              <img  v-if=\"reply.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n                          </div>\r\n                          <span class=\"commentDate2\">{{ reply.createTime }}</span>\r\n                      </div>\r\n                      <p class=\"content2\">{{ reply.content }}</p>\r\n                      <div class=\"operationBar2\">\r\n                          <!-- 点赞图片 -->\r\n                          <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                              <img\r\n                                  class=\"like-pic2\"\r\n                                  :src=\"reply.state === 0 ? unlikedImage : likedImage\"\r\n                                  @click=\"increaseCount2(reply)\"\r\n                              />\r\n                              <span class=\"like-count2\">{{ reply.likeCount }}</span>\r\n                          </div>\r\n                          <!-- 评论举报 -->\r\n                          <img src=\"@/assets/More.svg\" class=\"more\" v-if=\" reply.showMore\" @click=\" reply.showReported = true\" alt=\"\">\r\n                          <div class=\"hover-box\" v-if=\" reply.showReported\" @mouseleave=\" reply.showReported = false\">\r\n                              <div class=\"report-hover\" @click=\"dialogVisible2 = true\">\r\n                              举报\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"bottom\">\r\n                <el-pagination\r\n                  v-model:current-page=\"paginationStates[record.id].currentPage\"\r\n                  v-model:page-size=\"paginationStates[record.id].pageSize\"\r\n                  :small=\"small\"\r\n                  layout=\"prev, pager, next\"\r\n                  :pager-count=\"paginationStates[record.id].pageCount\"\r\n                  :page-count=\"paginationStates[record.id].pageCount\"\r\n                  @current-change=\"newPage => handleCurrentChange(record.id, newPage)\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"dialogVisible2\">\r\n      <CreportedDialog v-model=\"dialogVisible2\" ></CreportedDialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script setup>\r\nimport { ElMessage,ElPagination } from 'element-plus';\r\nimport axios from \"@/utils/request\";\r\nimport { ref,defineProps,onMounted,reactive } from \"vue\";\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport unlikedImage from '@/assets/LikeBefore.svg';//点赞前图片\r\nimport likedImage from '@/assets/LikeAfter.svg';//点赞后图片\r\nimport { useRouter } from 'vue-router';\r\nimport CreportedDialog from '@/page/components/CreportedDialog.vue';\r\nimport { formatDateTime} from '@/utils/timeFormat'; \r\nimport { openUrl } from '@/utils/routeJudge'\r\n\r\nconst dialogVisible2 = ref(false);//控制评论举报弹框是否显示\r\n\r\nconst props = defineProps({\r\n    shareId : Number,\r\n    shareAuthorId : Number,\r\n    shareAuthorName : String,\r\n    shareTitle : String\r\n});\r\n\r\nconst currentPage = ref(1);\r\nconst router = useRouter();\r\nlet userId = localStorage.getItem(\"userId\");\r\nlet userName = localStorage.getItem(\"userName\");\r\nconst records = ref([]); //储存一级评论列表\r\nconst repliesMap = ref({}); // 存储每个一级评论ID对应的二级评论列表\r\nconst newUserAvater = ref();//存放用户自己的头像\r\nconst paginationStates = reactive({});//存储每个分页器\r\n\r\nconst initPaginationState = (recordId) => {\r\n  if (!paginationStates[recordId]) {\r\n    paginationStates[recordId] = {\r\n      currentPage: 1, //分页器中的当前页数\r\n      pageSize: 3, //分页器中的每页呈现数据条数\r\n      pageCount: 0,//分页器中总页数\r\n      pagerCount: 5,//分页器最多显示几个页码\r\n    };\r\n  }\r\n};\r\n  \r\n//分页器中获取新的页码\r\nconst handleCurrentChange = (commentId, currentChange) => {\r\n  if (paginationStates[commentId]) {\r\n    paginationStates[commentId].currentPage = currentChange;\r\n    fetchReplies(commentId, paginationStates[commentId].currentPage, paginationStates[commentId].pageSize);\r\n  }\r\n};\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n      if(currentPage.value === 1){\r\n        currentPage.value++;\r\n      }\r\n      await fetchComments(props.shareId,currentPage.value);\r\n      currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n//点击用户头像进行跳转\r\nconst navigateToUserProfile = (user_id) => {\r\n  console.log('点击用户头像跳转');\r\n  if(user_id == userId){\r\n    // const routeLocation = router.resolve({ path: '/PersonalPage' });\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl('/PersonalPage')\r\n  }else{\r\n    // const routeLocation = router.resolve({ path: `/OtherUserPersonalPage/${user_id}`});\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl(`/OtherUserPersonalPage/${user_id}`)\r\n  }\r\n};\r\n\r\n  //获取一级评论并获取对应的二级评论（调用fetchReplies）\r\n  const fetchComments = async (shareId,currentPage) => {\r\n  try {\r\n    const response = await axios.get(\"/comment/list\", {\r\n      params: {\r\n        pageSize: 10,\r\n        currentPage: currentPage,\r\n        articleId: shareId,\r\n        type:1,\r\n      },\r\n    });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n      response.data.data.records.forEach(record => initPaginationState(record.id));\r\n      const updates = response.data.data.records.map(async (record) => {\r\n        const newAvatar = await getUsersAvatarFromCOS(record.userId);\r\n        const verified = await fetchUserInformation(record.userId);\r\n        return {\r\n          ...record,\r\n          showReported: false, // 控制评论的举报按钮是否显示\r\n          showMore: false, // 控制评论“more”图标是否显示\r\n          newAvatar,\r\n          verified,\r\n          showComments: false,\r\n        };\r\n      });\r\n      const updatedRecords = await Promise.all(updates);\r\n      records.value = [...records.value, ...updatedRecords];\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n      // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error( \"获取一级评论数据失败:\", response.data.msg || \"Unknown error\" );\r\n      ElMessage.error('获取分享评论失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"请求一级评论接口失败:\", error.message);\r\n    ElMessage.error('获取分享评论失败');\r\n  }\r\n};\r\n\r\n\r\n//根据一级评论id获取对应二级评论\r\nconst fetchReplies = async (commentId,currentPage,pageSize) => {\r\n  try {\r\n    const response = await axios.get(\"/comment/reply/list\", {\r\n      params: {\r\n        pageSize: pageSize,\r\n        currentPage: currentPage,\r\n        commentId: commentId,\r\n      },\r\n    });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n      if (paginationStates[commentId]) {\r\n        paginationStates[commentId].pageCount = Math.ceil(response.data.data.total / pageSize);\r\n      }\r\n      const updates = response.data.data.records.map(async (record) => {\r\n        const newAvatar = await getUsersAvatarFromCOS(record.userId);\r\n        const verified = await fetchUserInformation(record.userId);\r\n        return {\r\n          ...record,\r\n          showReported: false, // 控制评论的举报按钮是否显示\r\n          showMore: false, // 控制评论“more”图标是否显示\r\n          newAvatar,\r\n          verified,\r\n        };\r\n      });\r\n      const updatedRecords = await Promise.all(updates);\r\n      repliesMap.value = [...repliesMap.value, ...updatedRecords];\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n      // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error(\"获取二级评论接口失败\", response.data.msg || \"Unknown error\");\r\n      ElMessage.error('获取二级评论接口失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取二级评论接口失败\", error.message);\r\n    ElMessage.error('获取二级评论接口失败');\r\n  }\r\n};\r\n\r\n//点击一级评论的评论按钮，展开对应的二级评论\r\nconst handleSubComment =(recordId) =>{\r\n  const record = records.value.find(r => r.id === recordId);\r\n  if (record) {\r\n    record.showComments = !record.showComments;\r\n  }\r\n  if (record.showComments) {\r\n    // 初始化分页状态，如果尚未初始化\r\n    initPaginationState(recordId);\r\n    // 使用该一级评论的分页状态来获取二级评论\r\n    fetchReplies(recordId, paginationStates[recordId].currentPage, paginationStates[recordId].pageSize);\r\n  }\r\n}\r\n  \r\n//最顶部的评论框提交的相关接口\r\nconst levelOneCommentContent = ref(\"\");\r\nconst handlerlevelOneComment = async () => {\r\n  if (!levelOneCommentContent.value) {\r\n    ElMessage.error(\"评论内容不能为空!\");\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.post(\"/comment/send\", {\r\n      authorId:props.shareAuthorId,\r\n      authorName:props.shareAuthorName,\r\n      worksId: props.shareId,\r\n      worksTitle:props.shareTitle,\r\n      userId: userId,\r\n      username: userName,\r\n      content: levelOneCommentContent.value,\r\n      type:1,\r\n    });\r\n    if (response.data.code === 1) {\r\n      const newReplyId = response.data.map.id;\r\n      ElMessage.success(\"评论成功!\");\r\n      const time = new Date();\r\n      // 假设并构造新的评论\r\n      const newComment = {\r\n        id: newReplyId, // 临时ID，实际应用中这应该是由后台返回的\r\n        username: userName, // 假设的用户名，实际上可以从用户会话或其他地方获取\r\n        newAvatar: newUserAvater.value,\r\n        content: levelOneCommentContent.value,\r\n        createTime: formatDateTime(time), // 使用当前时间作为评论时间\r\n        state:0, // 初始状态下，该评论未被点赞\r\n        likeCount: 0,\r\n        replyCount: 0,\r\n        articleId: props.shareId, // 假设的分享ID\r\n      };\r\n      // 将新评论添加到records数组的开头\r\n      records.value.unshift(newComment);\r\n      // 清除评论输入框的内容\r\n      levelOneCommentContent.value = \"\";\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      ElMessage.error(\"评论失败: \" + (response.data.msg || \"未知错误\"));\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"提交评论时出现错误: \" + error.message);\r\n  }\r\n};\r\n\r\n//一级评论框的内容获取\r\nconst replyCommentContent = ref(\"\");\r\nconst handleReplyToFirstLevelComment = async (comment) => {\r\n  if (!replyCommentContent.value) {\r\n    ElMessage.error(\"回复内容不能为空!\");\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.post(\"/comment/reply/send\", {\r\n      userId: userId, // 假设用户ID\r\n      username: userName,\r\n      worksId: props.shareId,\r\n      worksTitle:props.shareTitle,\r\n      commentId: comment.id,\r\n      content: replyCommentContent.value,\r\n      type:1,\r\n    });\r\n    if (response.data.code === 1) {\r\n      ElMessage.success(\"回复成功!\");\r\n      // 折叠回复框\r\n      activeReplyBoxId.value = null;\r\n      replyCommentContent.value = \"\"; // 重置回复内容\r\n      comment.showComments = false;\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      ElMessage.error(\"回复失败: \" + (response.data.msg || \"未知错误\"));\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"提交回复时出现错误: \" + error.message);\r\n  }\r\n};\r\n\r\n//一级评论的点赞接口，接受一个 record 作为参数\r\nasync function increaseCount(record) {\r\n  try {\r\n    const config = record.state === 0\r\n      ? {\r\n        method: 'put',\r\n        url: `/comment/like`,\r\n        params: { id: record.id , userId : record.userId}\r\n      }\r\n      : {\r\n        method: 'delete',\r\n        url: `/comment/unlike`,\r\n        params: { id: record.id , userId : record.userId}\r\n      };\r\n    const response = await axios(config);\r\n    if (response.data && response.data.code === 1) {\r\n      record.state  = record.state === 0 ? 1 : 0;\r\n      record.likeCount = response.data.data;\r\n      console.log('点赞/取消赞 成功');\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n        console.error(response.data.msg || 'Unknown error');\r\n    }\r\n  } catch (error) {\r\n    console.error('获取点赞状态失败', error.message);\r\n  }\r\n}\r\n\r\n  //二级评论的点赞接口，接受一个 reply 作为参数\r\n  async function increaseCount2(reply) {\r\n  try {\r\n    const config = reply.state === 0\r\n      ? {\r\n        method: 'put',\r\n        url: `comment/reply/like`,\r\n        params: { id: reply.id , userId : reply.userId}\r\n      }\r\n      : {\r\n        method: 'delete',\r\n        url: `/comment/reply/unlike`,\r\n        params: { id: reply.id , userId : reply.userId}\r\n      };\r\n    const response = await axios(config);\r\n    if (response.data && response.data.code === 1) {\r\n      reply.state  = reply.state === 0 ? 1 : 0;\r\n      reply.likeCount = response.data.data;\r\n      console.log('点赞/取消赞 成功');\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error(response.data.msg || 'Unknown error');\r\n    }\r\n  } catch (error) {\r\n    console.error('获取点赞状态失败', error.message);\r\n  }\r\n}\r\n\r\n//一级回复框的折叠（点击回复后出现）\r\nconst activeReplyBoxId = ref(null);\r\nconst toggleReplyBox = (id) => {\r\n  activeReplyBoxId.value = activeReplyBoxId.value === id ? null : id;\r\n};\r\n  \r\nonMounted(async () => {\r\n  newUserAvater.value = await getUsersAvatarFromCOS(userId);\r\n  fetchComments(props.shareId,currentPage.value);\r\n})\r\n\r\n\r\n    // 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n  try {\r\n    const response = await axios.get(`/users/${userId}`);\r\n    if(response.data.code === 1){\r\n      return (response.data.data.verified);\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n      ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n      ElMessage.error('获取用户信息失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户信息失败\", error);\r\n    ElMessage.error('获取用户信息失败');\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.commont_body {\r\n  width: 100%;\r\n  margin-left: 138px;\r\n  height: auto;\r\n  margin: 0px auto;\r\n}\r\n\r\n.commentList-box {\r\n  margin: 10px auto;\r\n  width: 95%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n/*一级,二级,评论输入*/\r\n.commentInput {\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n.commentInput input {\r\n  width: 82%;\r\n  display: block;\r\n  box-sizing: border-box;\r\n  height: 30px;\r\n  border: 1px solid #ececec;\r\n  box-shadow: 0 1px 8px 2px rgb(0 0 0 / 7%);\r\n  border-radius: 18px;\r\n  outline: none;\r\n  padding: 0 30px 0 10px;\r\n  color: #666;\r\n}\r\n.commentInput button {\r\n  border-radius: 20px;\r\n  height: 25px;\r\n  padding: 0 12px;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  background-color: #9fa9ca;\r\n  cursor: pointer;\r\n}\r\n.commentInput button:active {\r\n  box-shadow: 1px 1px 5px 5px #999 inset;\r\n}\r\n/* 评论列表 */\r\n.commentList {\r\n  /* flex: 1; */\r\n  width: 100%;\r\n  padding-left: 5px;\r\n  margin-top: 2rem;\r\n}\r\n.levelOneComment {\r\n  width: 100%;\r\n  display: flex; \r\n  align-items: flex-start;\r\n  margin-bottom: 2.5rem;\r\n}\r\n/* 头像 */\r\n.userPhoto_1,\r\n.userPhoto_2 {\r\n  border-radius: 100%;\r\n  overflow: hidden;\r\n  margin-right: 15px;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.userPhoto_1 {\r\n  width: 40px;\r\n  height: 40px;\r\n}\r\n.userPhoto_2 {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n\r\n/* 一级评论内容 */\r\n.userComment1 {\r\n  width: 86%;\r\n}\r\n.name-time{\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n.userName {\r\n    color: #393939;\r\n    font-size: 14px;\r\n}\r\n.content {\r\n  margin: 1rem 0 1.5rem;\r\n  color: #000;\r\n  font-size: 14px;\r\n}\r\n.operationBar {\r\n  margin-bottom: 3px;\r\n  width: 90%;\r\n  justify-content: space-between;\r\n  display: flex; \r\n  align-items: center; \r\n  position: relative;\r\n}\r\n.commentDate {\r\n  color: #9b9b9b;\r\n  font-size: 12px;\r\n}\r\n.like-pic {\r\n  height: 14px;\r\n  width: 14px;\r\n  cursor: pointer;\r\n}\r\n.like-count {\r\n  display: inline-block;\r\n  width: 45px;\r\n  height: 12px;\r\n  color: #2d2d2d;;\r\n  font-size: 12px;\r\n  line-height: 12px;\r\n}\r\n.commentBtn {\r\n  color: #005b82;\r\n  font-size: 12px;\r\n  cursor: pointer; \r\n}\r\n::v-deep .el-icon{\r\n  position: absolute;\r\n  right: 0px;\r\n}\r\n.more{\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: -35px;\r\n}\r\n.hover-box{\r\n  position: absolute;\r\n  top: 15px ;\r\n  right: -42px;\r\n  width: 40px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px; \r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n.report-hover{\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  color: #5d5d5d;\r\n}\r\n/* 二级评论 */\r\n.userinput2 {\r\n  width: 89%;\r\n  padding: 14px;\r\n  display: flex;\r\n  margin: 2rem 0 2rem 1rem;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n.userinput2  input {\r\n  width: 82%;\r\n  display: block;\r\n  box-sizing: border-box;\r\n  height: 28px;\r\n  border: 1px solid #ececec;\r\n  border-radius:18px ;\r\n  outline: none;\r\n  padding: 0 10px 0 10px ;\r\n  box-shadow: 0 1px 8px 2px rgb(0 0 0 / 7%);\r\n  color: #666;\r\n}\r\n.userinput2  button {\r\n  border-radius: 20px;\r\n  height: 25px;\r\n  padding: 0 12px;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  background-color: #9fa9ca;\r\n}\r\n.userinput2  button:active {\r\n  box-shadow: 1px 1px 5px 5px #999 inset;\r\n}\r\n\r\n.userComment2 {\r\n  width: 86%;\r\n}\r\n.leveltwoComment {\r\n  display: flex;  \r\n  align-items: flex-start;  \r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n}\r\n.userName2 {\r\n  color: #393939;\r\n  font-size: 12px;\r\n}\r\n.content2 {\r\n  color: #000;\r\n  font-size: 12px;\r\n}\r\n\r\n.operationBar2 {\r\n  margin-bottom: 3px;\r\n  width: 65%;\r\n  justify-content: space-between;\r\n  display: flex; \r\n  align-items: center; \r\n  position: relative;\r\n}\r\n.commentDate2 {\r\n  color: #9b9b9b;\r\n  font-size: 10px;\r\n}\r\n.like-count2 {\r\n  display: inline-block;\r\n  width: 45px;\r\n  height: 12px;\r\n  color: #2d2d2d;;\r\n  font-size: 12px;\r\n  line-height: 12px;\r\n}\r\n.like-pic2 {\r\n  width: 16px;\r\n  height: 16px;\r\n  cursor: pointer;\r\n}\r\n.commentBtn2 {\r\n  color: #005B82;;\r\n  font-size: 12px;\r\n  cursor: pointer;  \r\n}\r\n.bottom{\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 20px 0 20px 2rem;\r\n}\r\n/* 分页器 */\r\n.el-pagination {\r\n    margin-left: 20%;\r\n}\r\n</style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}