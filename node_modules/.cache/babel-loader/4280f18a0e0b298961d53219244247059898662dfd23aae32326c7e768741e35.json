{"ast":null,"code":"import { ref, onMounted, computed, watch } from 'vue';\nimport axios from '@/utils/request.js';\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\nimport { convertDateFormat } from '@/utils/timeFormat';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'CreateAritle',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const currentPage = ref(1);\n    const articleNotification = ref([]);\n    let checked2 = ref(true);\n    let checked3 = ref(true);\n    let checked4 = ref(true);\n    const types = computed(() => {\n      let tempTypes = [];\n      if (checked2.value) tempTypes.push(0);\n      if (checked3.value) tempTypes.push(1);\n      if (checked4.value) tempTypes.push(2);\n      return tempTypes;\n    });\n    const typeString = computed(() => {\n      return types.value.join(',');\n    });\n\n    // 这里的代码会在`types`变化时重新运行\n    watch(types, () => {\n      currentPage.value = 1; // 重置页码\n      articleNotification.value.splice(0, articleNotification.value.length);\n      getIncomeNote(currentPage.value);\n    });\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getIncomeNote(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n    async function getIncomeNote(currentPage) {\n      try {\n        const response = await axios.get('/notice/income', {\n          params: {\n            type: typeString.value,\n            page: currentPage,\n            pageSize: 10\n          }\n        });\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\n          const updates = response.data.data.records.map(async record => {\n            const newAvatar = await getUsersAvatarFromCOS(record.userId);\n            const createTime = convertDateFormat(record.createTime);\n            const verified = await fetchUserInformation(record.userId);\n            return {\n              ...record,\n              newAvatar,\n              createTime,\n              verified\n            };\n          });\n          const updatedRecords = await Promise.all(updates);\n          articleNotification.value = [...articleNotification.value, ...updatedRecords];\n          console.log(response.data.data);\n        } else if (response.data.code === 1 && response.data.data.records.length === 0) {\n          // ElMessage.info('已加载所有数据');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else error => {\n          console.log(error);\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    // 获取用户信息\n    const fetchUserInformation = async userId => {\n      try {\n        const response = await axios.get(`/users/${userId}`);\n        if (response.data.code === 1) {\n          return response.data.data.verified;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取用户信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户信息失败\", error);\n        ElMessage.error('获取用户信息失败');\n      }\n    };\n    onMounted(() => {\n      getIncomeNote(currentPage.value);\n    });\n    const __returned__ = {\n      currentPage,\n      articleNotification,\n      get checked2() {\n        return checked2;\n      },\n      set checked2(v) {\n        checked2 = v;\n      },\n      get checked3() {\n        return checked3;\n      },\n      set checked3(v) {\n        checked3 = v;\n      },\n      get checked4() {\n        return checked4;\n      },\n      set checked4(v) {\n        checked4 = v;\n      },\n      types,\n      typeString,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getIncomeNote,\n      fetchUserInformation,\n      ref,\n      onMounted,\n      computed,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get getUsersAvatarFromCOS() {\n        return getUsersAvatarFromCOS;\n      },\n      get convertDateFormat() {\n        return convertDateFormat;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","watch","axios","getUsersAvatarFromCOS","convertDateFormat","ElMessage","currentPage","articleNotification","checked2","checked3","checked4","types","tempTypes","value","push","typeString","join","splice","length","getIncomeNote","isLoading","load","error","console","response","get","params","type","page","pageSize","data","code","records","updates","map","record","newAvatar","userId","createTime","verified","fetchUserInformation","updatedRecords","Promise","all","log","msg","toString"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/MessageCenter/component/CreateMessage/CreateAritle.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"first\">\r\n            <div class=\"one\">\r\n                <img src=\"@/assets/MessageCenter/three.svg\" alt=\"\">\r\n                <span>我的创作</span>\r\n            </div>\r\n            <div>\r\n                <el-checkbox v-model=\"checked2\" label=\"购买文章\" size=\"large\" @change=\"change\"/>\r\n                <el-checkbox v-model=\"checked3\" label=\"购买附件\" size=\"large\" @change=\"change\"/>\r\n                <el-checkbox v-model=\"checked4\" label=\"文章打赏\" size=\"large\" @change=\"change\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"then\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n            <div v-for=\"(source,index) in articleNotification\" :key=\"index\" class=\"box\">\r\n                <div v-if=\"source.type === 0\" class=\"large\">\r\n                    <img :src=source.newAvatar alt=\"\" class=\"cover\">\r\n                    <div class=\"text\">\r\n                        <div style=\"display: flex;align-items: center;\">\r\n                            <span class=\"name\">{{ source.username }}</span>\r\n                            <img  v-if=\"source.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin-left: -9px;\" alt=\"\">\r\n                        </div>\r\n                        <span class=\"middle\" style=\"margin-left: 10px;\">购买了我的文章</span>\r\n                        <span class=\"name\">{{ source.title }}</span>\r\n                        <span class=\"time\">{{ source.createTime }}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div v-if=\"source.type === 1\" class=\"large\">\r\n                    <img :src=source.newAvatar alt=\"\" class=\"cover\">\r\n                    <div class=\"text\">\r\n                        <div style=\"display: flex;align-items: center;\">\r\n                            <span class=\"name\">{{ source.username }}</span>\r\n                            <img  v-if=\"source.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin-left: -9px;\" alt=\"\">\r\n                        </div>\r\n                        <span class=\"middle\" style=\"margin-left: 10px;\">购买了文章</span>\r\n                        <span class=\"name\">{{ source.title }}</span>\r\n                        <span class=\"middle\">的附件</span>\r\n                        <span class=\"time\">{{ source.createTime }}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div v-if=\"source.type === 2\" class=\"large\">\r\n                    <img :src=source.newAvatar alt=\"\" class=\"cover\">\r\n                    <div class=\"text\">\r\n                        <div style=\"display: flex;align-items: center;\">\r\n                            <span class=\"name\">{{ source.username }}</span>\r\n                            <img  v-if=\"source.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin-left: -9px;\" alt=\"\">\r\n                        </div>\r\n                        <span class=\"middle\" style=\"margin-left: 10px;\">给我的文章</span>\r\n                        <span class=\"name\">{{ source.title }}</span>\r\n                        <span class=\"middle\">打赏了</span>\r\n                        <span class=\"number\">{{ source.coinCount }}</span>\r\n                        <span class=\"middle\">渔币</span>\r\n                        <span class=\"time\">{{ source.createTime }}</span>\r\n                    </div>\r\n                </div>\r\n                    \r\n            </div>\r\n            <el-empty \r\n                v-if=\"!articleNotification || articleNotification.length === 0\" \r\n                :image-size=\"200\" \r\n                description=\"您暂时还没有收到文章相关消息呢！\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {  ref,onMounted,computed,watch } from 'vue';\r\nimport axios from '@/utils/request.js';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport { convertDateFormat } from '@/utils/timeFormat';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nconst currentPage = ref(1);\r\nconst articleNotification = ref([]);\r\nlet checked2 =ref(true)\r\nlet checked3 =ref(true)\r\nlet checked4 =ref(true)\r\nconst types = computed(() => {\r\n    let tempTypes = [];\r\n    if (checked2.value) tempTypes.push(0);\r\n    if (checked3.value) tempTypes.push(1);\r\n    if (checked4.value) tempTypes.push(2);\r\n    return tempTypes;\r\n});\r\n\r\nconst typeString = computed(() => {\r\n    return types.value.join(',');\r\n});\r\n\r\n// 这里的代码会在`types`变化时重新运行\r\nwatch(types, () => {\r\n    currentPage.value = 1; // 重置页码\r\n    articleNotification.value.splice(0, articleNotification.value.length);\r\n    getIncomeNote(currentPage.value)\r\n})\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n        if(currentPage.value === 1){\r\n            currentPage.value++;\r\n        }\r\n        await getIncomeNote(currentPage.value);\r\n        currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n\r\nasync function getIncomeNote(currentPage) {\r\n    try {\r\n        const response = await axios.get('/notice/income', {\r\n            params: {\r\n                type: typeString.value,\r\n                page:currentPage,\r\n                pageSize:10,\r\n            }\r\n        });\r\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n            const updates = response.data.data.records.map(async (record) => {\r\n                const newAvatar = await getUsersAvatarFromCOS(record.userId);\r\n                const createTime = convertDateFormat(record.createTime);\r\n                const verified = await fetchUserInformation(record.userId);\r\n                return { ...record, newAvatar, createTime,verified };\r\n            });\r\n            const updatedRecords = await Promise.all(updates);\r\n            articleNotification.value = [...articleNotification.value, ...updatedRecords];\r\n            console.log(response.data.data);\r\n        }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n            // ElMessage.info('已加载所有数据');\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else(error)=>{\r\n            console.log(error);\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n    // 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\n\r\nonMounted(() => {\r\n    getIncomeNote(currentPage.value)\r\n})\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.first{\r\n    width: 77vw;\r\n    padding: 12px 12px 0px; \r\n    justify-content: center; \r\n    gap: 12px;\r\n    border-radius: 8px;\r\n    border: 2px solid #F0F0F0;\r\n    background: #FFF;\r\n    margin-top: 50px;\r\n}\r\n.one{\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n    align-items: center;\r\n}\r\n.one img{\r\n    width: 20px;\r\n    height: 20px;\r\n}\r\n.one span{\r\n    color: #6B757B;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    line-height: 1.6; \r\n    margin-left: 8px;\r\n}\r\n.then{\r\n    width: 77vw;\r\n    height: 72vh;\r\n    overflow-y: scroll;\r\n    padding: 12px 12px 0px;\r\n    border-radius: 8px;\r\n    border: 2px solid #F0F0F0;\r\n    margin-top: 12px;\r\n}\r\n.box{\r\n    width: 95%;\r\n    margin: 0px auto;\r\n    border-bottom:1px solid #e7e7e7;\r\n    display: flex;\r\n}\r\n.cover{\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 100%;\r\n}\r\n.name{\r\n    color: #000;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    line-height: 260%; \r\n    margin: 0 10px;\r\n}\r\n.middle{\r\n    color: #505050;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    line-height: 260%; \r\n}\r\n.text{\r\n    display: inline-block;\r\n}\r\n.time{\r\n    color: #A1A1A1;\r\n    font-size: 12px;\r\n    line-height: 120%; \r\n    position: absolute;\r\n    right: 0px;\r\n    top: 50%;\r\n}\r\n.aritle{\r\n    width: 70px;\r\n    height: 70px;\r\n    position: absolute;\r\n    right: 36px;\r\n    bottom: 10px;\r\n    top: 10px;\r\n}\r\n.large{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    width: 98%;\r\n    height: 100px;\r\n    position: relative;\r\n}\r\n.number{\r\n    color: #8490b6;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    line-height: 120%;\r\n    margin: 0 3px;\r\n}\r\n::v-deep .el-checkbox.el-checkbox--large{\r\n    width: 80px;\r\n}\r\n@media (max-width: 768px) {\r\n    .first,\r\n    .then{\r\n        width: 800px;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}