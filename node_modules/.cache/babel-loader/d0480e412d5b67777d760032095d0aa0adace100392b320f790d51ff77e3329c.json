{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from '../../utils/request';\nimport { ElMessage } from 'element-plus';\nimport { useRoute, useRouter } from 'vue-router';\nimport { getFistAnswerCOSPermission, getFirstQuestionPictureFromCOS } from '@/utils/cosService';\nimport { compressImage } from '@/utils/fileService';\nexport default {\n  __name: 'GoAnswer',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const route = useRoute();\n    const textarea = ref('');\n    const answererInfo = ref({});\n    const askQuestionPicture = ref({});\n    const answererInfoText = ref({});\n    const askerId = parseInt(route.params.askerId, 10); //路径中的提问者ID\n    const questionId = parseInt(route.params.questionId, 10); //路径中的问题id\n    const visibleRef = ref(false);\n    const indexRef = ref(0);\n    const onHide = () => visibleRef.value = false;\n    const fileName = ref();\n    const fileInput = ref(null);\n    const selectedImages = ref([]);\n    const imagePreviews = ref([]);\n\n    // 当点击按钮时触发文件输入框\n    const triggerImageUpload = () => {\n      if (selectedImages.value.length < 2) {\n        fileInput.value.click();\n      } else {\n        ElMessage.error('只能提交一张照片');\n      }\n    };\n\n    // 当文件选择后处理图片\n    const handleImage = async event => {\n      const file = event.target.files[0];\n      if (file && selectedImages.value.length < 2) {\n        const timestamp = new Date().getTime(); // 获取当前时间戳\n        fileName.value = `${timestamp}-${file.name}`; // 在文件名前加时间戳\n        const compressedFile = await compressImage(file);\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          imagePreviews.value.push(e.target.result); // 添加DataURL到imagePreviews\n          selectedImages.value.push(compressedFile); // 添加文件对象到selectedImages\n        };\n        reader.readAsDataURL(compressedFile);\n      }\n    };\n\n    //删除图片\n    const removeImage = index => {\n      selectedImages.value.splice(index, 1);\n      imagePreviews.value.splice(index, 1); // 也删除对应的预览\n    };\n\n    //答主第一次回答接口(提交文本)\n    async function acceptAnswer() {\n      try {\n        const queryParams = new URLSearchParams({\n          id: Number(questionId),\n          answerContent: textarea.value\n        }).toString();\n        const response = await axios.post(`/answer/myanswer/accept?${queryParams}`);\n        if (selectedImages.value.length > 0) {\n          await getFistAnswerCOSPermission(selectedImages.value[0], fileName.value, questionId);\n        }\n        if (response.data.code === 1) {\n          ElMessage.success('回答成功');\n          router.push('/DefaultPresentation');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"回答失败\");\n          ElMessage.error('回答失败');\n        }\n      } catch (error) {\n        console.error(\"回答失败\", error);\n        ElMessage.error('回答失败');\n      }\n    }\n\n    //获取提问者具体信息\n    async function getAnswererInfo() {\n      try {\n        const response = await axios.get(`/answer/${askerId}`);\n        if (response.data.code === 1) {\n          answererInfo.value = response.data.data;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取提问者具体信息失败\");\n          ElMessage.error('获取提问者具体信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取提问者具体信息失败\", error);\n        ElMessage.error('获取提问者具体信息失败');\n      }\n    }\n\n    //获取第一次提问的文字内容\n    async function getAnswererInfoText() {\n      try {\n        const response = await axios.get(`/answer/question/${questionId}`);\n        if (response.data.code === 1) {\n          answererInfoText.value = response.data.data;\n          if (answererInfoText.value.count === 1) {\n            askQuestionPicture.value = await getFirstQuestionPictureFromCOS(questionId);\n          }\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取第一次提问的文字内容失败\");\n          ElMessage.error('获取第一次提问的文字内容失败');\n        }\n      } catch (error) {\n        console.error(\"获取第一次提问的文字内容失败\", error);\n        ElMessage.error('获取第一次提问的文字内容失败');\n      }\n    }\n    onMounted(() => {\n      getAnswererInfo();\n      getAnswererInfoText();\n    });\n    const __returned__ = {\n      router,\n      route,\n      textarea,\n      answererInfo,\n      askQuestionPicture,\n      answererInfoText,\n      askerId,\n      questionId,\n      visibleRef,\n      indexRef,\n      onHide,\n      fileName,\n      fileInput,\n      selectedImages,\n      imagePreviews,\n      triggerImageUpload,\n      handleImage,\n      removeImage,\n      acceptAnswer,\n      getAnswererInfo,\n      getAnswererInfoText,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get getFistAnswerCOSPermission() {\n        return getFistAnswerCOSPermission;\n      },\n      get getFirstQuestionPictureFromCOS() {\n        return getFirstQuestionPictureFromCOS;\n      },\n      get compressImage() {\n        return compressImage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","ElMessage","useRoute","useRouter","getFistAnswerCOSPermission","getFirstQuestionPictureFromCOS","compressImage","router","route","textarea","answererInfo","askQuestionPicture","answererInfoText","askerId","parseInt","params","questionId","visibleRef","indexRef","onHide","value","fileName","fileInput","selectedImages","imagePreviews","triggerImageUpload","length","click","error","handleImage","event","file","target","files","timestamp","Date","getTime","name","compressedFile","reader","FileReader","onload","e","push","result","readAsDataURL","removeImage","index","splice","acceptAnswer","queryParams","URLSearchParams","id","Number","answerContent","toString","response","post","data","code","success","msg","console","getAnswererInfo","get","getAnswererInfoText","count"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/components/GoAnswer.vue"],"sourcesContent":["<!-- 问答中心——我的问题——收到的提问——未回答——点击接受回答跳转的第一次回答页面 -->\r\n<template>\r\n    <div class=\"bgc_box\">\r\n        <div class=\"large_box\">\r\n            <div class=\"top\">\r\n                <div class=\"one\">\r\n                    <span>回答</span>\r\n                    <div style=\"display: flex;align-items: center;\">\r\n                        <span class=\"text1\">{{ answererInfo.username }}</span>\r\n                        <!-- <img src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin: 0 10px 0 -9px;\" alt=\"\"> -->\r\n                    </div>\r\n                    <span>的提问</span>\r\n                </div>\r\n                <div class=\"btn-pc\" @click=\"acceptAnswer\">\r\n                    回答\r\n                </div>\r\n            </div>\r\n            <div class=\"main_box\">\r\n                <div class=\"ques\">\r\n                    <span style=\"font-size: 17px;font-weight: 700;\">问题:</span>\r\n                    <div class=\"ques-detail\">\r\n                        <span class=\"ques-content\">{{answererInfoText.title}}</span>\r\n                        <div v-if=\"answererInfoText.count === 1\">\r\n                            <img :src=\"askQuestionPicture\" alt=\"\" @click=\"visibleRef = true\">\r\n                        </div>\r\n                        <vue-easy-lightbox\r\n                            :visible=\"visibleRef\"\r\n                            :imgs=\"askQuestionPicture\"\r\n                            :index=\"indexRef\"\r\n                            @hide=\"onHide\"\r\n                        ></vue-easy-lightbox>\r\n                    </div>\r\n                </div>\r\n                <div >\r\n                    <span style=\"font-size: 17px;font-weight: 700;\">你的回答:</span>\r\n                    <div class=\"desc\">\r\n                        <el-input\r\n                            v-model=\"textarea\"\r\n                            maxlength=\"300\"\r\n                            placeholder=\"阐述一下你的回答吧…\"\r\n                            show-word-limit=\"20\"\r\n                            type=\"textarea\"\r\n                            size=\"large\"\r\n                            resize=\"none\"\r\n                            class=\"desc_input\"\r\n                        />\r\n                        <div class=\"uploadpic\">\r\n                            <input type=\"file\" ref=\"fileInput\" accept=\"image/*\" style=\"display: none;\" @change=\"handleImage\" />\r\n                            <!-- 如果没有图片预览，则显示上传提示 -->\r\n                            <div v-if=\"imagePreviews.length === 0\" class=\"tpic\" >\r\n                                <img @click=\"triggerImageUpload\"  class=\"add\" src=\"@/assets/QACenter/QuestionAddPic.svg\" alt=\"\" />\r\n                            </div>\r\n                            \r\n                            <!-- 如果有图片预览，则全屏显示图片 -->\r\n                            <div  class=\"pic-contain \">\r\n                                <div v-for=\"(imagePreview, index) in imagePreviews\" :key=\"index\" class=\"spic\" :style=\"{ backgroundImage: `url(${imagePreview})` }\">\r\n                                    <el-icon class=\"delete-btn\" @click=\"removeImage(index)\"><CircleCloseFilled /></el-icon>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style=\"width: 100%;display: flex;justify-content: flex-end;\">\r\n                    <div class=\"btn-phone\" @click=\"acceptAnswer\">\r\n                        回答\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref,onMounted } from 'vue'\r\nimport axios from '../../utils/request';\r\nimport { ElMessage } from 'element-plus';\r\nimport { useRoute,useRouter } from 'vue-router'\r\nimport { getFistAnswerCOSPermission,getFirstQuestionPictureFromCOS } from '@/utils/cosService'; \r\nimport {compressImage} from '@/utils/fileService';\r\n\r\n\r\nconst router = useRouter()\r\nconst route = useRoute ();\r\nconst textarea = ref('');\r\nconst answererInfo = ref({});\r\nconst askQuestionPicture = ref({});\r\nconst answererInfoText = ref({});\r\nconst askerId = parseInt(route.params.askerId,10);//路径中的提问者ID\r\nconst questionId = parseInt(route.params.questionId,10);//路径中的问题id\r\nconst visibleRef = ref(false);\r\nconst indexRef = ref(0);\r\nconst onHide = () => (visibleRef.value = false);\r\n\r\nconst fileName = ref();\r\nconst fileInput = ref(null);\r\nconst selectedImages = ref([]);\r\nconst imagePreviews = ref([]);\r\n\r\n\r\n\r\n// 当点击按钮时触发文件输入框\r\nconst triggerImageUpload = () => {\r\n  if (selectedImages.value.length < 2) {\r\n    fileInput.value.click();\r\n  } else {\r\n    ElMessage.error('只能提交一张照片');\r\n  }\r\n};\r\n\r\n// 当文件选择后处理图片\r\nconst handleImage = async (event) => {\r\n  const file = event.target.files[0];\r\n  if (file && selectedImages.value.length < 2) {\r\n    const timestamp = new Date().getTime(); // 获取当前时间戳\r\n    fileName.value = `${timestamp}-${file.name}`; // 在文件名前加时间戳\r\n    const compressedFile = await compressImage(file);\r\n    const reader = new FileReader();\r\n    reader.onload = function(e) {\r\n      imagePreviews.value.push(e.target.result);  // 添加DataURL到imagePreviews\r\n      selectedImages.value.push(compressedFile);  // 添加文件对象到selectedImages\r\n    };\r\n    reader.readAsDataURL(compressedFile);\r\n  }\r\n};\r\n\r\n//删除图片\r\nconst removeImage = (index) => {\r\n    selectedImages.value.splice(index, 1);\r\n    imagePreviews.value.splice(index, 1);  // 也删除对应的预览\r\n};\r\n\r\n\r\n//答主第一次回答接口(提交文本)\r\nasync function acceptAnswer() {\r\n  try{\r\n    const queryParams = new URLSearchParams({\r\n        id: Number(questionId),\r\n        answerContent: textarea.value\r\n    }).toString();\r\n    const response = await axios.post(`/answer/myanswer/accept?${queryParams}`);\r\n    if(selectedImages.value.length > 0){\r\n        await getFistAnswerCOSPermission( selectedImages.value[0],fileName.value,questionId);\r\n    }\r\n    if(response.data.code === 1){\r\n        ElMessage.success('回答成功');\r\n        router.push('/DefaultPresentation');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"回答失败\");\r\n        ElMessage.error('回答失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"回答失败\", error); \r\n    ElMessage.error('回答失败');\r\n  }\r\n}\r\n\r\n//获取提问者具体信息\r\nasync function getAnswererInfo() {\r\n  try{\r\n    const response = await axios.get(`/answer/${askerId}`)\r\n    if(response.data.code === 1){\r\n        answererInfo.value = response.data.data;\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n    console.error(\"获取提问者具体信息失败\");\r\n    ElMessage.error('获取提问者具体信息失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取提问者具体信息失败\", error); \r\n    ElMessage.error('获取提问者具体信息失败');\r\n  }\r\n}\r\n\r\n//获取第一次提问的文字内容\r\nasync function getAnswererInfoText() {\r\n  try{\r\n    const response = await axios.get(`/answer/question/${questionId}`)\r\n    if(response.data.code === 1){\r\n        answererInfoText.value = response.data.data;\r\n        if(answererInfoText.value.count === 1){\r\n            askQuestionPicture.value = await getFirstQuestionPictureFromCOS(questionId);\r\n        }\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n    console.error(\"获取第一次提问的文字内容失败\");\r\n    ElMessage.error('获取第一次提问的文字内容失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取第一次提问的文字内容失败\", error); \r\n    ElMessage.error('获取第一次提问的文字内容失败');\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n    getAnswererInfo();\r\n    getAnswererInfoText();\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.bgc_box{\r\n    width: 100%;\r\n    background: #F8F8F8;\r\n}\r\n.large_box{\r\n    width: 1020px;\r\n    margin: 0px auto;\r\n    padding: 0px 40px 20px;\r\n    border-radius: 16px;\r\n    background: #FFF;\r\n}\r\n.top{\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    padding-bottom: 4px;\r\n    height: 50px;\r\n    gap: 8px;\r\n    position: relative;\r\n}\r\n.text1{\r\n    color: #3F87E1;\r\n    margin: 0px 10px;\r\n    position: relative;\r\n}\r\n.one{\r\n    display: flex;\r\n}\r\n.one span{\r\n    font-weight: 700;\r\n}\r\n.top span{\r\n    font-size: 20px;\r\n}\r\n.btn-pc,\r\n.btn-phone{\r\n    width: 32px;\r\n    height: 19px;\r\n    padding: 8px 20px;\r\n    border-radius: 16px;\r\n    background: #9FA9CA;\r\n    color: #fff;\r\n    position: absolute;\r\n    right: 60px;\r\n    top: 8px;\r\n    cursor: pointer;\r\n}\r\n.main_box{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n}\r\n.ques{\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n.ques-detail{\r\n    width: 90%;\r\n    margin: 15px auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n.ques-content{\r\n    line-height: 1.6;\r\n}\r\n.ques-detail img{\r\n    width: 180px;\r\n    height: 180px;\r\n    border: 1px solid #DCDFE6;\r\n    border-radius: 10px;\r\n    margin: 20px 0px;\r\n}\r\n.desc{\r\n    width: 90%;\r\n    margin: 15px auto;\r\n}\r\n::v-deep .el-textarea__inner{\r\n    width: 100%;\r\n    height: 220px;\r\n    border-radius: 12px;\r\n    background: #fbfbfb;\r\n    padding: 8px 12px 12px 12px;\r\n}\r\n::v-deep .el-textarea .el-input__count{\r\n    bottom: 9px;\r\n    right: 13px;\r\n    background-color: #fbfbfb;\r\n}\r\n.uploadpic{\r\n    width: 100px;\r\n    height: 100px;\r\n    margin-top: 25px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 4px;\r\n    border: 1px solid #DCDFE6;\r\n    background: #fbfbfb;\r\n    cursor: pointer;\r\n}\r\n.spic{\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  border: 1px solid #bbbbbb;\r\n  border-radius: 4px;\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n.pic-contain{\r\n    position: relative;\r\n}\r\n.delete-btn {\r\n    position: absolute;\r\n    top: 2px;\r\n    right:1px;\r\n    cursor: pointer;\r\n}\r\n.btn-phone{\r\n    display: none;\r\n}\r\n.add{\r\n    width: 35px;\r\n    height: 35px;\r\n}\r\n@media (max-width: 768px) {\r\n    .large_box{\r\n        width: 90%;\r\n        padding: 0 5%;\r\n    }\r\n    .btn-pc{\r\n        display: none ;\r\n    }\r\n    .btn-phone{\r\n        display: flex;\r\n        position: initial;\r\n        margin-bottom: 1rem;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}