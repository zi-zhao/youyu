{"ast":null,"code":"import axios from \"./request\";\nimport JSZip from 'jszip';\nimport { onMounted, watch, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\n// const CHUNK_SIZE = 1 * 1024 * 1024;\n\n// 创建一个通用的文件获取函数\nasync function fetchFile(filePath) {\n  try {\n    const response = await axios.get(filePath, {\n      responseType: \"blob\"\n    });\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.onload = function (event) {\n        resolve(event.target.result);\n      };\n      reader.onerror = function (event) {\n        reject(event.target.error);\n      };\n      reader.readAsDataURL(response.data);\n    });\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\n// 压缩图片函数\nexport const compressImage = (file, maxWidth = 800, maxHeight = 600, quality = 0.7) => {\n  return new Promise((resolve, reject) => {\n    if (file.size <= 8 * 1024 * 1024) {\n      // 如果文件大小小于或等于8MB，则不压缩，直接返回原文件\n      resolve(file);\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = event => {\n      const img = new Image();\n      img.onload = () => {\n        let width = img.width;\n        let height = img.height;\n\n        // 计算缩放比例\n        const scaleWidth = maxWidth / width;\n        const scaleHeight = maxHeight / height;\n        const scale = Math.min(scaleWidth, scaleHeight);\n        width = scale < 1 ? width * scale : width;\n        height = scale < 1 ? height * scale : height;\n\n        // 创建canvas并绘制压缩后的图像\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0, width, height);\n\n        // 输出为blob\n        canvas.toBlob(blob => {\n          if (blob) {\n            // 创建压缩后的图像文件对象\n            const compressedFile = new File([blob], file.name, {\n              type: \"image/jpeg\",\n              lastModified: Date.now()\n            });\n            resolve(compressedFile);\n          } else {\n            reject(new Error(\"Canvas toBlob failed\"));\n          }\n        }, \"image/jpeg\", quality);\n      };\n      img.onerror = reject;\n      img.src = event.target.result;\n    };\n    reader.onerror = reject;\n    reader.readAsDataURL(file);\n  });\n};\n\n//解压缩图片，用于分享图片的获取\nconst fetchAndExtractImages = async filePath => {\n  try {\n    const response = await axios.get(filePath, {\n      responseType: 'arraybuffer'\n    });\n    const zip = new JSZip();\n    const data = await zip.loadAsync(response.data);\n    const extractedImages = [];\n    for (let filename in data.files) {\n      const file = data.files[filename];\n      if (!file.dir && /\\.(png|jpg|jpeg|gif)$/.test(filename)) {\n        const blobData = await file.async('blob');\n        const imageUrl = URL.createObjectURL(blobData);\n        extractedImages.push(imageUrl);\n      }\n    }\n    return extractedImages;\n  } catch (error) {\n    console.error(\"Error while fetching or processing zip:\", error);\n    return [];\n  }\n};\n\n//读取用户头像\nexport async function fetchUserAvatar(id) {\n  const filePath = `/file/users/avatar/${id}`;\n  return fetchFile(filePath);\n}\n//读取主页文章封面\nexport async function fetchArticleCoverage(articleId) {\n  const filePath = `/file/article/coverage/${articleId}`;\n  return fetchFile(filePath);\n}\n//读取分享组图\nexport async function fetchShareCoverage(shareId) {\n  const filePath = `/file/share/picture/${shareId}`;\n  return fetchAndExtractImages(filePath);\n}\n//读取新闻封面\nexport async function fetchNewsCoverage(id) {\n  const filePath = `/file/news/coverage/${id}`;\n  return fetchFile(filePath);\n}\n//读取专栏封面\nexport async function fetchColumnCoverage(columnId) {\n  const filePath = `/file/column/${columnId}`;\n  return fetchFile(filePath);\n}\n//读取收藏封面\nexport async function fetchFavoriteCoverage(favoriteId) {\n  const filePath = `/file/favorite/${favoriteId}`;\n  return fetchFile(filePath);\n}\n//读取提问图片\nexport async function fetchQuestionPicture(questionId) {\n  const filePath = `/file/question/${questionId}`;\n  return fetchAndExtractImages(filePath);\n}\n//读取回答图片\nexport async function fetchAnswerPicture(questionId) {\n  const filePath = `/file/answer/${questionId}`;\n  return fetchFile(filePath);\n}\n//设置标题\nexport function PageTitle(initialTitle) {\n  const pageTitle = ref(initialTitle);\n  onMounted(() => {\n    document.title = pageTitle.value;\n  });\n  watch(pageTitle, newTitle => {\n    document.title = newTitle;\n  });\n\n  // 提供一个函数来更新页面标题\n  function setPageTitle(newTitle) {\n    pageTitle.value = newTitle;\n  }\n  return setPageTitle;\n}\n\n//判断设备是否为手机端，若是，将windows.open方法改为router.push\nexport const useNavigation = () => {\n  const router = useRouter();\n  const navigate = path => {\n    if (/Mobi|Android|iPhone/i.test(navigator.userAgent)) {\n      router.push(path);\n    } else {\n      const routeLocation = router.resolve({\n        path\n      });\n      window.open(routeLocation.href, \"_blank\");\n    }\n  };\n  return navigate;\n};","map":{"version":3,"names":["axios","JSZip","onMounted","watch","ref","useRouter","fetchFile","filePath","response","get","responseType","reader","FileReader","Promise","resolve","reject","onload","event","target","result","onerror","error","readAsDataURL","data","console","compressImage","file","maxWidth","maxHeight","quality","size","img","Image","width","height","scaleWidth","scaleHeight","scale","Math","min","canvas","document","createElement","ctx","getContext","drawImage","toBlob","blob","compressedFile","File","name","type","lastModified","Date","now","Error","src","fetchAndExtractImages","zip","loadAsync","extractedImages","filename","files","dir","test","blobData","async","imageUrl","URL","createObjectURL","push","fetchUserAvatar","id","fetchArticleCoverage","articleId","fetchShareCoverage","shareId","fetchNewsCoverage","fetchColumnCoverage","columnId","fetchFavoriteCoverage","favoriteId","fetchQuestionPicture","questionId","fetchAnswerPicture","PageTitle","initialTitle","pageTitle","title","value","newTitle","setPageTitle","useNavigation","router","navigate","path","navigator","userAgent","routeLocation","window","open","href"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/utils/fileService.js"],"sourcesContent":["import axios from \"./request\";\r\nimport JSZip from 'jszip';\r\nimport { onMounted, watch, ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\n// const CHUNK_SIZE = 1 * 1024 * 1024;\r\n\r\n// 创建一个通用的文件获取函数\r\nasync function fetchFile(filePath) {\r\n  try {\r\n    const response = await axios.get(filePath, {\r\n      responseType: \"blob\",\r\n    });\r\n\r\n    const reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      reader.onload = function (event) {\r\n        resolve(event.target.result);\r\n      };\r\n      reader.onerror = function (event) {\r\n        reject(event.target.error);\r\n      };\r\n      reader.readAsDataURL(response.data);\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// 压缩图片函数\r\nexport const compressImage = (\r\n  file,\r\n  maxWidth = 800,\r\n  maxHeight = 600,\r\n  quality = 0.7\r\n) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (file.size <= 8 * 1024 * 1024) {\r\n      // 如果文件大小小于或等于8MB，则不压缩，直接返回原文件\r\n      resolve(file);\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        let width = img.width;\r\n        let height = img.height;\r\n\r\n        // 计算缩放比例\r\n        const scaleWidth = maxWidth / width;\r\n        const scaleHeight = maxHeight / height;\r\n        const scale = Math.min(scaleWidth, scaleHeight);\r\n        width = scale < 1 ? width * scale : width;\r\n        height = scale < 1 ? height * scale : height;\r\n\r\n        // 创建canvas并绘制压缩后的图像\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0, width, height);\r\n\r\n        // 输出为blob\r\n        canvas.toBlob(\r\n          (blob) => {\r\n            if (blob) {\r\n              // 创建压缩后的图像文件对象\r\n              const compressedFile = new File([blob], file.name, {\r\n                type: \"image/jpeg\",\r\n                lastModified: Date.now(),\r\n              });\r\n              resolve(compressedFile);\r\n            } else {\r\n              reject(new Error(\"Canvas toBlob failed\"));\r\n            }\r\n          },\r\n          \"image/jpeg\",\r\n          quality\r\n        );\r\n      };\r\n      img.onerror = reject;\r\n      img.src = event.target.result;\r\n    };\r\n    reader.onerror = reject;\r\n    reader.readAsDataURL(file);\r\n  });\r\n};\r\n\r\n //解压缩图片，用于分享图片的获取\r\n const fetchAndExtractImages = async (filePath) => {\r\n  try {\r\n      const response = await axios.get(filePath, {\r\n          responseType: 'arraybuffer'\r\n      });\r\n      const zip = new JSZip();\r\n      const data = await zip.loadAsync(response.data);\r\n      const extractedImages = [];\r\n      for (let filename in data.files) {\r\n          const file = data.files[filename];\r\n          if (!file.dir && /\\.(png|jpg|jpeg|gif)$/.test(filename)) {\r\n              const blobData = await file.async('blob');\r\n              const imageUrl = URL.createObjectURL(blobData);\r\n              extractedImages.push(imageUrl);\r\n          }\r\n      }\r\n      return extractedImages;\r\n  } catch (error) {\r\n      console.error(\"Error while fetching or processing zip:\", error);\r\n      return [];\r\n  }\r\n};\r\n\r\n\r\n//读取用户头像\r\nexport async function fetchUserAvatar(id) {\r\n  const filePath = `/file/users/avatar/${id}`;\r\n  return fetchFile(filePath);\r\n}\r\n//读取主页文章封面\r\nexport async function fetchArticleCoverage(articleId) {\r\n  const filePath = `/file/article/coverage/${articleId}`;\r\n  return fetchFile(filePath);\r\n}\r\n//读取分享组图\r\nexport async function fetchShareCoverage(shareId) {\r\n  const filePath = `/file/share/picture/${shareId}`;\r\n  return fetchAndExtractImages(filePath);\r\n}\r\n//读取新闻封面\r\nexport async function fetchNewsCoverage(id) {\r\n  const filePath = `/file/news/coverage/${id}`;\r\n  return fetchFile(filePath);\r\n}\r\n//读取专栏封面\r\nexport async function fetchColumnCoverage(columnId) {\r\n  const filePath = `/file/column/${columnId}`;\r\n  return fetchFile(filePath);\r\n}\r\n//读取收藏封面\r\nexport async function fetchFavoriteCoverage(favoriteId) {\r\n  const filePath = `/file/favorite/${favoriteId}`;\r\n  return fetchFile(filePath);\r\n}\r\n//读取提问图片\r\nexport async function fetchQuestionPicture(questionId) {\r\n  const filePath = `/file/question/${questionId}`;\r\n  return fetchAndExtractImages(filePath);\r\n}\r\n//读取回答图片\r\nexport async function fetchAnswerPicture(questionId) {\r\n  const filePath = `/file/answer/${questionId}`;\r\n  return fetchFile(filePath);\r\n}\r\n//设置标题\r\nexport function PageTitle(initialTitle) {\r\n  const pageTitle = ref(initialTitle);\r\n\r\n  onMounted(() => {\r\n    document.title = pageTitle.value;\r\n  });\r\n\r\n  watch(pageTitle, (newTitle) => {\r\n    document.title = newTitle;\r\n  });\r\n\r\n  // 提供一个函数来更新页面标题\r\n  function setPageTitle(newTitle) {\r\n    pageTitle.value = newTitle;\r\n  }\r\n\r\n  return setPageTitle;\r\n}\r\n\r\n//判断设备是否为手机端，若是，将windows.open方法改为router.push\r\nexport const useNavigation = () => {\r\n  const router = useRouter();\r\n\r\n  const navigate = (path) => {\r\n    if (/Mobi|Android|iPhone/i.test(navigator.userAgent)) {\r\n      router.push(path);\r\n    } else {\r\n      const routeLocation = router.resolve({ path });\r\n      window.open(routeLocation.href, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return navigate;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}