{"ast":null,"code":"import { ElMessage } from 'element-plus';\nimport { ref, watchEffect, computed } from \"vue\";\nimport axios from '../../utils/request';\nimport { compressImage } from '@/utils/fileService';\nimport { getFavoritePermission, getColumnPermission } from '@/utils/cosService';\nexport default {\n  __name: 'CreateDialog',\n  props: {\n    ClassifyName: String,\n    modelValue: Boolean\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const localDialogVisible = ref(props.modelValue);\n    watchEffect(() => {\n      if (localDialogVisible.value !== props.modelValue) {\n        emit('update:modelValue', localDialogVisible.value);\n      }\n    });\n    const checked = ref(true);\n    const text1 = ref();\n    const textarea1 = ref();\n    const fileName = ref();\n    const fileInput = ref(null);\n    const selectedImages = ref([]);\n    const imagePreviews = ref([]);\n    const visibility = computed(() => {\n      return checked.value ? 1 : 0;\n    });\n    const data1 = computed(() => ({\n      name: text1.value,\n      profile: textarea1.value,\n      type: 0,\n      visibility: visibility.value\n    }));\n    const data2 = computed(() => ({\n      name: text1.value,\n      profile: textarea1.value,\n      type: 1,\n      visibility: visibility.value\n    }));\n\n    // 当点击按钮时触发文件输入框\n    const triggerImageUpload = () => {\n      if (selectedImages.value.length < 2) {\n        fileInput.value.click();\n      } else {\n        ElMessage.error('只能提交一张照片');\n      }\n    };\n\n    // 当文件选择后处理图片\n    const handleImage = async event => {\n      const file = event.target.files[0];\n      if (file && selectedImages.value.length < 2) {\n        const timestamp = new Date().getTime(); // 获取当前时间戳\n        fileName.value = `${timestamp}-${file.name}`; // 在文件名前加时间戳\n        const compressedFile = await compressImage(file);\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          imagePreviews.value.push(e.target.result); // 添加DataURL到imagePreviews\n          selectedImages.value.push(compressedFile); // 添加文件对象到selectedImages\n        };\n        reader.readAsDataURL(compressedFile);\n      }\n    };\n\n    //删除图片\n    const removeImage = index => {\n      selectedImages.value.splice(index, 1);\n      imagePreviews.value.splice(index, 1); // 也删除对应的预览\n    };\n\n    //根据父组件传回的classifyname判断应该调用的接口类型（这个方法只是增加一个判断值）\n    const submitData = () => {\n      if (props.ClassifyName === \"文章专栏\") {\n        setArticleColumn(data1.value);\n        localDialogVisible.value = false;\n      } else if (props.ClassifyName === \"分享专栏\") {\n        setShareColumn(data2.value);\n        localDialogVisible.value = false;\n      } else if (props.ClassifyName === \"文章收藏\") {\n        setArticleFavorite(data1.value);\n        localDialogVisible.value = false;\n      } else if (props.ClassifyName === \"分享收藏\") {\n        setShareFavorite(data2.value);\n        localDialogVisible.value = false;\n      }\n    };\n\n    //新建文章专栏\n    async function setArticleColumn(data) {\n      try {\n        const response = await axios.post('/column', data);\n        if (response.data && response.data.code === 1) {\n          const responseData = response.data.data;\n          await getColumnPermission(selectedImages.value[0], fileName.value, responseData);\n          // const secondUrl = `/file/column/${responseData}`;\n          // const formData = new FormData();\n          // selectedImages.value.forEach((image) => {\n          //     formData.append('file', image); \n          // });\n          // const secondResponse = await axios.post(secondUrl, formData);\n          // console.log(secondResponse.data.code);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('新建文章专栏失败', response.data.msg);\n          ElMessage.error('新建文章专栏失败');\n        }\n      } catch (error) {\n        console.error(\"新建文章专栏接口失败\", error);\n        ElMessage.error('新建文章专栏接口失败');\n      }\n    }\n    //新建分享专栏\n    async function setShareColumn(data) {\n      try {\n        const response = await axios.post('/column', data);\n        console.log(response);\n        if (response.data && response.data.code === 1) {\n          const responseData = response.data.data;\n          await getColumnPermission(selectedImages.value[0], fileName.value, responseData);\n          // const secondUrl = `/file/column/${responseData}`;\n          // const formData = new FormData();\n          // selectedImages.value.forEach((image) => {\n          //     formData.append('file', image); \n          // });\n          // const secondResponse = await axios.post(secondUrl, formData);\n          // console.log(secondResponse.data.code);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('新建分享专栏失败', response.data.msg);\n          ElMessage.error('新建分享专栏失败');\n        }\n      } catch (error) {\n        console.error(\"新建分享专栏接口失败\", error);\n        ElMessage.error('新建分享专栏接口失败');\n      }\n    }\n    //新建文章收藏\n    async function setArticleFavorite(data) {\n      try {\n        const response = await axios.post('/favorite', data);\n        console.log(response);\n        if (response.data && response.data.code === 1) {\n          const responseData = response.data.data;\n          await getFavoritePermission(selectedImages.value[0], fileName.value, responseData);\n          // const secondUrl = `/file/favorite/${responseData}`;\n          // const formData = new FormData();\n          // selectedImages.value.forEach((image) => {\n          //     formData.append('file', image); \n          // });\n          // const secondResponse = await axios.post(secondUrl, formData);\n          // console.log(secondResponse.data.code);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('新建文章收藏失败', response.data.msg);\n          ElMessage.error('新建文章收藏失败');\n        }\n      } catch (error) {\n        console.error(\"新建文章收藏接口失败\", error);\n        ElMessage.error('新建文章收藏接口失败');\n      }\n    }\n    //新建分享收藏\n    async function setShareFavorite(data) {\n      try {\n        const response = await axios.post('/favorite', data);\n        console.log(response);\n        if (response.data && response.data.code === 1) {\n          const responseData = response.data.data;\n          await getFavoritePermission(selectedImages.value[0], fileName.value, responseData);\n          // const secondUrl = `/file/favorite/${responseData}`;\n          // const formData = new FormData();\n          // selectedImages.value.forEach((image) => {\n          //     formData.append('file', image); \n          // });\n          // const secondResponse = await axios.post(secondUrl, formData);\n          // console.log(secondResponse.data.code);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('新建分享收藏失败', response.data.msg);\n          ElMessage.error('新建分享收藏失败');\n        }\n      } catch (error) {\n        console.error(\"新建分享收藏接口失败\", error);\n        ElMessage.error('新建分享收藏接口失败');\n      }\n    }\n    const __returned__ = {\n      props,\n      emit,\n      localDialogVisible,\n      checked,\n      text1,\n      textarea1,\n      fileName,\n      fileInput,\n      selectedImages,\n      imagePreviews,\n      visibility,\n      data1,\n      data2,\n      triggerImageUpload,\n      handleImage,\n      removeImage,\n      submitData,\n      setArticleColumn,\n      setShareColumn,\n      setArticleFavorite,\n      setShareFavorite,\n      get ElMessage() {\n        return ElMessage;\n      },\n      ref,\n      watchEffect,\n      computed,\n      get axios() {\n        return axios;\n      },\n      get compressImage() {\n        return compressImage;\n      },\n      get getFavoritePermission() {\n        return getFavoritePermission;\n      },\n      get getColumnPermission() {\n        return getColumnPermission;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ElMessage","ref","watchEffect","computed","axios","compressImage","getFavoritePermission","getColumnPermission","props","__props","emit","__emit","localDialogVisible","modelValue","value","checked","text1","textarea1","fileName","fileInput","selectedImages","imagePreviews","visibility","data1","name","profile","type","data2","triggerImageUpload","length","click","error","handleImage","event","file","target","files","timestamp","Date","getTime","compressedFile","reader","FileReader","onload","e","push","result","readAsDataURL","removeImage","index","splice","submitData","ClassifyName","setArticleColumn","setShareColumn","setArticleFavorite","setShareFavorite","data","response","post","code","responseData","msg","toString","console","log"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/components/CreateDialog.vue"],"sourcesContent":["<!-- 创作中心——专栏和收藏管理——新建-->\r\n<template>\r\n    <div>\r\n        <el-dialog v-model=\"localDialogVisible\" :title=\"ClassifyName + '信息'\" style=\"width: 60%; height: 80%; min-height: 500px; margin-top: 10vh;\">\r\n            <div class=\"container\">\r\n                <!-- 添加封面 -->\r\n                <div class=\"coverage\">\r\n                    <span class=\"pictext\">封面</span>          \r\n                    <div class=\"picshow\">\r\n                      <input type=\"file\" ref=\"fileInput\" accept=\"image/*\" style=\"display: none;\" @change=\"handleImage\" />\r\n                      <!-- 如果没有图片预览，则显示上传提示 -->\r\n                      <div v-if=\"imagePreviews.length === 0\" @click=\"triggerImageUpload\" class=\"tpic\" >\r\n                        <el-icon  style=\"position: absolute; left: 70px; top: 70px;font-size: 40px;cursor: pointer;\"><Plus /></el-icon>\r\n                      </div>\r\n                      \r\n                      <!-- 如果有图片预览，则全屏显示图片 -->\r\n                      <div  class=\"pic_contain \">\r\n                        <div v-for=\"(imagePreview, index) in imagePreviews\" :key=\"index\" class=\"spic\" :style=\"{ backgroundImage: `url(${imagePreview})` }\">\r\n                          <el-icon class=\"delete-btn\" @click=\"removeImage(index)\"><CircleCloseFilled /></el-icon>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <!-- 专栏/收藏名称 -->\r\n                <div class=\"ptitie\">\r\n                    <span class=\"pictext\">名称</span>               \r\n                    <el-input\r\n                    v-model=\"text1\"\r\n                    maxlength=\"20\"\r\n                    placeholder=\"填写标题，可能会让更多人感兴趣~\"\r\n                    show-word-limit\r\n                    type=\"text\"\r\n                    class=\"input_el\"\r\n                    />  \r\n                </div>\r\n                <!-- 专栏/收藏简介 -->\r\n                <div class=\"mainp\">\r\n                    <span class=\"pictext\">简介</span>\r\n                    <el-input\r\n                    v-model=\"textarea1\"\r\n                    maxlength=\"150\"\r\n                    placeholder=\"分享一下最近的趣事或心情吧\"\r\n                    show-word-limit\r\n                    type=\"textarea\"\r\n                    size=\"large\"\r\n                    resize=\"none\"\r\n                    :autosize = \"{ minRows: 2, maxRows: 30 }\"\r\n                    class=\"input_el\"\r\n                    />\r\n                </div>\r\n                <!-- 是否展示专栏/收藏 -->\r\n                <el-checkbox v-model=\"checked\">展示{{ ClassifyName }}</el-checkbox>\r\n            </div>\r\n            <template #footer>\r\n              <span class=\"dialog-footer\">\r\n                  <el-button @click=\"localDialogVisible = false\">Cancel</el-button>\r\n                  <el-button type=\"primary\" @click = submitData>\r\n                  提交\r\n                  </el-button>\r\n              </span>\r\n            </template>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus';\r\nimport { defineProps, ref,defineEmits,watchEffect,computed} from \"vue\";\r\nimport axios from '../../utils/request';\r\nimport {compressImage} from '@/utils/fileService';\r\nimport { getFavoritePermission,getColumnPermission} from '@/utils/cosService';\r\n\r\nconst props = defineProps({\r\n    ClassifyName: String,\r\n    modelValue: Boolean,\r\n});\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst localDialogVisible = ref(props.modelValue);\r\nwatchEffect(() => {\r\n  if (localDialogVisible.value !== props.modelValue) {\r\n    emit('update:modelValue', localDialogVisible.value);\r\n  }\r\n});\r\n\r\nconst checked = ref(true) \r\nconst text1 = ref();\r\nconst textarea1 = ref();\r\n\r\nconst fileName = ref();\r\nconst fileInput = ref(null);\r\nconst selectedImages = ref([]);\r\nconst imagePreviews = ref([]);\r\n\r\nconst visibility = computed(() => {\r\n    return checked.value ? 1 : 0;\r\n});\r\n\r\nconst data1 = computed(() => ({\r\n  name:text1.value,\r\n  profile:textarea1.value,\r\n  type:0,\r\n  visibility:visibility.value\r\n}));\r\nconst data2 = computed(() => ({\r\n  name:text1.value,\r\n  profile:textarea1.value,\r\n  type:1,\r\n  visibility:visibility.value\r\n}));\r\n\r\n// 当点击按钮时触发文件输入框\r\nconst triggerImageUpload = () => {\r\n  if (selectedImages.value.length < 2) {\r\n    fileInput.value.click();\r\n  } else {\r\n    ElMessage.error('只能提交一张照片');\r\n  }\r\n};\r\n\r\n// 当文件选择后处理图片\r\nconst handleImage = async (event) => {\r\n  const file = event.target.files[0];\r\n  if (file && selectedImages.value.length < 2) {\r\n    const timestamp = new Date().getTime(); // 获取当前时间戳\r\n    fileName.value = `${timestamp}-${file.name}`; // 在文件名前加时间戳\r\n    const compressedFile = await compressImage(file);\r\n    const reader = new FileReader();\r\n    reader.onload = function(e) {\r\n      imagePreviews.value.push(e.target.result);  // 添加DataURL到imagePreviews\r\n      selectedImages.value.push(compressedFile);  // 添加文件对象到selectedImages\r\n    };\r\n    reader.readAsDataURL(compressedFile);\r\n  }\r\n};\r\n\r\n//删除图片\r\nconst removeImage = (index) => {\r\n    selectedImages.value.splice(index, 1);\r\n    imagePreviews.value.splice(index, 1);  // 也删除对应的预览\r\n};\r\n\r\n\r\n//根据父组件传回的classifyname判断应该调用的接口类型（这个方法只是增加一个判断值）\r\nconst submitData = () => {\r\n  if(props.ClassifyName === \"文章专栏\"){\r\n    setArticleColumn(data1.value);\r\n    localDialogVisible.value = false;\r\n  }else if(props.ClassifyName === \"分享专栏\"){\r\n    setShareColumn(data2.value);\r\n    localDialogVisible.value = false;\r\n  }else if(props.ClassifyName === \"文章收藏\"){\r\n    setArticleFavorite(data1.value);\r\n    localDialogVisible.value = false;\r\n  }else if(props.ClassifyName === \"分享收藏\"){\r\n    setShareFavorite(data2.value);\r\n    localDialogVisible.value = false;\r\n  }\r\n}\r\n\r\n//新建文章专栏\r\nasync function setArticleColumn(data) {\r\n  try {\r\n        const response = await axios.post('/column', data);\r\n        if (response.data && response.data.code === 1) {\r\n            const responseData = response.data.data;\r\n            await getColumnPermission( selectedImages.value[0],fileName.value,responseData);\r\n            // const secondUrl = `/file/column/${responseData}`;\r\n            // const formData = new FormData();\r\n            // selectedImages.value.forEach((image) => {\r\n            //     formData.append('file', image); \r\n            // });\r\n            // const secondResponse = await axios.post(secondUrl, formData);\r\n            // console.log(secondResponse.data.code);\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error('新建文章专栏失败', response.data.msg);\r\n            ElMessage.error('新建文章专栏失败');\r\n        }\r\n  } catch (error) {\r\n      console.error(\"新建文章专栏接口失败\", error); \r\n      ElMessage.error('新建文章专栏接口失败');\r\n  }\r\n}\r\n//新建分享专栏\r\nasync function setShareColumn(data) {\r\n  try {\r\n        const response = await axios.post('/column', data);\r\n        console.log(response);\r\n        if (response.data && response.data.code === 1) {\r\n            const responseData = response.data.data;\r\n            await getColumnPermission( selectedImages.value[0],fileName.value,responseData);\r\n            // const secondUrl = `/file/column/${responseData}`;\r\n            // const formData = new FormData();\r\n            // selectedImages.value.forEach((image) => {\r\n            //     formData.append('file', image); \r\n            // });\r\n            // const secondResponse = await axios.post(secondUrl, formData);\r\n            // console.log(secondResponse.data.code);\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error('新建分享专栏失败', response.data.msg);\r\n            ElMessage.error('新建分享专栏失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"新建分享专栏接口失败\", error); \r\n        ElMessage.error('新建分享专栏接口失败');\r\n    }\r\n}\r\n//新建文章收藏\r\nasync function setArticleFavorite(data) {\r\n  try {\r\n        const response = await axios.post('/favorite', data);\r\n        console.log(response);\r\n        if (response.data && response.data.code === 1) {\r\n            const responseData = response.data.data;\r\n            await getFavoritePermission( selectedImages.value[0],fileName.value,responseData);\r\n            // const secondUrl = `/file/favorite/${responseData}`;\r\n            // const formData = new FormData();\r\n            // selectedImages.value.forEach((image) => {\r\n            //     formData.append('file', image); \r\n            // });\r\n            // const secondResponse = await axios.post(secondUrl, formData);\r\n            // console.log(secondResponse.data.code);\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error('新建文章收藏失败', response.data.msg);\r\n            ElMessage.error('新建文章收藏失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"新建文章收藏接口失败\", error); \r\n        ElMessage.error('新建文章收藏接口失败');\r\n        \r\n    }\r\n}\r\n//新建分享收藏\r\nasync function setShareFavorite(data) {\r\n  try {\r\n        const response = await axios.post('/favorite', data);\r\n        console.log(response);\r\n        if (response.data && response.data.code === 1) {\r\n            const responseData = response.data.data;\r\n            await getFavoritePermission( selectedImages.value[0],fileName.value,responseData);\r\n            // const secondUrl = `/file/favorite/${responseData}`;\r\n            // const formData = new FormData();\r\n            // selectedImages.value.forEach((image) => {\r\n            //     formData.append('file', image); \r\n            // });\r\n            // const secondResponse = await axios.post(secondUrl, formData);\r\n            // console.log(secondResponse.data.code);\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error('新建分享收藏失败', response.data.msg);\r\n            ElMessage.error('新建分享收藏失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"新建分享收藏接口失败\", error); \r\n        ElMessage.error('新建分享收藏接口失败');\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n}\r\n.coverage{\r\n    display: flex;\r\n    gap: 20px;\r\n    width: 100%;\r\n    height: 180px;\r\n}\r\n.pictext {\r\n    display: block;\r\n    width: 45px;\r\n}\r\n.picshow {\r\n    width: 180px;\r\n    height: 180px;\r\n    border: 1px dashed #bbbbbb;\r\n    border-radius: 10px;\r\n    position: relative;\r\n}\r\n.tpic{\r\n    width: 180px;\r\n    height: 180px;\r\n    border: 1px dashed #bbbbbb;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    position: relative;\r\n}\r\n.spic{\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    width: 180px;\r\n    height: 180px;\r\n}\r\n.pic_contain{\r\n  position: relative;\r\n}\r\ni.delete-btn {\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 8px;\r\n  cursor: pointer;\r\n}\r\n/* .avatar-uploader{\r\n    width: 90%;\r\n    border-radius: 10px\r\n}\r\n.avatar-uploader .avatar {\r\n  width: 150px;\r\n  height: 150px;\r\n  display: block;\r\n}\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed var(--el-border-color);\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n.el-upload-list--picture-card{\r\n  --el-upload-list-picture-card-size: 150px;\r\n}\r\n.el-icon.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 150px;\r\n  height: 150px;\r\n  text-align: center;\r\n} */\r\n.ptitie {\r\n  height: 32px;\r\n  width: 92%;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  align-self: stretch;\r\n}\r\n::v-deep .el-dialog__body {\r\n  padding: 0px var(--el-dialog-padding-primary);\r\n}\r\n::v-deep .el-dialog__header{\r\n  padding-bottom: 20px;\r\n}\r\n::v-deep .el-dialog__footer {\r\n  padding: 0px;\r\n  position: absolute;\r\n  right: 15px;\r\n  bottom: 10px;\r\n}\r\n::v-deep .el-input ,\r\n::v-deep .el-textarea{\r\n  width: 90%;\r\n}\r\n/* 三个输入框边框样式 */\r\n::v-deep .el-input__wrapper,\r\n::v-deep .el-textarea__inner{\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n::v-deep .el-input__wrapper{\r\n  height: 40px;\r\n}  \r\n::v-deep .mainp .el-textarea .el-textarea__inner{\r\n  height: 130px;\r\n}  \r\n/* 三个输入框获得焦点时的边框样式 */\r\n::v-deep .el-input__wrapper.is-focus,\r\n::v-deep .el-textarea__inner:focus{\r\n  box-shadow: 0 2px 6px #cfd7e2;\r\n  border: 1px solid #d7d7d7;\r\n}\r\n.input_el textarea {\r\n  overflow: hidden;\r\n}\r\n.mainp{\r\n  width: 92%;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 20px;\r\n  align-self: stretch;\r\n}\r\n.dialog-footer button:first-child {\r\n  margin-right: 10px;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}