{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/VerifiedUser.svg';\nimport _imports_1 from '@/assets/QACenter/ScoreStar.svg';\nimport _imports_2 from '@/assets/QACenter/QASquare_B.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-0c81b480\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"select\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"display\": \"flex\",\n    \"gap\": \"20px\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"已完成\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"进行中\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"未回答\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"main_box\",\n  \"infinite-scroll-distance\": \"100\",\n  \"infinite-scroll-immediate\": \"false\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"up\"\n};\nconst _hoisted_9 = {\n  class: \"up_box\"\n};\nconst _hoisted_10 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_11 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  }\n};\nconst _hoisted_12 = {\n  class: \"name\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  src: _imports_0,\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\",\n    \"margin\": \"0 5px 0 -4px\"\n  },\n  alt: \"\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"ask\"\n}, \"向我提问\", -1 /* HOISTED */));\nconst _hoisted_15 = {\n  class: \"content\"\n};\nconst _hoisted_16 = {\n  class: \"time\"\n};\nconst _hoisted_17 = {\n  class: \"down\"\n};\nconst _hoisted_18 = {\n  key: 0\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"mark\"\n};\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"refuse_btn\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"color\": \"#fff\"\n  }\n}, \"已拒绝该回答\")], -1 /* HOISTED */));\nconst _hoisted_21 = [_hoisted_20];\nconst _hoisted_22 = {\n  key: 1,\n  class: \"mark\"\n};\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"waiteva_btn\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"color\": \"#fff\"\n  }\n}, \"等待用户评价\")], -1 /* HOISTED */));\nconst _hoisted_24 = [_hoisted_23];\nconst _hoisted_25 = {\n  key: 2,\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\",\n    \"gap\": \"5px\"\n  }\n};\nconst _hoisted_26 = {\n  class: \"mark\"\n};\nconst _hoisted_27 = {\n  style: {\n    \"font-size\": \"12px\"\n  }\n};\nconst _hoisted_28 = {\n  style: {\n    \"font-size\": \"16px\",\n    \"line-height\": \"1.6\"\n  }\n};\nconst _hoisted_29 = {\n  key: 1,\n  class: \"ing_box\"\n};\nconst _hoisted_30 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_box\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"cursor\": \"pointer\"\n  }\n}, \"继续回答\"), /*#__PURE__*/_createElementVNode(\"img\", {\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\",\n    \"margin-left\": \"5px\",\n    \"cursor\": \"pointer\"\n  },\n  src: _imports_2,\n  alt: \"\"\n})], -1 /* HOISTED */));\nconst _hoisted_31 = {\n  class: \"ing_btn\"\n};\nconst _hoisted_32 = {\n  style: {\n    \"color\": \"#fff\"\n  }\n};\nconst _hoisted_33 = {\n  key: 2,\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_34 = {\n  style: {\n    \"display\": \"flex\",\n    \"gap\": \"10px\"\n  },\n  class: \"re-ac\"\n};\nconst _hoisted_35 = {\n  class: \"ing_btn\"\n};\nconst _hoisted_36 = {\n  style: {\n    \"color\": \"#fff\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _directive_infinite_scroll = _resolveDirective(\"infinite-scroll\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 已完成，进行中，未回答 筛选 \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.typeNumber = 0),\n    class: _normalizeClass([{\n      selected: $setup.typeNumber === 0\n    }, \"select_btn\"])\n  }, [_hoisted_3, _createElementVNode(\"span\", null, _toDisplayString($setup.countData[2]), 1 /* TEXT */)], 2 /* CLASS */), _createElementVNode(\"div\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.typeNumber = 1),\n    class: _normalizeClass([{\n      selected: $setup.typeNumber === 1\n    }, \"select_btn\"])\n  }, [_hoisted_4, _createElementVNode(\"span\", null, _toDisplayString($setup.countData[1]), 1 /* TEXT */)], 2 /* CLASS */), _createElementVNode(\"div\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.typeNumber = 2),\n    class: _normalizeClass([{\n      selected: $setup.typeNumber === 2\n    }, \"select_btn\"])\n  }, [_hoisted_5, _createElementVNode(\"span\", null, _toDisplayString($setup.countData[0]), 1 /* TEXT */)], 2 /* CLASS */)]), _createCommentVNode(\" <div>\\r\\n            <span style=\\\"font-size: 16px; font-weight: 700;\\\">接受咨询</span>\\r\\n             <el-switch\\r\\n                v-model=\\\"value1\\\"\\r\\n                class=\\\"mt-2\\\"\\r\\n                style=\\\"margin-left: 24px\\\"\\r\\n                inline-prompt\\r\\n                :active-icon=\\\"Check\\\"\\r\\n                :inactive-icon=\\\"Close\\\"\\r\\n            />\\r\\n        </div> \")]), _createCommentVNode(\" 推送框  \"), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.dataList, (source, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"item\",\n      onClick: $event => $setup.goToConversationList($setup.typeNumber, source.askerId, source.id, source.number)\n    }, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", _hoisted_12, _toDisplayString(source.askerUsername), 1 /* TEXT */), source.verified === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_13)) : _createCommentVNode(\"v-if\", true)]), _hoisted_14]), _createElementVNode(\"span\", _hoisted_15, _toDisplayString(source.questionContent), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_16, _toDisplayString(source.createTime), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_17, [$setup.typeNumber === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [source.state === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [..._hoisted_21])) : _createCommentVNode(\"v-if\", true), source.state === 3 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [..._hoisted_24])) : _createCommentVNode(\"v-if\", true), source.state === 4 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"span\", _hoisted_27, _toDisplayString(source.grade), 1 /* TEXT */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getStarCount1(source.grade), n => {\n      return _openBlock(), _createElementBlock(\"img\", {\n        key: n,\n        src: _imports_1,\n        alt: \"\"\n      });\n    }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"span\", _hoisted_28, _toDisplayString(source.content), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), $setup.typeNumber === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_hoisted_30, _createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"span\", _hoisted_32, \"剩余\" + _toDisplayString(source.remainTime), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true), $setup.typeNumber === 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_createCommentVNode(\" <el-button  @click=\\\"openaccept(source.id,source.askerId)\\\" type=\\\"primary\\\" plain>接受({{source.moneyCount}}鱼饵)</el-button> \"), _createVNode(_component_el_button, {\n      onClick: $event => $setup.openaccept(source.id, source.askerId),\n      type: \"primary\",\n      plain: \"\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"接受\")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n      onClick: $event => $setup.openrefuse(source.id),\n      type: \"danger\",\n      plain: \"\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"拒答\")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"span\", _hoisted_36, \"剩余\" + _toDisplayString(source.remainTime), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)])], 8 /* PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */)), !$setup.dataList || $setup.dataList.length === 0 ? (_openBlock(), _createBlock(_component_el_empty, {\n    key: 0,\n    \"image-size\": 200,\n    description: \"您没有收到过提问呢！\"\n  })) : _createCommentVNode(\"v-if\", true)])), [[_directive_infinite_scroll, $setup.load]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","style","_createElementVNode","src","alt","_hoisted_20","_hoisted_23","_createCommentVNode","_hoisted_1","_hoisted_2","onClick","_cache","$event","$setup","typeNumber","_normalizeClass","selected","_hoisted_3","_toDisplayString","countData","_hoisted_4","_hoisted_5","_createElementBlock","_hoisted_6","_Fragment","_renderList","dataList","source","index","key","goToConversationList","askerId","id","number","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","askerUsername","verified","_hoisted_13","_hoisted_14","_hoisted_15","questionContent","_hoisted_16","createTime","_hoisted_17","_hoisted_18","state","_hoisted_19","_hoisted_21","_hoisted_22","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","grade","getStarCount1","n","_hoisted_28","content","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","remainTime","_hoisted_33","_hoisted_34","_createVNode","_component_el_button","openaccept","type","plain","openrefuse","_hoisted_35","_hoisted_36","length","_createBlock","_component_el_empty","description","load"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\QACenter\\SquareQuestion\\ReceivedQuestion.vue"],"sourcesContent":["<template>\r\n    <!-- 已完成，进行中，未回答 筛选 -->\r\n    <div class=\"select\">\r\n        <div style=\"display: flex; gap: 20px;\">\r\n            <div @click=\"typeNumber = 0\" :class=\"{ selected: typeNumber === 0 }\" class=\"select_btn\">\r\n                <span>已完成</span>\r\n                <span>{{ countData[2] }}</span>\r\n            </div>\r\n            <div @click=\"typeNumber = 1\" :class=\"{ selected: typeNumber === 1 }\" class=\"select_btn\">\r\n                <span>进行中</span>\r\n                <span>{{ countData[1] }}</span>\r\n            </div>\r\n            <div @click=\"typeNumber = 2\" :class=\"{ selected: typeNumber === 2 }\" class=\"select_btn\">\r\n                <span>未回答</span>\r\n                <span>{{ countData[0] }}</span>\r\n            </div>\r\n        </div>\r\n        <!-- <div>\r\n            <span style=\"font-size: 16px; font-weight: 700;\">接受咨询</span>\r\n             <el-switch\r\n                v-model=\"value1\"\r\n                class=\"mt-2\"\r\n                style=\"margin-left: 24px\"\r\n                inline-prompt\r\n                :active-icon=\"Check\"\r\n                :inactive-icon=\"Close\"\r\n            />\r\n        </div> -->\r\n    </div> \r\n    <!-- 推送框  -->\r\n    <div class=\"main_box\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\" >\r\n        <div v-for=\"(source,index) in dataList\" :key=\"index\" class=\"item\" @click=\"goToConversationList(typeNumber,source.askerId,source.id,source.number)\">\r\n            <div class=\"up\">\r\n                <div class=\"up_box\">\r\n                    <div style=\"display: flex;\">\r\n                        <div style=\"display: flex;align-items: center;\">\r\n                            <span class=\"name\">{{ source.askerUsername }}</span>\r\n                            <img v-if=\"source.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin: 0 5px 0 -4px;\" alt=\"\">\r\n                        </div>\r\n                        <span class=\"ask\">向我提问</span>\r\n                    </div>\r\n                    <span class=\"content\">{{ source.questionContent }}</span>\r\n                    <span class=\"time\">{{ source.createTime }}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"down\">\r\n                <div v-if=\"typeNumber === 0\" >\r\n                    <div v-if=\"source.state === 1\" class=\"mark\">\r\n                        <div class=\"refuse_btn\">\r\n                            <span style=\"color: #fff;\">已拒绝该回答</span>\r\n                        </div>\r\n                    </div>\r\n                    <div v-if=\"source.state === 3\" class=\"mark\">\r\n                        <div class=\"waiteva_btn\">\r\n                            <span style=\"color: #fff;\">等待用户评价</span>\r\n                        </div>\r\n                    </div>\r\n                    <div v-if=\"source.state === 4\" style=\"display: flex; flex-direction: column; gap: 5px;\">\r\n                        <div class=\"mark\">\r\n                            <span style=\"font-size: 12px;\">{{ source.grade }}</span>\r\n                            <img v-for= \"n in getStarCount1( source.grade)\" :key=\"n\" src=\"@/assets/QACenter/ScoreStar.svg\" alt=\"\">\r\n                        </div>\r\n                        <span style=\"font-size: 16px;line-height: 1.6; \" >{{source.content}}</span>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div v-if=\"typeNumber === 1\" class=\"ing_box\">\r\n                    <div class=\"left_box\">\r\n                        <span style=\"cursor: pointer;\">继续回答</span>\r\n                        <img style=\"width: 16px;height: 16px; margin-left: 5px;cursor: pointer;\" src=\"@/assets/QACenter/QASquare_B.svg\" alt=\"\">\r\n                    </div>\r\n                    <div class=\"ing_btn\">\r\n                        <span style=\"color: #fff;\">剩余{{ source.remainTime }}</span>\r\n                    </div>\r\n                </div>\r\n                <div v-if=\"typeNumber === 2\" style=\"display: flex; align-items: center;  justify-content: space-between;\">\r\n                    <div style=\"display: flex;gap: 10px;\" class=\"re-ac\">\r\n                        <!-- <el-button  @click=\"openaccept(source.id,source.askerId)\" type=\"primary\" plain>接受({{source.moneyCount}}鱼饵)</el-button> -->\r\n                        <el-button  @click=\"openaccept(source.id,source.askerId)\" type=\"primary\" plain>接受</el-button>\r\n                        <el-button  @click=\"openrefuse(source.id)\" type=\"danger\" plain>拒答</el-button>     \r\n                    </div>    \r\n                    <div class=\"ing_btn\">\r\n                        <span style=\"color: #fff;\">剩余{{ source.remainTime }}</span>\r\n                    </div>       \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <el-empty \r\n            v-if=\"!dataList || dataList.length === 0\" \r\n            :image-size=\"200\" \r\n            description=\"您没有收到过提问呢！\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref,onMounted,watch,onUnmounted} from 'vue'\r\nimport { Check, Close } from '@element-plus/icons-vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessageBox, ElMessage } from 'element-plus';\r\nimport axios from '@/utils/request';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport { convertDateFormat } from '@/utils/timeFormat'; \r\nimport { openUrl } from '@/utils/routeJudge'\r\n\r\nconst currentPage = ref(1);\r\nconst router = useRouter()\r\n// const value1 = ref(true)\r\nconst typeNumber = ref(0);\r\nconst dataList = ref([]);\r\nconst countData = ref();\r\nconst newValueOne = ref(0);\r\nlet interval = null;\r\n\r\n//跳转到提问界面\r\nconst goToAnswer = (id,askId) =>{\r\n    countAnswer();\r\n    getNotAnswer();\r\n    // const routeLocation = router.resolve({ path: `/GoAnswer/${id}/${askId}`});\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl(`/GoAnswer/${id}/${askId}`)\r\n}\r\n\r\nconst openaccept = async (questionId,askerId) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要接受该回答吗？',\r\n      {\r\n        confirmButtonText: '确认接受',\r\n        cancelButtonText: '取消',\r\n        type: 'info',\r\n      }\r\n    );\r\n    acceptAnswer(questionId,askerId);\r\n  } catch {\r\n    console.log('关闭弹框')\r\n  }\r\n}\r\n\r\nconst openrefuse = async (id) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要拒绝该回答吗？',\r\n      'Warning',\r\n      {\r\n        confirmButtonText: '确认拒绝',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }\r\n    );\r\n    rejectAnswer(id);\r\n  } catch {\r\n    console.log('关闭弹框')\r\n  }\r\n}\r\n\r\n\r\nconst handleTypeNumberChange = (newValue) => {\r\n    newValueOne.value = newValue;\r\n    if(newValue === 0) {\r\n        currentPage.value = 1;\r\n        getEndAnswer(currentPage.value);\r\n    }\r\n    else if(newValue === 1)  {\r\n        currentPage.value = 1;\r\n        getIngAnswer(currentPage.value);\r\n    }\r\n    else if(newValue === 2)  {\r\n        currentPage.value = 1;\r\n        getNotAnswer(currentPage.value);\r\n    }\r\n}\r\n//监视typeNumber的值\r\nwatch(typeNumber, handleTypeNumberChange);\r\n\r\nconst updateRemainTimes = () => {\r\n    if(typeNumber.value === 2){\r\n        for (let record of dataList.value) {\r\n            record.remainTime = computeTimeRemain(record.createTime); \r\n        }\r\n    }else if(typeNumber.value === 1){\r\n        for (let record of dataList.value) {\r\n            record.remainTime = computeTimeRemain(record.answerTime); \r\n        }\r\n    }\r\n\r\n};\r\n\r\n//计算时间差的函数，传入的startDateTime和endDateTime都是时间字符串,如YYYY-MM-DD HH:MM:SS\r\nconst computeTimeDifference = (startDateTime, endDateTime) => {\r\n    const startDate = new Date(startDateTime);\r\n    const endDate = new Date(endDateTime);\r\n    // 计算时间差值，得到的是毫秒数\r\n    const differenceInMillis = endDate - startDate;\r\n    // 将毫秒转换为小时、分钟和秒\r\n    const hours = Math.floor(differenceInMillis / (1000 * 60 * 60));\r\n    const minutes = Math.floor((differenceInMillis % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((differenceInMillis % (1000 * 60)) / 1000);\r\n    // 格式化小时、分钟和秒为两位数\r\n    const formattedHours = hours.toString().padStart(2, '0');\r\n    const formattedMinutes = minutes.toString().padStart(2, '0');\r\n    const formattedSeconds = seconds.toString().padStart(2, '0');\r\n    // 返回 HH:MM:SS 格式的字符串\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\r\n}\r\n\r\n\r\n//计算剩余时间\r\nconst computeTimeRemain = (startDateTime) => {\r\n    const now = new Date();\r\n    const formatted = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')} ${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}:${String(now.getSeconds()).padStart(2, '0')}`;\r\n    const dateObj = new Date(startDateTime); \r\n    dateObj.setDate(dateObj.getDate() + 2); \r\n    const newDateTime = `${dateObj.getFullYear()}-${String(dateObj.getMonth() + 1).padStart(2, '0')}-${String(dateObj.getDate()).padStart(2, '0')} ${String(dateObj.getHours()).padStart(2, '0')}:${String(dateObj.getMinutes()).padStart(2, '0')}:${String(dateObj.getSeconds()).padStart(2, '0')}`;\r\n    const endTime = computeTimeDifference(formatted,newDateTime)\r\n    return endTime;\r\n}\r\n\r\n\r\nconst goToConversationList = ( typeNumber,id,questionId,number) => {\r\n    if (typeNumber === 0) {\r\n        // const routeLocation = router.resolve({ path: `/CompletedList/LQuestionedMe/${questionId}/${id}` });\r\n        // window.open(routeLocation.href, '_blank');\r\n        openUrl(`/CompletedList/LQuestionedMe/${questionId}/${id}`)\r\n    }\r\n    if (typeNumber === 1) {\r\n        // const routeLocation = router.resolve({ path: `/OngoingConversation/LiveChat/answer/${id}/${questionId}/${number}` });\r\n        // window.open(routeLocation.href, '_blank');\r\n        openUrl(`/OngoingConversation/LiveChat/answer/${id}/${questionId}/${number}`)\r\n    }   \r\n  }\r\n\r\n//判断哦评价展示的星星数量\r\nconst getStarCount1 = (grade) =>{\r\n    const result = Math.floor(grade);\r\n    return result\r\n}\r\n\r\n//接受提问（用户为回答者）\r\nasync function acceptAnswer(questionId,askerId) {\r\n    goToAnswer(questionId,askerId);\r\n}\r\n\r\n//拒绝提问（用户为回答者）\r\nasync function rejectAnswer(id) {\r\n  try{\r\n    const response = await axios.post(`/answer/myanswer/reject/${id}`)\r\n    if(response.data.code === 1){\r\n        ElMessage.success('拒绝提问成功');\r\n        countAnswer();\r\n        getNotAnswer();\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"拒绝提问失败\");\r\n        ElMessage.error('拒绝提问失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"拒绝提问失败\", error); \r\n    ElMessage.error('拒绝提问失败');\r\n  }\r\n}\r\n\r\n//获取各类提问数目（未回答、进行中和已完成）\r\nasync function countAnswer() {\r\n  try{\r\n    const response = await axios.get(`/answer/myanswer/count`)\r\n    if(response.data.code === 1){\r\n        countData.value = response.data.data;\r\n        // ElMessage.success('获取各类提问数目成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取各类提问数目失败\");\r\n        ElMessage.error('获取各类提问数目失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取各类提问数目失败\", error); \r\n    ElMessage.error('获取各类提问数目失败');\r\n  }\r\n}\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    if(currentPage.value === 1){\r\n        currentPage.value++;\r\n    }\r\n    try {\r\n        if(newValueOne.value === 0) {\r\n            await getEndAnswer(currentPage.value);\r\n            currentPage.value++; // 只有在请求成功完成后才递增页码\r\n        }\r\n        else if(newValueOne.value === 1) {\r\n            await getIngAnswer(currentPage.value);\r\n            currentPage.value++; // 只有在请求成功完成后才递增页码\r\n        }\r\n        else if(newValueOne.value === 2) {\r\n            await getNotAnswer(currentPage.value);\r\n            currentPage.value++; // 只有在请求成功完成后才递增页码\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n\r\n//获取进行中的问答（用户为回答者）\r\nasync function getIngAnswer(currentPage) {\r\n    if(currentPage === 1){\r\n        dataList.value = [];\r\n    }\r\n    try{\r\n        const response = await axios.get(`/answer/myanswer/ing`, {\r\n            params: {\r\n                page:currentPage,\r\n                pageSize:10,\r\n            }\r\n        });\r\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n            const updates = response.data.data.records.map(async (record) => {\r\n                const avatarPromise = getUsersAvatarFromCOS(record.askerId);\r\n                const avatar = await avatarPromise;\r\n                const createTime = convertDateFormat(record.createTime);\r\n                const verified = await fetchUserInformation(record.askerId);\r\n                // const remainTime = computeTimeRemain(record.answerTime);\r\n                return { ...record, avatar, createTime,verified };\r\n            });\r\n            const updatedRecords = await Promise.all(updates);\r\n            dataList.value = [...dataList.value, ...updatedRecords];\r\n            // ElMessage.success('获取进行中的问答成功');\r\n        }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n            // ElMessage.info('已加载所有数据');\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            console.error(\"获取进行中的问答失败\");\r\n            ElMessage.error('获取进行中的问答失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取进行中的问答失败\", error); \r\n        ElMessage.error('获取进行中的问答失败');\r\n    }\r\n}\r\n\r\n//获取未回答的问答（用户为回答者）\r\nasync function getNotAnswer(currentPage) {\r\n    if(currentPage === 1){\r\n        dataList.value = [];\r\n    }\r\n    try{\r\n        const response = await axios.get(`/answer/myanswer/noresponse`, {\r\n            params: {\r\n                page:currentPage,\r\n                pageSize:10,\r\n            }\r\n        });\r\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n            const updates = response.data.data.records.map(async (record) => {\r\n                const avatar = await getUsersAvatarFromCOS(record.askerId);\r\n                const createTime = convertDateFormat(record.createTime);\r\n                const verified = await fetchUserInformation(record.askerId);\r\n                // const remainTime = computeTimeRemain(record.createTime);\r\n                return { ...record, avatar, createTime,verified };\r\n            });\r\n            const updatedRecords = await Promise.all(updates);\r\n            dataList.value = [...dataList.value, ...updatedRecords];\r\n            // ElMessage.success('获取未回答的问答成功');\r\n        }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n            // ElMessage.info('已加载所有数据');\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            console.error(\"获取未回答的问答失败\");\r\n            ElMessage.error('获取未回答的问答失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取未回答的问答失败\", error); \r\n        ElMessage.error('获取未回答的问答失败');\r\n    }\r\n}\r\n\r\n\r\n//获取已结束的问答（用户为回答者）\r\nasync function getEndAnswer(currentPage) {\r\n    if(currentPage === 1){\r\n        dataList.value = [];\r\n    }\r\n  try{\r\n    const response = await axios.get(`/answer/myanswer/end`, {\r\n        params: {\r\n            page:currentPage,\r\n            pageSize:10,\r\n        }\r\n    });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n        const updates = response.data.data.records.map(async (record) => {\r\n            const avatar = await getUsersAvatarFromCOS(record.askerId);\r\n            const createTime = convertDateFormat(record.createTime);\r\n            const verified = await fetchUserInformation(record.askerId);\r\n            return { ...record, avatar, createTime,verified };\r\n        });\r\n        const updatedRecords = await Promise.all(updates);\r\n        dataList.value = [...dataList.value, ...updatedRecords];\r\n        // ElMessage.success('获取已结束的问答成功');\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n        // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取已结束的问答失败\");\r\n        ElMessage.error('获取已结束的问答失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取已结束的问答失败\", error); \r\n    ElMessage.error('获取已结束的问答失败');\r\n  }\r\n}\r\n\r\n\r\n// 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\n\r\n// 在组件挂载时设置定时器，每秒更新一次剩余时间\r\nonMounted(() => {\r\n  updateRemainTimes(); // 立即更新一次剩余时间\r\n  interval = setInterval(updateRemainTimes, 1000); // 设置定时器\r\n  countAnswer();\r\n  getEndAnswer(currentPage.value);\r\n  \r\n});\r\n\r\n// 在组件卸载时清除定时器\r\nonUnmounted(() => {\r\n  clearInterval(interval);\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.select{\r\n    width: 75%;\r\n    margin: 1rem auto 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n.select_btn{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    cursor: pointer;\r\n}\r\n.select_btn span{\r\n    font-size: 12px;\r\n    line-height: 1.6;\r\n}\r\n.selected span{\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    line-height: 1.6;\r\n}\r\n.main_box{\r\n    padding: 15px 0px;\r\n    height: 58vh;\r\n    overflow: auto;\r\n}\r\n.item{\r\n    display: flex;\r\n    width: 70%;\r\n    padding: 16px 20px;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    gap: 12px;\r\n    margin: 0px auto 30px;\r\n    border-radius: 12px;\r\n    background: #FFF;\r\n    cursor: pointer;\r\n}\r\n.up{\r\n    padding-bottom: 12px;\r\n    width: 100%;\r\n    border-bottom: 1px solid #EEE;\r\n}\r\n.up_box{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n}\r\n.name{\r\n    color: #3F87E1;\r\n    margin-right: 5px;\r\n    line-height: 1.6;\r\n}\r\n.ask{\r\n    color: #9B9B9B;\r\n    line-height: 1.6;\r\n}\r\n.content{\r\n    width: 100%;\r\n    line-height: 1.6;\r\n}\r\n.time{\r\n    color: #7E7E7E;\r\n    font-size: 14px;\r\n    line-height: 1.6;\r\n}\r\n.down{\r\n    width: 100%;\r\n}\r\n.mark{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n}\r\n.ing_box,\r\n.left_box{\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.ing_box{\r\n    justify-content: space-between;\r\n    width: 100%;\r\n}\r\n\r\n.ing_btn,\r\n.waiteva_btn,\r\n.refuse_btn{\r\n    height: 19px;\r\n    padding: 8px 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #EEE;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n}\r\n/* 剩余时间 */\r\n.ing_btn{\r\n    background: #67ABFF;\r\n\r\n}\r\n/* 等待用户评价 */\r\n.waiteva_btn{\r\n    background: #67ABFF;\r\n}\r\n/* 已拒绝该回答 */\r\n.refuse_btn{\r\n    background-color: #A2A2A2;;\r\n}\r\n::v-deep .el-dialog__wrapper {\r\n   background-color: rgba(0, 0, 0, 0.5)!important;\r\n}\r\n::v-deep .el-overlay {\r\n  background-color: rgba(0, 0, 0, 0.5) !important;\r\n}\r\n/* 对手机屏幕和小尺寸屏幕的样式调整 */\r\n@media (max-width: 768px) {\r\n    .select{\r\n        width: 90%;\r\n    }\r\n    .item{\r\n        width: 88%;\r\n        padding: 16px 1rem;\r\n        gap: 12px;\r\n        border-radius: 12px;\r\n        background: #FFF;\r\n        cursor: pointer;\r\n    }\r\n    .main_box{\r\n        height: 57vh;\r\n    }\r\n    .ing_btn,\r\n    .waiteva_btn,\r\n    .refuse_btn{\r\n        font-size: 0.8rem;\r\n        padding: 0.4rem 0.5rem;\r\n    }\r\n    .re-ac{\r\n        gap: 0px;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}