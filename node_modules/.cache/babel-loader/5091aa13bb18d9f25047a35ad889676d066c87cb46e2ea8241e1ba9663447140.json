{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-eeac426e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"large\"\n};\nconst _hoisted_2 = {\n  class: \"tour\"\n};\nconst _hoisted_3 = {\n  class: \"contain\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"m-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_popover = _resolveComponent(\"el-popover\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"more\",\n    style: _normalizeStyle($setup.bgcurl)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" element弹出框插件 \"), _createCommentVNode(\" :style=\\\"{backgroundImage: 'url('+backgroudImg+')'}\\\" \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.board, (boardsource, index) => {\n    return _openBlock(), _createBlock(_component_el_popover, {\n      placement: \"bottom\",\n      width: 365,\n      trigger: \"hover\",\n      key: index\n    }, {\n      reference: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(boardsource.name), 1 /* TEXT */)]),\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.subBoard[index], (subBoardsource, sIdx) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          class: \"small\",\n          onClick: $event => $setup.getId(subBoardsource.id, subBoardsource.name),\n          key: sIdx\n        }, [_createElementVNode(\"span\", null, _toDisplayString(subBoardsource.name), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_4);\n      }), 128 /* KEYED_FRAGMENT */))])]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createVNode($setup[\"TheInput\"]), _createVNode($setup[\"TheAriticle\"])])], 4 /* STYLE */);\n}","map":{"version":3,"names":["class","_createElementBlock","style","_normalizeStyle","$setup","bgcurl","_createElementVNode","_hoisted_1","_hoisted_2","_createCommentVNode","_Fragment","_renderList","board","boardsource","index","_createBlock","_component_el_popover","placement","width","trigger","key","reference","_withCtx","_hoisted_5","_toDisplayString","name","_hoisted_3","subBoard","subBoardsource","sIdx","onClick","$event","getId","id","_createVNode"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\TheMain\\components\\TheMiddle.vue"],"sourcesContent":["<template>\r\n<div class=\"more\"     :style=\"bgcurl\">\r\n    <div class=\"large\">\r\n        <div class=\"tour\">\r\n            <!-- element弹出框插件 -->\r\n            <!-- :style=\"{backgroundImage: 'url('+backgroudImg+')'}\" -->\r\n            <el-popover placement=\"bottom\" :width=\"365\" trigger=\"hover\" v-for=\"(boardsource,index) in board\" :key=\"index\">\r\n                <!-- \r\n                    弹出框内容，根据循环的index确定渲染一级标签下的二级标签,\r\n                    这里已经实现了根据数据库中一级板块的数量动态构建popover模块,\r\n                    为实现这个效果构建了名为subboard的二维数组\r\n                    （好吧，其实reactive强大的类型转化功能让我觉得这玩意不能叫二维数组，就是个map）\r\n                    当然，我觉得还可以把一级板块和其对应的二级板块进行绑定，这样同样需要两个循环，\r\n                    目前来看和现在所用方法效率差别不大，只是逻辑上更合理一些。\r\n                    onmounted中就不做注释了，这里提及二维数组的概念后理解底下的内容就很简单。\r\n                -->\r\n                <div class=\"contain\">\r\n                    <div class=\"small\" v-for=\"(subBoardsource, sIdx) in subBoard[index]\" @click=\"getId(subBoardsource.id,subBoardsource.name)\" :key=\"sIdx\">\r\n                        <span >\r\n                            {{ subBoardsource.name }}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <!--\r\n                    补个注释：底下的板块是在显示一级板块文字\r\n                -->       \r\n                <template #reference>\r\n                    <div class=\"m-2\">\r\n                        {{ boardsource.name }}\r\n                    </div>\r\n                </template>\r\n            </el-popover>\r\n        </div>\r\n        <TheInput />\r\n        <TheAriticle />\r\n    </div>\r\n</div>\r\n\r\n    \r\n</template>\r\n\r\n<script setup>\r\nimport TheInput from './TheInput.vue'\r\nimport TheAriticle from './TheAriticle.vue'\r\nimport { computed,ref,onMounted,reactive} from 'vue'\r\nimport axios from '@/utils/request';\r\nimport { useStore } from 'vuex';\r\n\r\nconst store = useStore()\r\nconst board = reactive([])\r\nconst subBoard = reactive([]) // 放置二级板块内容\r\n    \r\n//使用require导入图片静态资源\r\nconst darkImage = require('@/assets/TheMain/dark.png');\r\nconst lightImage = require('@/assets/TheMain/light.png');\r\nlet backgroundImage = ref(require('@/assets/TheMain/dark.png'));\r\nconst state = ref({ids: []});\r\n\r\nconst bgcurl = computed(() => {\r\n        return { backgroundImage: 'url(\\'' + backgroundImage.value + '\\')' };\r\n    });\r\n        \r\n\r\nonMounted(async () => {\r\n    //根据系统时间更换背景\r\n    let currentHour = new Date().getHours();\r\n    if (currentHour >= 18 || currentHour < 7) {\r\n        backgroundImage.value = darkImage;  // 夜晚\r\n\r\n    } else {\r\n        backgroundImage.value = lightImage;  // 白天的图片\r\n    }\r\n    try {\r\n        // 获取一级板块\r\n        const response = await axios.get('/board')\r\n       //  const response = await axios.get('/board?apifoxApiId=102350996')\r\n        for (let i = 0; i < response.data.data.length; i++) {\r\n            board.push({\r\n                name: response.data.data[i].name,\r\n                id: response.data.data[i].id\r\n            });\r\n            state.value.ids.push(response.data.data[i].id);\r\n        }\r\n\r\n        console.log(state.value);\r\n\r\n        // 根据一级板块获取二级板块\r\n        for (let i = 0; i < state.value.ids.length; i++) {\r\n           const subResponse = await axios.get(`/subboard/${state.value.ids[i]}`);\r\n          //     const subResponse = await axios.get(`/subboard/${state.value.ids[i]}?apifoxApiId=102356783`);\r\n            const currentSubBoard = []; // 新的二级板块数组\r\n            for (let j = 0; j < subResponse.data.data.length; j++) {\r\n                currentSubBoard.push({\r\n                    name: subResponse.data.data[j].name,\r\n                    id: subResponse.data.data[j].id\r\n                });\r\n            }\r\n            subBoard.push(currentSubBoard); // 将当前的二级板块数组推入到subboard中\r\n        }\r\n    }catch (error) {\r\n        console.log(error);\r\n    }\r\n})\r\n\r\n// 传送点击的二级板块id\r\nfunction getId(id,name){\r\n    store.commit('GETID',id)\r\n    store.commit('GETNAME',name)\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.more{\r\n    width: 100%;\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 500px;\r\n    margin-top: 40px;\r\n    z-index: -1;\r\n}\r\n.large{\r\n    position: relative;\r\n    z-index: 1;\r\n}\r\n/* 标签样式 */\r\n.tour{\r\n    padding: 60px 100px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n/* 按钮样式 */\r\n.m-2{\r\n    font-family: Microsoft YaHei;\r\n    font-size: 32px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: normal;\r\n    letter-spacing: 9.6px;\r\n    color: white !important; \r\n    position: relative;\r\n    margin-left: 0px;\r\n}\r\n.m-2::after {\r\n  content: attr(data-text);\r\n  position: absolute;\r\n  bottom: -150%;\r\n  transform: scaleY(-1);\r\n  color: white;\r\n  mask-image: linear-gradient(to top, rgba(254,254,254,0.2), rgba(254,254,254,0));\r\n  -webkit-mask-image: linear-gradient(to top, rgba(254,254,254,0.2), rgba(254,254,254,0));\r\n}\r\n.m-2:hover{\r\n    color: #ADB5DE !important;\r\n}\r\n/* a标签样式 */\r\n.contain{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    background-color: #F4F8FB;\r\n}\r\n.small{\r\n    align-items: center;\r\n    padding: 14px 26px;\r\n    margin: 2px 0px 10px 10px;\r\n    cursor: pointer;\r\n}\r\n.small span{\r\n    color: #000;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 18px;\r\n    font-weight: 400;\r\n    text-decoration-line: underline;\r\n    text-decoration: none;\r\n    text-decoration-skip-ink:none;\r\n    padding-bottom: 2px;\r\n    display: inline-block;\r\n    transition: transform 0.5s ease;\r\n}\r\n/* 设置鼠标悬停样式 */\r\n.small:hover{\r\n    border-radius: 8px;\r\n    background: #8187A5;\r\n    box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.10);\r\n}\r\n.small:hover span{\r\n    color: #FDFBF6;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 18px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: normal;  \r\n    transform: translateY(-5px);\r\n}\r\n/* 对手机屏幕和小尺寸屏幕的样式调整 */\r\n@media (max-width: 768px) {\r\n    .more {\r\n        padding: 10px 0px; /* 增加一些内边距 */\r\n    }\r\n\r\n    .large {\r\n        margin: 20px 0; /* 调整边距 */\r\n    }\r\n\r\n    .tour {\r\n        padding: 20px 15px;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    .m-2 {\r\n        font-size: 20px; \r\n        padding-left: 10px;\r\n        margin-bottom: 10px; \r\n    }\r\n    .m-2::after {\r\n        display: none;\r\n    }\r\n    .contain {\r\n        flex-direction: column; /* 列式布局 */\r\n    }\r\n\r\n    .small {\r\n        margin: 5px 0; /* 减少边距 */\r\n    }\r\n\r\n    .small span {\r\n        font-size: 16px; /* 减小字体大小 */\r\n    }\r\n}\r\n</style>"],"mappings":";;;EAESA,KAAK,EAAC;AAAO;;EACTA,KAAK,EAAC;AAAM;;EAaJA,KAAK,EAAC;AAAS;;;EAWXA,KAAK,EAAC;AAAK;;;uBA1BpCC,mBAAA,CAmCM;IAnCDD,KAAK,EAAC,MAAM;IAAME,KAAK,EAAAC,eAAA,CAAEC,MAAA,CAAAC,MAAM;MAChCC,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCFD,mBAAA,CA6BM,OA7BNE,UA6BM,GA5BFC,mBAAA,kBAAqB,EACrBA,mBAAA,2DAA4D,G,kBAC5DR,mBAAA,CAyBaS,SAAA,QAAAC,WAAA,CAzB6EP,MAAA,CAAAQ,KAAK,GAA3BC,WAAW,EAACC,KAAK;yBAArFC,YAAA,CAyBaC,qBAAA;MAzBDC,SAAS,EAAC,QAAQ;MAAEC,KAAK,EAAE,GAAG;MAAEC,OAAO,EAAC,OAAO;MAAuCC,GAAG,EAAEN;;MAoBxFO,SAAS,EAAAC,QAAA,CAChB,MAEM,CAFNhB,mBAAA,CAEM,OAFNiB,UAEM,EAAAC,gBAAA,CADCX,WAAW,CAACY,IAAI,iB;wBAZ3B,MAMM,CANNnB,mBAAA,CAMM,OANNoB,UAMM,I,kBALFzB,mBAAA,CAIMS,SAAA,QAAAC,WAAA,CAJ8CP,MAAA,CAAAuB,QAAQ,CAACb,KAAK,IAAvCc,cAAc,EAAEC,IAAI;6BAA/C5B,mBAAA,CAIM;UAJDD,KAAK,EAAC,OAAO;UAAoD8B,OAAK,EAAAC,MAAA,IAAE3B,MAAA,CAAA4B,KAAK,CAACJ,cAAc,CAACK,EAAE,EAACL,cAAc,CAACH,IAAI;UAAIL,GAAG,EAAES;YAC7HvB,mBAAA,CAEO,cAAAkB,gBAAA,CADAI,cAAc,CAACH,IAAI,iB;;;;oCAc1CS,YAAA,CAAY9B,MAAA,eACZ8B,YAAA,CAAe9B,MAAA,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}