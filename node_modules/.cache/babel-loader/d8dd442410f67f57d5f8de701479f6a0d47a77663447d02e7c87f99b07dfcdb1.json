{"ast":null,"code":"import { watchEffect, ref } from \"vue\";\nimport { ElMessage } from 'element-plus';\nimport axios from '../../utils/request';\nexport default {\n  __name: 'AreportedDialog',\n  props: {\n    modelValue: Boolean,\n    type: Number,\n    id: Number\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const title = ref('文章举报');\n    const checked1 = ref(true);\n    const checked2 = ref(false);\n    const checked3 = ref(false);\n    const checked4 = ref(true);\n    const checked5 = ref(false);\n    const checked6 = ref(false);\n    const checked7 = ref(false);\n    const checked8 = ref(true);\n    const checked9 = ref(false);\n    const checked10 = ref(false);\n    const checked11 = ref(true);\n    const checked12 = ref(false);\n    const checked13 = ref(false);\n    const checked14 = ref(false);\n    const checked15 = ref(false);\n    const emit = __emit;\n    const localDialogVisible = ref(props.modelValue);\n    watchEffect(() => {\n      if (props.type == 0) {\n        title.value = '文章举报';\n      } else if (props.type == 1) {\n        title.value = '分享举报';\n      }\n      if (localDialogVisible.value !== props.modelValue) {\n        emit('update:modelValue', localDialogVisible.value);\n      }\n    });\n    const textarea = ref('');\n    const tempData = ref();\n\n    // 定义每个类别和对应的复选框\n    const categories = ref([{\n      label: '违反法律法规',\n      checkboxes: [{\n        label: '违法违规',\n        value: checked1\n      }, {\n        label: '抄袭',\n        value: checked2\n      }, {\n        label: '赌博诈骗',\n        value: checked3\n      }]\n    }, {\n      label: '谣言类不实信息',\n      checkboxes: [{\n        label: '涉政谣言',\n        value: checked4\n      }, {\n        label: '疫情谣言',\n        value: checked5\n      }, {\n        label: '涉社会事件谣言',\n        value: checked6\n      }, {\n        label: '虚假不实信息',\n        value: checked7\n      }]\n    }, {\n      label: '不友善行为',\n      checkboxes: [{\n        label: '人身攻击',\n        value: checked8\n      }, {\n        label: '侵犯隐私',\n        value: checked9\n      }, {\n        label: '引战',\n        value: checked10\n      }]\n    }, {\n      label: '有害社区环境',\n      checkboxes: [{\n        label: '垃圾广告',\n        value: checked11\n      }, {\n        label: '色情低俗',\n        value: checked12\n      }, {\n        label: '文章不相关',\n        value: checked13\n      }, {\n        label: '其他',\n        value: checked14\n      }, {\n        label: '青少年不良信息',\n        value: checked15\n      }]\n    }]);\n\n    //根据父组件传回的type判断应该调用的接口类型（这个方法只是增加一个判断值）\n    const submitData = () => {\n      let selectedCategories = categories.value.map(category => {\n        // 筛选出被选中的复选框\n        const selected = category.checkboxes.filter(checkbox => checkbox.value).map(checkbox => checkbox.label);\n        // 如果有被选中的复选框，返回类别和选中的标签\n        return selected.length > 0 ? `${category.label}:${selected.join(',')}` : '';\n      }).filter(str => str).join(';');\n      // 如果 textarea 有值，则拼接到最后\n      if (textarea.value.trim() !== '') {\n        selectedCategories += `;详细信息:${textarea.value}`;\n      }\n      tempData.value = selectedCategories;\n      if (props.type == 0) {\n        getArticleReport(selectedCategories);\n      } else if (props.type == 1) {\n        getShareReport(selectedCategories);\n      }\n    };\n\n    //文章举报\n    async function getArticleReport(content) {\n      try {\n        const queryParams = new URLSearchParams({\n          articleId: Number(props.id)\n        }).toString();\n        const response = await axios.post(`/article/report?${queryParams}`, {\n          content: content\n        });\n        if (response.data.code === 1) {\n          ElMessage.success('举报成功');\n          localDialogVisible.value = false;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('文章举报失败');\n          ElMessage.error('文章举报失败');\n        }\n      } catch (error) {\n        console.error(\"文章举报失败\", error);\n        ElMessage.error('文章举报失败');\n      }\n    }\n    //分享举报\n    async function getShareReport(content) {\n      try {\n        const queryParams = new URLSearchParams({\n          shareId: Number(props.id)\n        }).toString();\n        const response = await axios.post(`/share/report?${queryParams}`, {\n          content: content\n        });\n        if (response.data.code === 1) {\n          ElMessage.success('举报成功');\n          localDialogVisible.value = false;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"分享举报失败\");\n          ElMessage.error('分享举报失败');\n        }\n      } catch (error) {\n        console.error(\"分享举报失败\", error);\n        ElMessage.error('分享举报失败');\n      }\n    }\n    const __returned__ = {\n      props,\n      title,\n      checked1,\n      checked2,\n      checked3,\n      checked4,\n      checked5,\n      checked6,\n      checked7,\n      checked8,\n      checked9,\n      checked10,\n      checked11,\n      checked12,\n      checked13,\n      checked14,\n      checked15,\n      emit,\n      localDialogVisible,\n      textarea,\n      tempData,\n      categories,\n      submitData,\n      getArticleReport,\n      getShareReport,\n      watchEffect,\n      ref,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["watchEffect","ref","ElMessage","axios","props","__props","title","checked1","checked2","checked3","checked4","checked5","checked6","checked7","checked8","checked9","checked10","checked11","checked12","checked13","checked14","checked15","emit","__emit","localDialogVisible","modelValue","type","value","textarea","tempData","categories","label","checkboxes","submitData","selectedCategories","map","category","selected","filter","checkbox","length","join","str","trim","getArticleReport","getShareReport","content","queryParams","URLSearchParams","articleId","Number","id","toString","response","post","data","code","success","msg","error","console","shareId"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/components/AreportedDialog.vue"],"sourcesContent":["<!-- 文章举报弹框 -->\r\n<template>\r\n    <div>\r\n        <el-dialog v-model=\"localDialogVisible\" :title=title>\r\n            <!-- 多选框 -->\r\n            <div class=\"container_1\">\r\n                <div class=\"item\">             \r\n                    <span>违反法律法规</span>\r\n                    <div class=\"option\">\r\n                        <el-checkbox v-model=\"checked1\" label=\"违法违规\" />\r\n                        <el-checkbox v-model=\"checked2\" label=\"抄袭\" />\r\n                        <el-checkbox v-model=\"checked3\" label=\"赌博诈骗\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"item\">             \r\n                    <span>谣言类不实信息</span>\r\n                    <div class=\"option\">\r\n                        <el-checkbox v-model=\"checked4\" label=\"涉政谣言\" />\r\n                        <el-checkbox v-model=\"checked5\" label=\"疫情谣言\" />\r\n                        <el-checkbox v-model=\"checked6\" label=\"涉社会事件谣言\" />\r\n                        <el-checkbox v-model=\"checked7\" label=\"虚假不实信息\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"item\">             \r\n                    <span>不友善行为</span>\r\n                    <div class=\"option\">\r\n                        <el-checkbox v-model=\"checked8\" label=\"人身攻击\" />\r\n                        <el-checkbox v-model=\"checked9\" label=\"侵犯隐私\" />\r\n                        <el-checkbox v-model=\"checked10\" label=\"引战\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"item\">             \r\n                    <span>有害社区环境</span>\r\n                    <div class=\"option\">\r\n                        <el-checkbox v-model=\"checked11\" label=\"垃圾广告\" />\r\n                        <el-checkbox v-model=\"checked12\" label=\"色情低俗\" />\r\n                        <el-checkbox v-model=\"checked13\" label=\"文章不相关\" />\r\n                        <el-checkbox v-model=\"checked14\" label=\"其他\" />\r\n                        <el-checkbox v-model=\"checked15\" label=\"青少年不良信息\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- 文字、图片描述 -->\r\n            <div class=\"container_2\">\r\n                <!-- 详细描述 -->\r\n                <div class=\"mainp\">\r\n                    <span class=\"pictext\">详细描述</span>\r\n                    <el-input\r\n                    v-model=\"textarea\"\r\n                    maxlength=\"200\"\r\n                    placeholder=\"请详细填写举报原因\"\r\n                    show-word-limit\r\n                    type=\"textarea\"\r\n                    size=\"large\"\r\n                    resize=\"none\"\r\n                    :autosize = \"{ minRows: 2, maxRows: 30 }\"\r\n                    class=\"input_el\"\r\n                    />\r\n                </div>\r\n            </div>   \r\n                \r\n            <template #footer>\r\n            <span class=\"dialog-footer\">\r\n                <el-button @click=\"localDialogVisible = false\">取消</el-button>\r\n                <el-button type=\"primary\" @click=\"submitData\">\r\n                确定\r\n                </el-button>\r\n            </span>\r\n            </template>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps,defineEmits,watchEffect,ref} from \"vue\";\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from '../../utils/request';\r\n\r\nconst props = defineProps({ \r\n  modelValue: Boolean,\r\n  type:Number,\r\n  id:Number,\r\n});\r\n\r\nconst title = ref('文章举报');\r\nconst checked1 = ref(true)\r\nconst checked2 = ref(false)\r\nconst checked3 = ref(false)\r\nconst checked4 = ref(true)\r\nconst checked5 = ref(false)\r\nconst checked6 = ref(false)\r\nconst checked7 = ref(false)\r\nconst checked8 = ref(true)\r\nconst checked9 = ref(false)\r\nconst checked10 = ref(false)\r\nconst checked11 = ref(true)\r\nconst checked12 = ref(false)\r\nconst checked13 = ref(false)\r\nconst checked14 = ref(false)\r\nconst checked15 = ref(false)\r\n\r\nconst emit = defineEmits(['update:modelValue']);\r\nconst localDialogVisible = ref(props.modelValue);\r\nwatchEffect(() => {\r\n  if( props.type == 0){\r\n    title.value = '文章举报';\r\n  }else if(props.type == 1){\r\n    title.value = '分享举报';\r\n  }\r\n  if (localDialogVisible.value !== props.modelValue) {\r\n    emit('update:modelValue', localDialogVisible.value);\r\n  }\r\n});\r\n\r\nconst textarea = ref('');\r\nconst tempData = ref();\r\n\r\n// 定义每个类别和对应的复选框\r\nconst categories = ref([\r\n  { \r\n    label: '违反法律法规', \r\n    checkboxes: [\r\n      { label: '违法违规', value: checked1 },\r\n      { label: '抄袭', value: checked2 },\r\n      { label: '赌博诈骗', value: checked3 }\r\n    ]\r\n  },\r\n  { \r\n    label: '谣言类不实信息', \r\n    checkboxes: [\r\n      { label: '涉政谣言', value: checked4 },\r\n      { label: '疫情谣言', value: checked5 },\r\n      { label: '涉社会事件谣言', value: checked6 },\r\n      { label: '虚假不实信息', value: checked7 }\r\n    ]\r\n  },\r\n  { \r\n    label: '不友善行为', \r\n    checkboxes: [\r\n      { label: '人身攻击', value: checked8 },\r\n      { label: '侵犯隐私', value: checked9 },\r\n      { label: '引战', value: checked10 }\r\n    ]\r\n  },\r\n  { \r\n    label: '有害社区环境', \r\n    checkboxes: [\r\n      { label: '垃圾广告', value: checked11 },\r\n      { label: '色情低俗', value: checked12 },\r\n      { label: '文章不相关', value: checked13 },\r\n      { label: '其他', value: checked14 },\r\n      { label: '青少年不良信息', value: checked15 }\r\n    ]\r\n  }\r\n]);\r\n\r\n//根据父组件传回的type判断应该调用的接口类型（这个方法只是增加一个判断值）\r\nconst submitData = () => {\r\n  let selectedCategories = categories.value.map(category => {\r\n    // 筛选出被选中的复选框\r\n    const selected = category.checkboxes\r\n      .filter(checkbox => checkbox.value)\r\n      .map(checkbox => checkbox.label); \r\n    // 如果有被选中的复选框，返回类别和选中的标签\r\n    return selected.length > 0 ? `${category.label}:${selected.join(',')}` : '';\r\n  }).filter(str => str).join(';');\r\n  // 如果 textarea 有值，则拼接到最后\r\n  if (textarea.value.trim() !== '') {\r\n    selectedCategories += `;详细信息:${textarea.value}`;\r\n  }\r\n  tempData.value = selectedCategories;\r\n  if (props.type == 0) {\r\n    getArticleReport(selectedCategories);\r\n  } else if (props.type == 1) {\r\n    getShareReport(selectedCategories);\r\n  }\r\n};\r\n\r\n\r\n\r\n//文章举报\r\nasync function getArticleReport(content) {\r\n  try{\r\n    const queryParams = new URLSearchParams({\r\n      articleId: Number(props.id),\r\n    }).toString();\r\n    const response = await axios.post(`/article/report?${queryParams}`,{\r\n      content: content,\r\n    })\r\n    if(response.data.code === 1){\r\n        ElMessage.success('举报成功');\r\n        localDialogVisible.value = false;\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error('文章举报失败');\r\n        ElMessage.error('文章举报失败')\r\n    }\r\n  } catch (error) {\r\n    console.error(\"文章举报失败\", error); \r\n    ElMessage.error('文章举报失败');\r\n  }\r\n}\r\n//分享举报\r\nasync function getShareReport(content) {\r\n  try{\r\n    const queryParams = new URLSearchParams({\r\n      shareId: Number(props.id),\r\n    }).toString();\r\n    const response = await axios.post(`/share/report?${queryParams}`,{\r\n      content: content,\r\n    })\r\n    if(response.data.code === 1){\r\n        ElMessage.success('举报成功');\r\n        localDialogVisible.value = false\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n    console.error(\"分享举报失败\");\r\n    ElMessage.error('分享举报失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"分享举报失败\", error); \r\n    ElMessage.error('分享举报失败');\r\n  }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n::v-deep .el-dialog{\r\n    width: 65%;\r\n    --el-dialog-margin-top: 9vh;\r\n}\r\n::v-deep .el-dialog__body{\r\n    padding: 10px 30px;\r\n}\r\n::v-deep .el-dialog__header{\r\n    text-align: center;\r\n}\r\n::v-deep .el-dialog__title {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n}\r\n.container_1,\r\n.container_2{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n}\r\n.option{\r\n    margin-top: 10px;\r\n    display: flex;\r\n    gap: 10px;\r\n}\r\n.container_2{\r\n    margin-top:30px;\r\n    padding-top: 30px;\r\n    border-top:1px solid #dedede;\r\n    width: 80%;\r\n}\r\n.ptitie {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  align-self: stretch;\r\n}\r\n.pictext {\r\n    display: block;\r\n    width: 70px;\r\n}\r\n.coverage{\r\n    display: flex;\r\n    gap: 20px;\r\n}\r\n.avatar-uploader{\r\n    width: 178px;\r\n    border: 1px dashed #b9b9b9;\r\n    border-radius: 10px\r\n}\r\n.avatar-uploader .avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n}\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed var(--el-border-color);\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: var(--el-transition-duration-fast);\r\n}\r\n\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: var(--el-color-primary);\r\n}\r\n\r\n.el-icon.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  text-align: center;\r\n}\r\n/* 三个输入框边框样式 */\r\n::v-deep .el-input__wrapper,\r\n::v-deep .el-textarea__inner{\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n::v-deep .el-input__wrapper{\r\n  height: 40px;\r\n}  \r\n::v-deep .el-textarea__inner{\r\n  height: 60px;\r\n}  \r\n/* 三个输入框获得焦点时的边框样式 */\r\n::v-deep .el-input__wrapper.is-focus,\r\n::v-deep .el-textarea__inner:focus{\r\n  box-shadow: 0 2px 6px #cfd7e2;\r\n  border: 1px solid #d7d7d7;\r\n}\r\n.input_el textarea {\r\n  overflow: hidden;\r\n}\r\n.mainp{\r\n  /* width: 590px; */\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 20px;\r\n  align-self: stretch;\r\n}\r\n.dialog-footer button:first-child {\r\n  margin-right: 10px;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}