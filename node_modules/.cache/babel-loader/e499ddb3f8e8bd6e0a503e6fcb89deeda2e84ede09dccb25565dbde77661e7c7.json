{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-680b4896\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"setting\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"个人设置\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Setting = _resolveComponent(\"Setting\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  const _component_el_aside = _resolveComponent(\"el-aside\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div class=\\\"large_box\\\"> \"), _createVNode(_component_el_aside, {\n    width: \"100%\",\n    class: \"all\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode(_component_Setting)]),\n      _: 1 /* STABLE */\n    }), _hoisted_2]), _createVNode(_component_el_menu, {\n      class: \"sidebar-menu\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.menuItems, item => {\n        return _openBlock(), _createBlock(_component_el_menu_item, {\n          key: item.componentName,\n          class: _normalizeClass({\n            'mid-item': item.isMidItem,\n            'title1': item.isTitle,\n            'active': $data.activeComponent === item.componentName,\n            'disabled': item.disabled\n          }),\n          disabled: item.disabled,\n          onClick: $event => $options.selectComponent(item.componentName)\n        }, {\n          default: _withCtx(() => [item.icon ? (_openBlock(), _createBlock(_component_el_icon, {\n            key: 0\n          }, {\n            default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent(item.icon)))]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", null, _toDisplayString(item.label), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"disabled\", \"onClick\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" </div> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","_createVNode","_component_el_aside","width","_hoisted_1","_component_el_icon","_component_Setting","_hoisted_2","_component_el_menu","_createElementBlock","_Fragment","_renderList","$data","menuItems","item","_createBlock","_component_el_menu_item","key","componentName","_normalizeClass","isMidItem","isTitle","activeComponent","disabled","onClick","$event","$options","selectComponent","icon","_resolveDynamicComponent","_toDisplayString","label"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\TheSettings\\components\\SideBar.vue"],"sourcesContent":["<template>\r\n  <!-- <div class=\"large_box\"> -->\r\n    <el-aside width=\"100%\" class=\"all\">\r\n      <div class=\"setting\">\r\n        <el-icon><Setting /></el-icon>\r\n        <span>个人设置</span>\r\n      </div>\r\n\r\n      <el-menu class=\"sidebar-menu\" >\r\n        <el-menu-item\r\n          v-for=\"item in menuItems\"\r\n          :key=\"item.componentName\"\r\n          :class=\"{ \r\n            'mid-item': item.isMidItem, \r\n            'title1': item.isTitle, \r\n            'active': activeComponent === item.componentName, \r\n            'disabled': item.disabled \r\n          }\"\r\n          :disabled=\"item.disabled\"\r\n          @click=\"selectComponent(item.componentName)\">\r\n          <el-icon v-if=\"item.icon\"><component :is=\"item.icon\" /></el-icon>\r\n          <span>{{ item.label }}</span>\r\n        </el-menu-item>\r\n      </el-menu>\r\n    </el-aside>\r\n  <!-- </div> -->\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      activeComponent: 'BasicInfo',  \r\n      menuItems: [\r\n        { label: '账户设置', disabled: true,isTitle: true, icon: 'User', componentName: 'BasicInfo' },\r\n        { label: '基本信息', isMidItem: true, componentName: 'BasicInfo' },\r\n        { label: '个人经历', isMidItem: true, componentName: 'PersExpe' },\r\n        { label: '通知设置', isMidItem: true, componentName: 'NotiSet' },\r\n        { label: '问答设置', isMidItem: true, componentName: 'QASetting' },\r\n        { label: '安全设置', disabled: true,  componentName: 'SecuLog' ,isTitle: true,icon:'Lock' },\r\n        // { label: '账户安全',isMidItem: true,componentName: 'AccountSec'},\r\n        {label: '退出登录', isMidItem: true,componentName: 'LogExit'},\r\n        { label: '我的钱包',  disabled: true,isTitle: true, icon: 'Coin', componentName: 'BalanceSection' },\r\n        { label: '我的余额', isMidItem: true, componentName: 'BalanceSection' },\r\n        { label: '兑换鱼饵', isMidItem: true, componentName: 'ExchangeTo' },\r\n        // { label: '充值渔币', isMidItem: true, componentName: 'TopUp' }\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    selectComponent(componentName) {\r\n      this.activeComponent = componentName;  // 修改这里的变量名\r\n      this.$emit('show-component', componentName);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.large_box{\r\n  background-color: #EEEEEE;\r\n}\r\n\r\n.all{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: #EEEEEE;\r\n}\r\n\r\n.sidebar-menu{\r\n  background-color: #EEEEEE;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n}\r\n::v-deep .el-menu-item{\r\n  height: 45px;\r\n}\r\n.setting{\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  font-size:20px ;\r\n  font-weight: 700;\r\n  padding: 20px 15px 15px 0px;\r\n}\r\n\r\n.user{\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.title1{\r\n  display: flex;\r\n  gap: 5px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #EEEEEE;\r\n  padding: 0 55px 0 80px;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n}\r\n\r\n.mid-item{\r\n  color: #757575;\r\n  background-color: #EEEEEE;\r\n  display: flex;\r\n  justify-content: center;\r\n  border-radius: 6px;\r\n}\r\n\r\n::v-deep .el-menu-item{\r\n  border-radius: 6px;\r\n}\r\n\r\n::v-deep .el-menu{\r\n  border: none;\r\n  text-decoration: none;\r\n}\r\n\r\n::v-deep .el-menu-item:hover{\r\n  background-color: #9FA9CA !important;\r\n  color: #FFF !important;\r\n}\r\n\r\n::v-deep .el-menu-item:hover i {\r\n  color: #757575;\r\n}\r\n::v-deep .el-menu-item.is-disabled{\r\n  opacity: 1;\r\n}\r\n.active {\r\n  background-color: #9FA9CA !important;\r\n  color: #FFF !important;\r\n}\r\n.disabled {\r\n  pointer-events: none;   \r\n  color: #757575 !important; \r\n  background-color: #EEEEEE !important; \r\n}\r\n/* 调整滚动条宽度和颜色 */\r\n::-webkit-scrollbar {\r\n    width: 6px; /* 增加纵向滚动条的宽度 */\r\n    height: 8px; /* 增加横向滚动条的高度 */\r\n    background: transparent;\r\n}\r\n\r\n/* 定义滚动条轨道，设置为透明 */\r\n::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 8px rgba(0, 0, 0, 0); /* 内阴影 */\r\n    background: transparent; /* 将轨道背景设置为透明 */\r\n}\r\n\r\n/* 定义滑块，设置为浅灰色并增加内阴影 */\r\n::-webkit-scrollbar-thumb {\r\n    box-shadow: inset 0 0 8px rgba(115, 115, 115, 0.3); /* 添加淡灰色内阴影 */\r\n    background-color: #dbdbdb; /* 滑块的颜色改为浅灰色 */\r\n    border-radius: 10px; /* 保持圆角不变 */\r\n}\r\n/* 当鼠标悬停在滚动条滑块上时改变滑块的颜色 */\r\n::-webkit-scrollbar-thumb:hover {\r\n    background: #c6c6c6;\r\n}\r\n</style>\r\n"],"mappings":";;;EAGWA,KAAK,EAAC;AAAS;gEAElBC,mBAAA,CAAiB,cAAX,MAAI;;;;;;;6DAJhBC,mBAAA,+BAAgC,EAC9BC,YAAA,CAsBWC,mBAAA;IAtBDC,KAAK,EAAC,MAAM;IAACL,KAAK,EAAC;;sBAC3B,MAGM,CAHNC,mBAAA,CAGM,OAHNK,UAGM,GAFJH,YAAA,CAA8BI,kBAAA;wBAArB,MAAW,CAAXJ,YAAA,CAAWK,kBAAA,E;;QACpBC,UAAiB,C,GAGnBN,YAAA,CAeUO,kBAAA;MAfDV,KAAK,EAAC;IAAc;wBAEzB,MAAyB,E,kBAD3BW,mBAAA,CAaeC,SAAA,QAAAC,WAAA,CAZEC,KAAA,CAAAC,SAAS,EAAjBC,IAAI;6BADbC,YAAA,CAaeC,uBAAA;UAXZC,GAAG,EAAEH,IAAI,CAACI,aAAa;UACvBpB,KAAK,EAAAqB,eAAA;wBAA8BL,IAAI,CAACM,SAAS;sBAA0BN,IAAI,CAACO,OAAO;sBAA0BT,KAAA,CAAAU,eAAe,KAAKR,IAAI,CAACI,aAAa;wBAA4BJ,IAAI,CAACS;;UAMxLA,QAAQ,EAAET,IAAI,CAACS,QAAQ;UACvBC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,CAACb,IAAI,CAACI,aAAa;;4BAC1C,MAAiE,CAAlDJ,IAAI,CAACc,IAAI,I,cAAxBb,YAAA,CAAiEV,kBAAA;YAAAY,GAAA;UAAA;8BAAvC,MAA6B,E,cAA7BF,YAAA,CAA6Bc,wBAAA,CAAbf,IAAI,CAACc,IAAI,I;;6EACnD7B,mBAAA,CAA6B,cAAA+B,gBAAA,CAApBhB,IAAI,CAACiB,KAAK,iB;;;;;;;MAI3B/B,mBAAA,YAAe,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}