{"ast":null,"code":"import COS from 'cos-js-sdk-v5';\nimport axios from './request';\nimport { ElMessage } from 'element-plus';\nimport { ref } from 'vue';\nconst cosPermission = ref();\nconst cosBucket = ref([{\n  id: 1,\n  address: 'youyu-bucket-1-1319554411'\n}, {\n  id: 2,\n  address: 'youyu-bucket-article-invisible-1319554411'\n}, {\n  id: 3,\n  address: 'youyu-bucket-attachment-1319554411'\n}, {\n  id: 4,\n  address: 'youyu-bucket-user-invisible-1319554411'\n}, {\n  id: 5,\n  address: 'youyu-bucket-websocket-invisible-1319554411'\n}, {\n  id: 6,\n  address: 'youyu-bucket-article-visible-1319554411'\n}, {\n  id: 7,\n  address: 'youyu-bucket-share-invisible-1319554411'\n}]);\n\n// 上传文件到COS的函数(分块上传)\nasync function uploadFileToCOS(file, SliceSize, type, id, bucketId) {\n  if (!cosPermission.value) {\n    console.error('获取COS权限失败');\n    return;\n  }\n  const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\n  if (!bucketInfo) {\n    console.error('无效的存储桶ID');\n    return;\n  }\n  // 获取COS权限和实例化\n  const cos = new COS({\n    SecretId: cosPermission.value.tmpSecretId,\n    SecretKey: cosPermission.value.tmpSecretKey\n  });\n  // 执行上传\n  cos.uploadFile({\n    Bucket: bucketInfo.address,\n    Region: 'ap-chengdu',\n    Key: cosPermission.value.url,\n    Body: file,\n    SliceSize: SliceSize,\n    // 分片大小\n    onTaskReady: taskId => {\n      console.log(taskId);\n    },\n    onProgress: progressData => {\n      console.log(JSON.stringify(progressData));\n    },\n    onFileFinish: (err, data, options) => {\n      console.log(options.Key + '上传' + (err ? '失败' : '完成'));\n      if (err === null && type != -1) {\n        noticeSelected(type, id);\n      } else {\n        console.log(err);\n        ElMessage.error('数据上传失败');\n        noticeSelectedError(type, id);\n      }\n    }\n  }, (err, data) => {\n    console.log(err || data);\n  });\n}\n\n// 上传文件到COS的函数(普通上传)\nasync function uploadSmallFileToCOS(file, type, id, bucketId) {\n  if (!cosPermission.value) {\n    console.error('获取COS权限失败');\n    return;\n  }\n  const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\n  if (!bucketInfo) {\n    console.error('无效的存储桶ID');\n    return;\n  }\n  const cos = new COS({\n    SecretId: cosPermission.value.tmpSecretId,\n    SecretKey: cosPermission.value.tmpSecretKey\n  });\n  console.log(\"COS Key:\", cosPermission.value.url);\n  cos.putObject({\n    Bucket: bucketInfo.address,\n    Region: 'ap-chengdu',\n    Key: cosPermission.value.url,\n    Body: file,\n    onProgress: progressData => {\n      console.log(JSON.stringify(progressData));\n    }\n  }, (err, data) => {\n    if (err) {\n      console.error('上传失败', err);\n      ElMessage.error('数据上传失败');\n      noticeSelectedError(type, id);\n    } else {\n      console.log('上传成功', data);\n      noticeSelected(type, id);\n    }\n  });\n}\n\n// 上传文件到COS的函数(多文件上传，因为前端需要自己拼url)\nasync function uploadMultipleFilesToCOS(files, filenames, type, id, bucketId) {\n  if (!cosPermission.value) {\n    console.error('获取COS权限失败');\n    return;\n  }\n  const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\n  if (!bucketInfo) {\n    console.error('无效的存储桶ID');\n    return;\n  }\n  const cos = new COS({\n    SecretId: cosPermission.value.tmpSecretId,\n    SecretKey: cosPermission.value.tmpSecretKey\n  });\n  for (let i = 0; i < files.length; i++) {\n    const file = files[i];\n    const filename = filenames[i];\n    const fileNameWithPath = `${cosPermission.value.url}/${filename}`; // 在文件名前加时间戳和路径\n    console.log(\"COS Key:\", fileNameWithPath);\n    await new Promise((resolve, reject) => {\n      cos.putObject({\n        Bucket: bucketInfo.address,\n        Region: 'ap-chengdu',\n        Key: fileNameWithPath,\n        Body: file,\n        onProgress: progressData => {\n          console.log(JSON.stringify(progressData));\n        }\n      }, (err, data) => {\n        if (err) {\n          console.error('上传失败', err);\n          ElMessage.error('数据上传失败');\n          reject(err);\n        } else {\n          console.log('上传成功', data);\n          resolve(data);\n        }\n      });\n    }).catch(err => {\n      // 处理上传过程中发生的错误\n      noticeSelectedError(type, id);\n      console.log(err);\n      return; // 遇到错误时终止循环\n    });\n  }\n  // 所有文件上传完成后的逻辑\n  noticeSelected(type, id);\n}\n\n//因为websocket需要给后端返回一些数据，所以单独写了一个函数\nasync function uploadSmallFileToWEBSOCKETCOS(file, type, bucketId) {\n  return new Promise((resolve, reject) => {\n    if (!cosPermission.value) {\n      console.error('获取COS权限失败');\n      reject('获取COS权限失败');\n    }\n    const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\n    if (!bucketInfo) {\n      console.error('无效的存储桶ID');\n      reject('无效的存储桶ID');\n    }\n    const cos = new COS({\n      SecretId: cosPermission.value.tmpSecretId,\n      SecretKey: cosPermission.value.tmpSecretKey\n    });\n    console.log(\"COS Key:\", cosPermission.value.url);\n    cos.putObject({\n      Bucket: bucketInfo.address,\n      Region: 'ap-chengdu',\n      Key: cosPermission.value.url,\n      Body: file,\n      onProgress: progressData => {\n        console.log(JSON.stringify(progressData));\n      }\n    }, (err, data) => {\n      if (err) {\n        console.error('上传失败', err);\n        ElMessage.error('数据上传失败');\n        if (type === 3) {\n          reject(0);\n        }\n        if (type === 11) {\n          reject(0);\n        }\n      } else {\n        console.log('上传成功', data);\n        if (type === 3) {\n          resolve(1);\n        }\n        if (type === 11) {\n          const tempUrl = 'https://';\n          const fileUrl = data.Location; // 文件的真实地址\n          const combinedUrl = tempUrl + fileUrl;\n          console.log(combinedUrl);\n          resolve(combinedUrl);\n        }\n      }\n    });\n  });\n}\n\n// 从COS下载文件到本地的函数(单个文件)\nasync function downloadFileFromCOS(bucketId) {\n  if (!cosPermission.value) {\n    console.error('获取COS权限失败');\n    return;\n  }\n  const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\n  if (!bucketInfo) {\n    console.error('无效的存储桶ID');\n    return;\n  }\n  // 获取COS权限和实例化\n  const cos = new COS({\n    SecretId: cosPermission.value.tmpSecretId,\n    SecretKey: cosPermission.value.tmpSecretKey\n  });\n  // 执行下载\n  cos.getObjectUrl({\n    Bucket: bucketInfo.address,\n    Region: 'ap-chengdu',\n    Key: cosPermission.value.url,\n    onProgress: function (progressData) {\n      console.log(JSON.stringify(progressData));\n    }\n  }, function (err, data) {\n    if (err === null) {\n      console.log(data);\n      const url = data.Url;\n      console.log('下载成功');\n      return url;\n    } else {\n      console.log(err);\n      ElMessage.error('数据获取失败');\n    }\n  });\n}\n\n// 从COS下载文件到本地的函数(多个文件)\nasync function downloadFilesFromCOS(bucketId) {\n  if (!cosPermission.value) {\n    console.error('获取COS权限失败');\n    return;\n  }\n  const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\n  if (!bucketInfo) {\n    console.error('无效的存储桶ID');\n    return;\n  }\n  const cos = new COS({\n    SecretId: cosPermission.value.tmpSecretId,\n    SecretKey: cosPermission.value.tmpSecretKey\n  });\n  let fileUrls = {}; // 用于存储文件的 URL\n  try {\n    // 获取文件夹内的所有文件\n    const response = cos.getBucket({\n      Bucket: bucketInfo.address,\n      Region: 'ap-chengdu',\n      Prefix: cosPermission.value.url // 指定文件夹路径\n    });\n    // 遍历所有文件并获取其 URL\n    for (const file of response.Contents) {\n      const url = await new Promise((resolve, reject) => {\n        cos.getObjectUrl({\n          Bucket: bucketInfo,\n          Region: 'ap-chengdu',\n          Key: file.Key\n        }, function (err, data) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(data.Url);\n          }\n        });\n      });\n      fileUrls[file.Key] = url; // 将 URL 添加到对象中\n    }\n    return fileUrls; // 返回包含所有文件 URL 的对象\n  } catch (err) {\n    console.error(err);\n    ElMessage.error('数据获取失败');\n    return null;\n  }\n}\n\n// 获取文章附件上传的COS许可证的函数\nexport async function getArticleCOSPermission(file, SliceSize, articleId, fileName, fileSize, requiredCoin, requiredPoint) {\n  try {\n    const response = await axios.post(`/article/attachment/upload/secret`, {\n      articleId: articleId,\n      size: fileSize,\n      requiredCoin: requiredCoin,\n      requiredPoint: requiredPoint,\n      filename: fileName\n    });\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      await uploadFileToCOS(file, SliceSize, 1, articleId, 3);\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n//上传完毕通知后端(文章附件上传)\nasync function noticeArticleAttachment(articleId) {\n  const response = await axios.put(`/article/attachment/${articleId}`);\n  if (response.data.code === 1) {\n    // ElMessage.success('通知成功');\n  } else {\n    ElMessage.error('通知失败');\n  }\n}\n\n// 获取认证材料上传的COS许可证的函数\nexport async function getCertificateCOSPermission(file, filename) {\n  try {\n    const queryParams = new URLSearchParams({\n      filename: filename\n    }).toString();\n    const response = await axios.post(`/file/upload/certificate/secret?${queryParams}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      await uploadSmallFileToCOS(file, 10, 0, 4);\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n//上传完毕通知后端(认证材料上传)\nasync function noticeCertificateCOS() {\n  const response = await axios.put(`/file/certificate`);\n  if (response.data.code === 1) {\n    // ElMessage.success('通知成功');\n  } else {\n    ElMessage.error('通知失败');\n  }\n}\n\n// 获取认证材料的函数\nexport async function getCertificateFromCOS(type) {\n  try {\n    const response = await axios.get(`/file/download/certificate/secret`, {\n      params: {\n        type: type\n      }\n    });\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      const urls = await downloadFilesFromCOS();\n      return urls;\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n// 获取首次提问图片上传的COS许可证的函数\nexport async function getFistQuestionCOSPermission(file, filename, questionId) {\n  try {\n    const queryParams = new URLSearchParams({\n      questionId: questionId,\n      filename: filename\n    }).toString();\n    const response = await axios.post(`/file/upload/question/picture/secret?${queryParams}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      await uploadSmallFileToCOS(file, 2, questionId, 5);\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n//上传完毕通知后端(第一次提问图片上传)\nasync function noticeFistQuestionCOS(questionId) {\n  const response = await axios.put(`/file/question/picture/${questionId}`);\n  if (response.data.code === 1) {\n    // ElMessage.success('通知成功');\n  } else {\n    ElMessage.error('通知失败');\n  }\n}\n\n// 获取首次提问图片的函数\nexport async function getFirstQuestionPictureFromCOS(questionId) {\n  try {\n    const response = await axios.get(`/file/download/question/picture/secret/${questionId}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      // const urls = await downloadFilesFromCOS();\n      // return urls;\n      return cosPermission.value.url;\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n// 获取首次回答图片上传的COS许可证的函数\nexport async function getFistAnswerCOSPermission(file, filename, questionId) {\n  try {\n    const queryParams = new URLSearchParams({\n      filename: filename,\n      questionId: questionId\n    }).toString();\n    const response = await axios.post(`/file/answer/upload/secret?${queryParams}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      await uploadSmallFileToCOS(file, 8, questionId, 5);\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n//上传完毕通知后端(第一次回答图片上传)\nasync function noticeFistAnswerCOS(questionId) {\n  const response = await axios.put(`/file/answer/${questionId}`);\n  if (response.data.code === 1) {\n    // ElMessage.success('通知成功');\n  } else {\n    ElMessage.error('通知失败');\n  }\n}\n\n// 获取首次回答图片的函数\nexport async function getFirstAnswerPictureFromCOS(questionId) {\n  try {\n    const response = await axios.get(`/file/answer/download/secret/${questionId}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      // const url = await downloadFileFromCOS();\n      // return url;\n      return cosPermission.value.url;\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n// 获取聊天时上传图片的COS许可证的函数\nexport async function getAskAndQuestionCOSPermission(file, dto) {\n  cosPermission.value.tmpSecretId = dto.tmpSecretId;\n  cosPermission.value.tmpSecretKey = dto.tmpSecretKey;\n  // cosPermission.value.url = 'text.jpg';\n  // console.log(dto);\n  cosPermission.value.url = dto.url;\n  const num = await uploadSmallFileToWEBSOCKETCOS(file, 3, 5);\n  return num;\n}\n\n//上传完毕通知后端(问答聊天图片正确上传)\nasync function noticeAskAndQuestion() {\n  return 1;\n}\n\n//上传完毕通知后端(问答聊天图片错误上传)\nasync function noticeAskAndQuestionError() {\n  return 0;\n}\n\n// 获取收藏主图上传的COS许可证的函数\nexport async function getFavoritePermission(file, filename, favoriteId) {\n  try {\n    const queryParams = new URLSearchParams({\n      filename: filename,\n      favoriteId: favoriteId\n    }).toString();\n    const response = await axios.post(`/file/favorite/upload/secret?${queryParams}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      await uploadSmallFileToCOS(file, 4, favoriteId, 4);\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n//上传完毕通知后端(收藏主图上传)\nasync function noticefavoritePicture(favoriteId) {\n  const response = await axios.put(`/file/favorite/${favoriteId}`);\n  if (response.data.code === 1) {\n    // ElMessage.success('通知成功');\n  } else {\n    ElMessage.error('通知失败');\n  }\n}\n\n// 获取收藏主图图片的函数\nexport async function getFavoritePictureFromCOS(favoriteId) {\n  try {\n    const response = await axios.get(`/file/favorite/download/secret/${favoriteId}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      // const url = await downloadFileFromCOS();\n      // return url;\n      return cosPermission.value.url;\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n// 获取专栏主图上传的COS许可证的函数\nexport async function getColumnPermission(file, filename, columnId) {\n  try {\n    const queryParams = new URLSearchParams({\n      filename: filename,\n      columnId: columnId\n    }).toString();\n    const response = await axios.post(`/file/column/upload/secret?${queryParams}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      await uploadSmallFileToCOS(file, 9, columnId, 4);\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n//上传完毕通知后端(专栏主图上传)\nasync function noticeColumnPicture(columnId) {\n  const response = await axios.put(`/file/column/${columnId}`);\n  if (response.data.code === 1) {\n    // ElMessage.success('通知成功');\n  } else {\n    ElMessage.error('通知失败');\n  }\n}\n\n// 获取专栏主图图片的函数\nexport async function getColumnPictureFromCOS(columnId) {\n  try {\n    const response = await axios.get(`/file/column/download/secret/${columnId}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      // const url = await downloadFileFromCOS();\n      // return url;\n      return cosPermission.value.url;\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n// 获取用户头像上传的COS许可证的函数\nexport async function getUsersAvatarPermission(file, filename) {\n  try {\n    const queryParams = new URLSearchParams({\n      filename: filename\n    }).toString();\n    const response = await axios.post(`/file/users/avatar/upload/secret?${queryParams}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      await uploadSmallFileToCOS(file, 5, 0, 4);\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n//上传完毕通知后端(用户头像上传)\nasync function noticeUsersAvatar() {\n  const response = await axios.put(`/file/users/avatar`);\n  if (response.data.code === 1) {\n    // ElMessage.success('通知成功');\n  } else {\n    ElMessage.error('通知失败');\n  }\n}\n\n// 获取用户头像图片的函数\nexport async function getUsersAvatarFromCOS(id) {\n  try {\n    const response = await axios.get(`/file/users/avatar/download/secret/${id}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      // const url = await downloadFileFromCOS(4);\n      // return url;\n      return cosPermission.value.url;\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n// 获取文章内容图片上传的COS许可证的函数\nexport async function getArticleContentPermission(file, articleId, filename) {\n  try {\n    const queryParams = new URLSearchParams({\n      filename: filename,\n      articleId: articleId\n    }).toString();\n    const response = await axios.post(`/file/article/picture/upload/secret?${queryParams}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      const url = await uploadSmallFileToWEBSOCKETCOS(file, 11, 6);\n      if (url != 0) {\n        return url;\n      } else {\n        ElMessage.error('文章内容图片上传失败');\n      }\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n// 获取文章主图上传的COS许可证的函数\nexport async function getArticleCoveragePermission(file, filename, articleId) {\n  try {\n    const queryParams = new URLSearchParams({\n      filename: filename,\n      articleId: articleId\n    }).toString();\n    const response = await axios.post(`/file/article/coverage/upload/secret?${queryParams}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      await uploadSmallFileToCOS(file, 6, articleId, 2);\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n//上传完毕通知后端(文章主图上传)\nasync function noticeArticleCoverage(articleId) {\n  const response = await axios.put(`/file/article/coverage/${articleId}`);\n  if (response.data.code === 1) {\n    // ElMessage.success('通知成功');\n  } else {\n    ElMessage.error('通知失败');\n  }\n}\n\n// 获取文章主图图片的函数\nexport async function getArticleCoverageFromCOS(articleId) {\n  try {\n    const response = await axios.get(`/file/article/coverage/download/secret/${articleId}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      // const url = await downloadFileFromCOS();\n      // return url;\n      return cosPermission.value.url;\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n// 获取分享图片上传的COS许可证的函数\nexport async function getSharePicturePermission(files, filename, number, shareId) {\n  try {\n    const queryParams = new URLSearchParams({\n      number: number,\n      shareId: shareId\n    }).toString();\n    const response = await axios.post(`/file/share/picture/upload/secret?${queryParams}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      await uploadMultipleFilesToCOS(files, filename, 7, shareId, 7);\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n//上传完毕通知后端(分享图片上传)\nasync function noticeSharePicture(shareId) {\n  const response = await axios.put(`/file/share/picture/${shareId}`);\n  if (response.data.code === 1) {\n    // ElMessage.success('通知成功');\n  } else {\n    ElMessage.error('通知失败');\n  }\n}\n\n// 获取分享图片的函数\nexport async function getSharePictureFromCOS(shareId) {\n  try {\n    const response = await axios.get(`/file/share/picture/secret/${shareId}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      const urls = await downloadFilesFromCOS();\n      return urls;\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n// 获取视频切片的函数\nexport async function getVideoPaperFromCOS(id) {\n  try {\n    const response = await axios.get(`/file/paper/video/download/secret/${id}`);\n    if (response.data.code === 1) {\n      cosPermission.value = response.data.data;\n      // const url = await downloadFileFromCOS();\n      // return url;\n      return cosPermission.value.url;\n    } else {\n      console.error(response.data.msg || '未知错误');\n      return null;\n    }\n  } catch (error) {\n    console.error('获取COS权限失败', error.message);\n    return null;\n  }\n}\n\n//这是一个神奇的方法\nexport async function HAHAHAHA() {\n  downloadFileFromCOS();\n}\n\n//根据不同的type选择对应的通知接口\nasync function noticeSelected(type, id) {\n  switch (type) {\n    case 1:\n      await noticeArticleAttachment(id);\n      break;\n    case 2:\n      await noticeFistQuestionCOS(id);\n      break;\n    case 3:\n      await noticeAskAndQuestion();\n      break;\n    case 4:\n      await noticefavoritePicture(id);\n      break;\n    case 5:\n      await noticeUsersAvatar();\n      break;\n    case 6:\n      await noticeArticleCoverage(id);\n      break;\n    case 7:\n      await noticeSharePicture(id);\n      break;\n    case 8:\n      await noticeFistAnswerCOS(id);\n      break;\n    case 9:\n      await noticeColumnPicture(id);\n      break;\n    case 10:\n      await noticeCertificateCOS();\n      break;\n    case 12:\n      break;\n    default:\n      // 处理未知的 type\n      console.log('未知的类型:', type);\n      break;\n  }\n}\n\n//根据不同的type选择对应的通知接口\nasync function noticeSelectedError(type, id) {\n  switch (type) {\n    case 3:\n      await noticeAskAndQuestionError();\n      break;\n    default:\n      // 处理未知的 type\n      console.log('未知的类型:', id);\n      break;\n  }\n}","map":{"version":3,"names":["COS","axios","ElMessage","ref","cosPermission","cosBucket","id","address","uploadFileToCOS","file","SliceSize","type","bucketId","value","console","error","bucketInfo","find","bucket","cos","SecretId","tmpSecretId","SecretKey","tmpSecretKey","uploadFile","Bucket","Region","Key","url","Body","onTaskReady","taskId","log","onProgress","progressData","JSON","stringify","onFileFinish","err","data","options","noticeSelected","noticeSelectedError","uploadSmallFileToCOS","putObject","uploadMultipleFilesToCOS","files","filenames","i","length","filename","fileNameWithPath","Promise","resolve","reject","catch","uploadSmallFileToWEBSOCKETCOS","tempUrl","fileUrl","Location","combinedUrl","downloadFileFromCOS","getObjectUrl","Url","downloadFilesFromCOS","fileUrls","response","getBucket","Prefix","Contents","getArticleCOSPermission","articleId","fileName","fileSize","requiredCoin","requiredPoint","post","size","code","msg","message","noticeArticleAttachment","put","getCertificateCOSPermission","queryParams","URLSearchParams","toString","noticeCertificateCOS","getCertificateFromCOS","get","params","urls","getFistQuestionCOSPermission","questionId","noticeFistQuestionCOS","getFirstQuestionPictureFromCOS","getFistAnswerCOSPermission","noticeFistAnswerCOS","getFirstAnswerPictureFromCOS","getAskAndQuestionCOSPermission","dto","num","noticeAskAndQuestion","noticeAskAndQuestionError","getFavoritePermission","favoriteId","noticefavoritePicture","getFavoritePictureFromCOS","getColumnPermission","columnId","noticeColumnPicture","getColumnPictureFromCOS","getUsersAvatarPermission","noticeUsersAvatar","getUsersAvatarFromCOS","getArticleContentPermission","getArticleCoveragePermission","noticeArticleCoverage","getArticleCoverageFromCOS","getSharePicturePermission","number","shareId","noticeSharePicture","getSharePictureFromCOS","getVideoPaperFromCOS","HAHAHAHA"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/utils/cosService.js"],"sourcesContent":["import COS from 'cos-js-sdk-v5';\r\nimport axios from './request'; \r\nimport { ElMessage } from 'element-plus';\r\nimport { ref} from 'vue';\r\n\r\nconst cosPermission = ref();\r\nconst cosBucket = ref([\r\n    {id:1,address:'youyu-bucket-1-1319554411'},\r\n    {id:2,address:'youyu-bucket-article-invisible-1319554411'},\r\n    {id:3,address:'youyu-bucket-attachment-1319554411'},\r\n    {id:4,address:'youyu-bucket-user-invisible-1319554411'},\r\n    {id:5,address:'youyu-bucket-websocket-invisible-1319554411'},\r\n    {id:6,address:'youyu-bucket-article-visible-1319554411'},\r\n    {id:7,address:'youyu-bucket-share-invisible-1319554411'},\r\n]);\r\n\r\n// 上传文件到COS的函数(分块上传)\r\nasync function uploadFileToCOS(file, SliceSize,type,id,bucketId) {\r\n    if (!cosPermission.value) {\r\n        console.error('获取COS权限失败');\r\n        return;\r\n    }\r\n    const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\r\n    if (!bucketInfo) {\r\n        console.error('无效的存储桶ID');\r\n        return;\r\n    }\r\n    // 获取COS权限和实例化\r\n    const cos = new COS({\r\n        SecretId: cosPermission.value.tmpSecretId,\r\n        SecretKey: cosPermission.value.tmpSecretKey,\r\n    });\r\n    // 执行上传\r\n    cos.uploadFile({\r\n        Bucket: bucketInfo.address, \r\n        Region: 'ap-chengdu', \r\n        Key: cosPermission.value.url,\r\n        Body: file,\r\n        SliceSize: SliceSize, // 分片大小\r\n        onTaskReady: (taskId) => {\r\n            console.log(taskId);\r\n        },\r\n        onProgress: (progressData) => {\r\n            console.log(JSON.stringify(progressData));\r\n        },\r\n        onFileFinish: (err, data, options) => {\r\n           console.log(options.Key + '上传' + (err ? '失败' : '完成'));\r\n           if(err === null && type != -1 ){\r\n            noticeSelected(type,id);\r\n           }else{\r\n            console.log(err);\r\n            ElMessage.error('数据上传失败');\r\n            noticeSelectedError(type,id);\r\n           }\r\n        },\r\n    }, (err, data) => {\r\n        console.log(err || data);\r\n    });\r\n}\r\n\r\n\r\n// 上传文件到COS的函数(普通上传)\r\nasync function uploadSmallFileToCOS(file, type, id,bucketId) {\r\n    if (!cosPermission.value) {\r\n        console.error('获取COS权限失败');\r\n        return;\r\n    }\r\n    const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\r\n    if (!bucketInfo) {\r\n        console.error('无效的存储桶ID');\r\n        return;\r\n    }\r\n    const cos = new COS({\r\n        SecretId: cosPermission.value.tmpSecretId,\r\n        SecretKey: cosPermission.value.tmpSecretKey,\r\n    });\r\n    console.log(\"COS Key:\", cosPermission.value.url);\r\n    cos.putObject({\r\n        Bucket: bucketInfo.address,\r\n        Region: 'ap-chengdu',\r\n        Key: cosPermission.value.url,\r\n        Body: file,\r\n        onProgress: (progressData) => {\r\n            console.log(JSON.stringify(progressData));\r\n        }\r\n    }, (err, data) => {\r\n        if (err) {\r\n            console.error('上传失败', err);\r\n            ElMessage.error('数据上传失败');\r\n            noticeSelectedError(type, id);\r\n        } else {\r\n            console.log('上传成功', data);\r\n            noticeSelected(type, id);\r\n        }\r\n    });\r\n}\r\n\r\n// 上传文件到COS的函数(多文件上传，因为前端需要自己拼url)\r\nasync function uploadMultipleFilesToCOS(files, filenames, type, id, bucketId) {\r\n    if (!cosPermission.value) {\r\n        console.error('获取COS权限失败');\r\n        return;\r\n    }\r\n    const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\r\n    if (!bucketInfo) {\r\n        console.error('无效的存储桶ID');\r\n        return;\r\n    }\r\n    const cos = new COS({\r\n        SecretId: cosPermission.value.tmpSecretId,\r\n        SecretKey: cosPermission.value.tmpSecretKey,\r\n    });\r\n    for (let i = 0; i < files.length; i++) {\r\n        const file = files[i];\r\n        const filename = filenames[i];\r\n        const fileNameWithPath = `${cosPermission.value.url}/${filename}`; // 在文件名前加时间戳和路径\r\n        console.log(\"COS Key:\", fileNameWithPath);\r\n        await new Promise((resolve, reject) => {\r\n            cos.putObject({\r\n                Bucket: bucketInfo.address,\r\n                Region: 'ap-chengdu',\r\n                Key: fileNameWithPath,\r\n                Body: file,\r\n                onProgress: (progressData) => {\r\n                    console.log(JSON.stringify(progressData));\r\n                }\r\n            }, (err, data) => {\r\n                if (err) {\r\n                    console.error('上传失败', err);\r\n                    ElMessage.error('数据上传失败');\r\n                    reject(err);\r\n                } else {\r\n                    console.log('上传成功', data);\r\n                    resolve(data);\r\n                }\r\n            });\r\n        }).catch(err => {\r\n            // 处理上传过程中发生的错误\r\n            noticeSelectedError(type, id);\r\n            console.log(err);\r\n            return; // 遇到错误时终止循环\r\n        });\r\n    }\r\n    // 所有文件上传完成后的逻辑\r\n    noticeSelected(type, id);\r\n}\r\n\r\n\r\n//因为websocket需要给后端返回一些数据，所以单独写了一个函数\r\nasync function uploadSmallFileToWEBSOCKETCOS(file, type, bucketId) {\r\n    return new Promise((resolve, reject) => {\r\n        if (!cosPermission.value){\r\n            console.error('获取COS权限失败');\r\n            reject('获取COS权限失败');\r\n        }\r\n        const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\r\n        if (!bucketInfo) {\r\n            console.error('无效的存储桶ID');\r\n            reject('无效的存储桶ID');\r\n        }\r\n        const cos = new COS({\r\n            SecretId: cosPermission.value.tmpSecretId,\r\n            SecretKey: cosPermission.value.tmpSecretKey,\r\n        });\r\n\r\n        console.log(\"COS Key:\", cosPermission.value.url);\r\n        cos.putObject({\r\n            Bucket: bucketInfo.address,\r\n            Region: 'ap-chengdu',\r\n            Key: cosPermission.value.url,\r\n            Body: file,\r\n            onProgress: (progressData) => {\r\n                console.log(JSON.stringify(progressData));\r\n            }\r\n        }, (err, data) => {\r\n            if (err) {\r\n                console.error('上传失败', err);\r\n                ElMessage.error('数据上传失败');\r\n                if(type === 3){\r\n                    reject(0);\r\n                }\r\n                if(type === 11){\r\n                    reject(0);           \r\n                }\r\n            } else {\r\n                console.log('上传成功', data);\r\n                if(type === 3){\r\n                    resolve(1);\r\n                }\r\n                if(type === 11){\r\n                    const tempUrl = 'https://';\r\n                    const fileUrl = data.Location;  // 文件的真实地址\r\n                    const combinedUrl = tempUrl + fileUrl;\r\n                    console.log(combinedUrl);\r\n                    resolve(combinedUrl);\r\n                }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// 从COS下载文件到本地的函数(单个文件)\r\nasync function downloadFileFromCOS(bucketId) {\r\n    if (!cosPermission.value) {\r\n        console.error('获取COS权限失败');\r\n        return;\r\n    }\r\n    const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\r\n    if (!bucketInfo) {\r\n        console.error('无效的存储桶ID');\r\n        return;\r\n    }\r\n    // 获取COS权限和实例化\r\n    const cos = new COS({\r\n        SecretId: cosPermission.value.tmpSecretId,\r\n        SecretKey: cosPermission.value.tmpSecretKey,\r\n    });\r\n    // 执行下载\r\n    cos.getObjectUrl({\r\n        Bucket: bucketInfo.address,\r\n        Region: 'ap-chengdu',\r\n        Key: cosPermission.value.url,\r\n        onProgress: function (progressData) {\r\n            console.log(JSON.stringify(progressData));\r\n        }  \r\n        },function(err, data) {\r\n            if (err === null) {\r\n                console.log(data);\r\n                const url = data.Url;\r\n                console.log('下载成功');\r\n                return url;\r\n            }else{\r\n                console.log(err);\r\n                ElMessage.error('数据获取失败');\r\n            }\r\n    });\r\n}\r\n\r\n\r\n// 从COS下载文件到本地的函数(多个文件)\r\nasync function downloadFilesFromCOS(bucketId) {\r\n    if (!cosPermission.value) {\r\n        console.error('获取COS权限失败');\r\n        return;\r\n    }\r\n    const bucketInfo = cosBucket.value.find(bucket => bucket.id === bucketId);\r\n    if (!bucketInfo) {\r\n        console.error('无效的存储桶ID');\r\n        return;\r\n    }\r\n    const cos = new COS({\r\n        SecretId: cosPermission.value.tmpSecretId,\r\n        SecretKey: cosPermission.value.tmpSecretKey,\r\n    });\r\n    let fileUrls = {}; // 用于存储文件的 URL\r\n    try {\r\n        // 获取文件夹内的所有文件\r\n        const response =  cos.getBucket({\r\n            Bucket: bucketInfo.address,\r\n            Region: 'ap-chengdu',\r\n            Prefix: cosPermission.value.url, // 指定文件夹路径\r\n        });\r\n        // 遍历所有文件并获取其 URL\r\n        for (const file of response.Contents) {\r\n            const url = await new Promise((resolve, reject) => {\r\n                cos.getObjectUrl({\r\n                    Bucket: bucketInfo,\r\n                    Region: 'ap-chengdu',\r\n                    Key: file.Key,\r\n                }, function(err, data) {\r\n                    if (err) {\r\n                        reject(err);\r\n                    } else {\r\n                        resolve(data.Url);\r\n                    }\r\n                });\r\n            });\r\n            fileUrls[file.Key] = url; // 将 URL 添加到对象中\r\n        }\r\n        return fileUrls; // 返回包含所有文件 URL 的对象\r\n    } catch (err) {\r\n        console.error(err);\r\n        ElMessage.error('数据获取失败');\r\n        return null;\r\n    }\r\n}\r\n\r\n// 获取文章附件上传的COS许可证的函数\r\nexport async function getArticleCOSPermission(file, SliceSize, articleId, fileName,fileSize, requiredCoin, requiredPoint) {\r\n    try {\r\n        const response = await axios.post(`/article/attachment/upload/secret`, {\r\n            articleId:articleId,\r\n            size: fileSize,\r\n            requiredCoin:requiredCoin,\r\n            requiredPoint:requiredPoint,\r\n            filename: fileName,\r\n        });\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            await uploadFileToCOS(file,SliceSize,1,articleId,3);\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n//上传完毕通知后端(文章附件上传)\r\nasync function noticeArticleAttachment(articleId) {\r\n    const response = await axios.put(`/article/attachment/${articleId}`);\r\n    if(response.data.code === 1){\r\n        // ElMessage.success('通知成功');\r\n    }else{\r\n        ElMessage.error('通知失败');\r\n    }\r\n}\r\n\r\n\r\n// 获取认证材料上传的COS许可证的函数\r\nexport async function getCertificateCOSPermission(file,filename) {\r\n    try {\r\n        const queryParams = new URLSearchParams({\r\n            filename: filename,\r\n          }).toString();  \r\n        const response = await axios.post(`/file/upload/certificate/secret?${queryParams}`)\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            await uploadSmallFileToCOS(file,10,0,4);\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n//上传完毕通知后端(认证材料上传)\r\nasync function noticeCertificateCOS() {\r\n    const response = await axios.put(`/file/certificate`);\r\n    if(response.data.code === 1){\r\n        // ElMessage.success('通知成功');\r\n    }else{\r\n        ElMessage.error('通知失败');\r\n    }\r\n}\r\n\r\n\r\n// 获取认证材料的函数\r\nexport async function getCertificateFromCOS(type) {\r\n    try {\r\n        const response = await axios.get(`/file/download/certificate/secret`, {\r\n            params: {\r\n                type:type,\r\n            }\r\n        });\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            const urls = await downloadFilesFromCOS();\r\n            return urls;\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n// 获取首次提问图片上传的COS许可证的函数\r\nexport async function getFistQuestionCOSPermission(file,filename,questionId) {\r\n    try {\r\n        const queryParams = new URLSearchParams({\r\n            questionId: questionId,\r\n            filename:filename,\r\n          }).toString();  \r\n        const response = await axios.post(`/file/upload/question/picture/secret?${queryParams}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            await uploadSmallFileToCOS(file,2,questionId,5);\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n//上传完毕通知后端(第一次提问图片上传)\r\nasync function noticeFistQuestionCOS(questionId) {\r\n    const response = await axios.put(`/file/question/picture/${questionId}`);\r\n    if(response.data.code === 1){\r\n        // ElMessage.success('通知成功');\r\n    }else{\r\n        ElMessage.error('通知失败');\r\n    }\r\n}\r\n\r\n// 获取首次提问图片的函数\r\nexport async function getFirstQuestionPictureFromCOS(questionId) {\r\n    try {\r\n        const response = await axios.get(`/file/download/question/picture/secret/${questionId}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            // const urls = await downloadFilesFromCOS();\r\n            // return urls;\r\n            return cosPermission.value.url;\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n// 获取首次回答图片上传的COS许可证的函数\r\nexport async function getFistAnswerCOSPermission(file,filename,questionId) {\r\n    try {\r\n        const queryParams = new URLSearchParams({\r\n            filename: filename,\r\n            questionId: questionId,\r\n          }).toString();  \r\n        const response = await axios.post(`/file/answer/upload/secret?${queryParams}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            await uploadSmallFileToCOS(file,8,questionId,5);\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n//上传完毕通知后端(第一次回答图片上传)\r\nasync function noticeFistAnswerCOS(questionId) {\r\n    const response = await axios.put(`/file/answer/${questionId}`);\r\n    if(response.data.code === 1){\r\n        // ElMessage.success('通知成功');\r\n    }else{\r\n        ElMessage.error('通知失败');\r\n    }\r\n}\r\n\r\n// 获取首次回答图片的函数\r\nexport async function getFirstAnswerPictureFromCOS(questionId) {\r\n    try {\r\n        const response = await axios.get(`/file/answer/download/secret/${questionId}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            // const url = await downloadFileFromCOS();\r\n            // return url;\r\n            return cosPermission.value.url;\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n// 获取聊天时上传图片的COS许可证的函数\r\nexport async function getAskAndQuestionCOSPermission(file,dto) {\r\n    cosPermission.value.tmpSecretId = dto.tmpSecretId;\r\n    cosPermission.value.tmpSecretKey = dto.tmpSecretKey;\r\n    // cosPermission.value.url = 'text.jpg';\r\n    // console.log(dto);\r\n    cosPermission.value.url =dto.url;\r\n    const num = await uploadSmallFileToWEBSOCKETCOS(file,3,5);\r\n    return num;\r\n}\r\n\r\n//上传完毕通知后端(问答聊天图片正确上传)\r\nasync function noticeAskAndQuestion() {\r\n    return 1;\r\n  }\r\n\r\n//上传完毕通知后端(问答聊天图片错误上传)\r\nasync function noticeAskAndQuestionError() {\r\n    return 0;\r\n}\r\n\r\n\r\n// 获取收藏主图上传的COS许可证的函数\r\nexport async function getFavoritePermission(file, filename,favoriteId) {\r\n    try {\r\n        const queryParams = new URLSearchParams({\r\n            filename:filename,\r\n            favoriteId: favoriteId,\r\n          }).toString();  \r\n        const response = await axios.post(`/file/favorite/upload/secret?${queryParams}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            await uploadSmallFileToCOS(file,4,favoriteId,4);\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n//上传完毕通知后端(收藏主图上传)\r\nasync function noticefavoritePicture(favoriteId) {\r\n    const response = await axios.put(`/file/favorite/${favoriteId}`);\r\n    if(response.data.code === 1){\r\n        // ElMessage.success('通知成功');\r\n    }else{\r\n        ElMessage.error('通知失败');\r\n    }\r\n}\r\n\r\n// 获取收藏主图图片的函数\r\nexport async function getFavoritePictureFromCOS(favoriteId) {\r\n    try {\r\n        const response = await axios.get(`/file/favorite/download/secret/${favoriteId}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            // const url = await downloadFileFromCOS();\r\n            // return url;\r\n            return cosPermission.value.url;\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n// 获取专栏主图上传的COS许可证的函数\r\nexport async function getColumnPermission(file, filename,columnId) {\r\n    try {\r\n        const queryParams = new URLSearchParams({\r\n            filename:filename,\r\n            columnId: columnId,\r\n          }).toString();  \r\n        const response = await axios.post(`/file/column/upload/secret?${queryParams}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            await uploadSmallFileToCOS(file,9,columnId,4);\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n//上传完毕通知后端(专栏主图上传)\r\nasync function noticeColumnPicture(columnId) {\r\n    const response = await axios.put(`/file/column/${columnId}`);\r\n    if(response.data.code === 1){\r\n        // ElMessage.success('通知成功');\r\n    }else{\r\n        ElMessage.error('通知失败');\r\n    }\r\n}\r\n\r\n// 获取专栏主图图片的函数\r\nexport async function getColumnPictureFromCOS(columnId) {\r\n    try {\r\n        const response = await axios.get(`/file/column/download/secret/${columnId}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            // const url = await downloadFileFromCOS();\r\n            // return url;\r\n            return cosPermission.value.url;\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n// 获取用户头像上传的COS许可证的函数\r\nexport async function getUsersAvatarPermission(file, filename) {\r\n    try {\r\n        const queryParams = new URLSearchParams({\r\n            filename:filename,\r\n          }).toString();  \r\n        const response = await axios.post(`/file/users/avatar/upload/secret?${queryParams}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            await uploadSmallFileToCOS(file,5,0,4);\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n//上传完毕通知后端(用户头像上传)\r\nasync function noticeUsersAvatar() {\r\n    const response = await axios.put(`/file/users/avatar`);\r\n    if(response.data.code === 1){\r\n        // ElMessage.success('通知成功');\r\n    }else{\r\n        ElMessage.error('通知失败');\r\n    }\r\n}\r\n\r\n// 获取用户头像图片的函数\r\nexport async function getUsersAvatarFromCOS(id) {\r\n    try {\r\n        const response = await axios.get(`/file/users/avatar/download/secret/${id}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            // const url = await downloadFileFromCOS(4);\r\n            // return url;\r\n            return cosPermission.value.url;\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n// 获取文章内容图片上传的COS许可证的函数\r\nexport async function getArticleContentPermission(file, articleId,filename) {\r\n    try {\r\n        const queryParams = new URLSearchParams({\r\n            filename:filename,\r\n            articleId:articleId,\r\n          }).toString();  \r\n        const response = await axios.post(`/file/article/picture/upload/secret?${queryParams}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            const url = await uploadSmallFileToWEBSOCKETCOS(file,11,6);\r\n            if(url != 0){\r\n                return url;\r\n            }else{\r\n                ElMessage.error('文章内容图片上传失败');\r\n            }\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n// 获取文章主图上传的COS许可证的函数\r\nexport async function getArticleCoveragePermission(file, filename,articleId) {\r\n    try {\r\n        const queryParams = new URLSearchParams({\r\n            filename:filename,\r\n            articleId:articleId,\r\n          }).toString();  \r\n        const response = await axios.post(`/file/article/coverage/upload/secret?${queryParams}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            await uploadSmallFileToCOS(file,6,articleId,2);\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n//上传完毕通知后端(文章主图上传)\r\nasync function noticeArticleCoverage(articleId) {\r\n    const response = await axios.put(`/file/article/coverage/${articleId}`);\r\n    if(response.data.code === 1){\r\n        // ElMessage.success('通知成功');\r\n    }else{\r\n        ElMessage.error('通知失败');\r\n    }\r\n}\r\n\r\n// 获取文章主图图片的函数\r\nexport async function getArticleCoverageFromCOS(articleId) {\r\n    try {\r\n        const response = await axios.get(`/file/article/coverage/download/secret/${articleId}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            // const url = await downloadFileFromCOS();\r\n            // return url;\r\n            return cosPermission.value.url;\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n// 获取分享图片上传的COS许可证的函数\r\nexport async function getSharePicturePermission(files,filename,number,shareId) {\r\n    try {\r\n        const queryParams = new URLSearchParams({\r\n            number:number,\r\n            shareId:shareId,\r\n          }).toString();  \r\n        const response = await axios.post(`/file/share/picture/upload/secret?${queryParams}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            await uploadMultipleFilesToCOS(files,filename,7,shareId,7);\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n//上传完毕通知后端(分享图片上传)\r\nasync function noticeSharePicture(shareId) {\r\n    const response = await axios.put(`/file/share/picture/${shareId}`);\r\n    if(response.data.code === 1){\r\n        // ElMessage.success('通知成功');\r\n    }else{\r\n        ElMessage.error('通知失败');\r\n    }\r\n}\r\n\r\n// 获取分享图片的函数\r\nexport async function getSharePictureFromCOS(shareId) {\r\n    try {\r\n        const response = await axios.get(`/file/share/picture/secret/${shareId}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            const urls = await downloadFilesFromCOS();\r\n            return urls;\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n// 获取视频切片的函数\r\nexport async function getVideoPaperFromCOS(id) {\r\n    try {\r\n        const response = await axios.get(`/file/paper/video/download/secret/${id}`);\r\n        if (response.data.code === 1) {\r\n            cosPermission.value = response.data.data;\r\n            // const url = await downloadFileFromCOS();\r\n            // return url;\r\n            return cosPermission.value.url;\r\n        } else {\r\n            console.error(response.data.msg || '未知错误');\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('获取COS权限失败', error.message);\r\n        return null;\r\n    }\r\n}\r\n\r\n//这是一个神奇的方法\r\nexport async function HAHAHAHA(){\r\n    downloadFileFromCOS()\r\n}\r\n\r\n//根据不同的type选择对应的通知接口\r\nasync function noticeSelected(type, id) {\r\n    switch (type) {\r\n        case 1:\r\n            await noticeArticleAttachment(id);\r\n            break;\r\n        case 2:\r\n            await noticeFistQuestionCOS(id);\r\n            break;\r\n        case 3:\r\n            await noticeAskAndQuestion();\r\n            break;    \r\n        case 4:\r\n            await noticefavoritePicture(id);\r\n            break;    \r\n        case 5:\r\n            await noticeUsersAvatar();\r\n            break;    \r\n        case 6:\r\n            await noticeArticleCoverage(id);\r\n            break;    \r\n        case 7:\r\n            await noticeSharePicture(id);\r\n            break;    \r\n        case 8:\r\n            await noticeFistAnswerCOS(id);\r\n            break;    \r\n        case 9:\r\n            await noticeColumnPicture(id);\r\n            break;    \r\n        case 10:\r\n            await noticeCertificateCOS();\r\n            break;    \r\n        case 12:\r\n            break;   \r\n            \r\n        default:\r\n            // 处理未知的 type\r\n            console.log('未知的类型:', type);\r\n            break;\r\n    }\r\n}\r\n\r\n//根据不同的type选择对应的通知接口\r\nasync function noticeSelectedError(type, id) {\r\n    switch (type) {\r\n        case 3:\r\n            await noticeAskAndQuestionError();\r\n            break;\r\n\r\n        default:\r\n            // 处理未知的 type\r\n            console.log('未知的类型:', id);\r\n            break;\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}