{"ast":null,"code":"import TitleSection from \"@/page/TheSettings/components/TitleSection.vue\";\nimport { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from '@/utils/request';\nimport YyButton from \"@/page/components/YyButton.vue\";\nconst msg = '通知设置';\nconst msgbtn = '保存';\nexport default {\n  __name: 'NotiSet',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const interactionNotifications = ref([{\n      title: '新增关注',\n      switch1: false,\n      switch2: false\n    }, {\n      title: '点赞和收藏',\n      switch1: false,\n      switch2: false\n    }, {\n      title: '被@',\n      switch1: false,\n      switch2: false\n    }, {\n      title: '评论回复',\n      switch1: false,\n      switch2: false\n    }, {\n      title: '打赏',\n      switch1: false,\n      switch2: false\n    }, {\n      title: '文章购买',\n      switch1: false,\n      switch2: false\n    }]);\n    const systemNotifications = ref([{\n      title: '网站通知',\n      switch1: false,\n      switch2: false\n    }, {\n      title: '审核通知',\n      switch1: false,\n      switch2: false\n    }, {\n      title: '举报通知',\n      switch1: false,\n      switch2: false\n    }]);\n    const privateNotifications = ref([{\n      title: '聊天消息',\n      switch1: false,\n      switch2: false\n    }]);\n    const recommendedContent = ref([{\n      title: '文章推送',\n      switch1: false,\n      switch2: false\n    }, {\n      title: '其他消息',\n      switch1: false,\n      switch2: false\n    }]);\n    const userData = ref();\n    const userId = ref();\n\n    //这个函数的作用不用深究，是因为这里从后端拿到的数据有一些别致，需要处理一下\n    function getLastTwoBits(num) {\n      return num.toString(2).slice(-2);\n    }\n\n    //这里使用映射和循环来简化整个赋值过程。下列是数据模型：\n    const userPreferenceMap = {\n      beSubscribe: interactionNotifications.value[0],\n      beLike: interactionNotifications.value[1],\n      beAt: interactionNotifications.value[2],\n      beComment: interactionNotifications.value[3],\n      beGift: interactionNotifications.value[4],\n      articlePurchase: interactionNotifications.value[5],\n      webNotice: systemNotifications.value[0],\n      auditNotice: systemNotifications.value[1],\n      reportNotice: systemNotifications.value[2],\n      chatMessage: privateNotifications.value[0],\n      articlePush: recommendedContent.value[0],\n      other: recommendedContent.value[1]\n    };\n\n    //这里的数据格式是修改接口中传入的数据类型，只是个架子所以是空值\n    const userPreferenceData = {\n      beSubscribe: '',\n      beLike: '',\n      beAt: '',\n      beComment: '',\n      beGift: '',\n      articlePurchase: '',\n      webNotice: '',\n      auditNotice: '',\n      reportNotice: '',\n      chatMessage: '',\n      articlePush: '',\n      other: ''\n    };\n\n    //这里是赋值的具体实现过程，其实数据模型中已经将接口中取得的数据与页面中呈现的数据进行了易懂的绑定，所以赋值过程理解起来不难\n    function getNotificationPreferences(data) {\n      Object.keys(userPreferenceMap).forEach(key => {\n        if (data[key] !== undefined) {\n          userPreferenceMap[key].switch1 = juagePreference(0, data[key]);\n          userPreferenceMap[key].switch2 = juagePreference(1, data[key]);\n        }\n      });\n    }\n    //这里其实可以稍微简化一下，但是阅读性会大大降低，不利于后续维护，所以我用了最原始的判断\n    const juagePreference = (type, str) => {\n      if (str === '11') return true;\n      if (str === '10' && type === 0) return true;\n      if (str === '10' && type === 1) return false;\n      if (str === '1' && type === 0) return false;\n      if (str === '1' && type === 1) return true;\n    };\n    //获取用户信息列表\n    async function getUserPreference() {\n      try {\n        const response = await axios.get(`/notice/preference/${userId.value}`);\n        if (response.data.code === 1) {\n          userData.value = response.data.data;\n          // 遍历 userData.value 中的每个属性，并处理它们，这里其实不需要把userId进行转化，但考虑到我们并不需要userData里的userId(因为从localStorage中取过了)，为了不影响代码一致性就把这里的userId也一并转化了\n          Object.keys(userData.value).forEach(key => {\n            userData.value[key] = getLastTwoBits(userData.value[key]);\n          });\n          getNotificationPreferences(userData.value);\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取用户数据失败\");\n          ElMessage.error('获取用户数据失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户数据失败\", error);\n        ElMessage.error('获取用户数据失败');\n      }\n    }\n\n    //这里是遍历之前的map，取每一个对象的switch值放入新构建的判断函数中，其实就是一个遍历\n    function setNotificationPreferences(data) {\n      Object.keys(userPreferenceMap).forEach(key => {\n        const beSubscribeSwitch1 = userPreferenceMap[key].switch1;\n        const beSubscribeSwitch2 = userPreferenceMap[key].switch2;\n        data[key] = setPreference(beSubscribeSwitch1, beSubscribeSwitch2);\n      });\n    }\n\n    //一个判断函数，这里的3其实是11,2是10,1是01 （当然，是二进制）\n    const setPreference = (switch1, switch2) => {\n      if (switch1 === true && switch2 === true) return 3;\n      if (switch1 === true && switch2 === false) return 2;\n      if (switch1 === false && switch2 === true) return 1;else return 0;\n    };\n\n    //修改用户信息\n    async function putUserPreference() {\n      setNotificationPreferences(userPreferenceData);\n      try {\n        const response = await axios.put('/notice/preference', userPreferenceData);\n        if (response.data.code === 1) {\n          console.log(response.data.msg);\n          ElMessage.success(\"修改个人信息成功\");\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"修改个人信息失败\");\n          ElMessage.error(\"修改个人信息失败\");\n        }\n      } catch (error) {\n        console.error(\"修改个人信息失败\", error);\n        ElMessage.error(\"修改个人信息失败\");\n      }\n    }\n    onMounted(() => {\n      userId.value = localStorage.getItem(\"userId\"); // 获取用户ID\n      getUserPreference();\n    });\n    const __returned__ = {\n      msg,\n      msgbtn,\n      interactionNotifications,\n      systemNotifications,\n      privateNotifications,\n      recommendedContent,\n      userData,\n      userId,\n      getLastTwoBits,\n      userPreferenceMap,\n      userPreferenceData,\n      getNotificationPreferences,\n      juagePreference,\n      getUserPreference,\n      setNotificationPreferences,\n      setPreference,\n      putUserPreference,\n      TitleSection,\n      ref,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      },\n      YyButton\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["TitleSection","ref","onMounted","ElMessage","axios","YyButton","msg","msgbtn","interactionNotifications","title","switch1","switch2","systemNotifications","privateNotifications","recommendedContent","userData","userId","getLastTwoBits","num","toString","slice","userPreferenceMap","beSubscribe","value","beLike","beAt","beComment","beGift","articlePurchase","webNotice","auditNotice","reportNotice","chatMessage","articlePush","other","userPreferenceData","getNotificationPreferences","data","Object","keys","forEach","key","undefined","juagePreference","type","str","getUserPreference","response","get","code","error","console","setNotificationPreferences","beSubscribeSwitch1","beSubscribeSwitch2","setPreference","putUserPreference","put","log","success","localStorage","getItem"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/TheSettings/components/NotiSet.vue"],"sourcesContent":["<template>\r\n  <div class=\"T_M\" style=\"display: flex;flex-direction: column;\">\r\n    <TitleSection :message=msg :show-btn=false />\r\n    <div class=\"page2\">\r\n      <div class=\"text-line\">\r\n        <div class=\"text-top\" >互动通知</div>\r\n        <span class=\"row1\">消息</span>\r\n        <span >邮件</span>\r\n      </div>\r\n\r\n      <div class=\"item_box\">\r\n        <div v-for=\"(notification,index) in interactionNotifications\" :key=\"index\" class=\"item-container\">\r\n          <div class=\"item-title\">{{ notification.title }}</div>\r\n          <img src=\"@/assets/CircleQuestionmark.svg\">\r\n          <el-switch v-model=\"notification.switch1\" inline-prompt active-text=\"on\" inactive-text=\"off\" class=\"item-switch\"/>\r\n          <el-switch v-model=\"notification.switch2\" inline-prompt active-text=\"on\" inactive-text=\"off\" class=\"item-switch\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"text-line\"><span class=\"text-top\">系统通知</span></div>\r\n      <div class=\"item_box\">\r\n        <div v-for=\"(notification,index) in systemNotifications\" :key=\"index\" class=\"item-container\">\r\n          <div class=\"item-title\">{{ notification.title }}</div>\r\n          <img src=\"@/assets/CircleQuestionmark.svg\">\r\n          <el-switch v-model=\"notification.switch1\" inline-prompt active-text=\"on\" inactive-text=\"off\" class=\"item-switch\"/>\r\n          <el-switch v-model=\"notification.switch2\" inline-prompt active-text=\"on\" inactive-text=\"off\" class=\"item-switch\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"text-line\"><span class=\"text-top\">私信通知</span></div>\r\n      <div class=\"item_box\">\r\n        <div v-for=\"(notification,index) in privateNotifications\" :key=\"index\" class=\"item-container\">\r\n          <div class=\"item-title\">{{ notification.title }}</div>\r\n          <img src=\"@/assets/CircleQuestionmark.svg\">\r\n          <el-switch v-model=\"notification.switch1\" inline-prompt active-text=\"on\" inactive-text=\"off\" class=\"item-switch\"/>\r\n          <el-switch v-model=\"notification.switch2\" inline-prompt active-text=\"on\" inactive-text=\"off\" class=\"item-switch\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"text-line\"><span class=\"text-top\">推荐内容</span></div>\r\n      <div class=\"item_box\">\r\n        <div v-for=\"(notification,index) in recommendedContent\" :key=\"index\" class=\"item-container\">\r\n          <div class=\"item-title\">{{ notification.title }}</div>\r\n          <img src=\"@/assets/CircleQuestionmark.svg\">\r\n          <el-switch v-model=\"notification.switch1\" inline-prompt active-text=\"on\" inactive-text=\"off\" class=\"item-switch\"/>\r\n          <el-switch v-model=\"notification.switch2\" inline-prompt active-text=\"on\" inactive-text=\"off\" class=\"item-switch\"/>\r\n        </div>\r\n      </div>\r\n      <div style=\"display:flex;margin: 2rem 0 1rem;\">\r\n        <YyButton theme=\"purple\" @click=\"putUserPreference\">保存</YyButton>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport TitleSection from \"@/page/TheSettings/components/TitleSection.vue\";\r\nimport {ref,onMounted} from 'vue'\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from '@/utils/request';\r\nimport YyButton from \"@/page/components/YyButton.vue\";\r\n\r\n\r\nconst msg = '通知设置'\r\nconst msgbtn = '保存'\r\nconst interactionNotifications = ref([\r\n  {title: '新增关注', switch1: false, switch2: false},\r\n  {title: '点赞和收藏', switch1: false, switch2: false},\r\n  {title: '被@', switch1: false, switch2: false},\r\n  {title: '评论回复', switch1: false, switch2: false},\r\n  {title: '打赏', switch1: false, switch2: false},\r\n  {title: '文章购买', switch1: false, switch2: false}\r\n]);\r\n\r\nconst systemNotifications = ref([\r\n  { title: '网站通知', switch1: false, switch2: false },\r\n  { title: '审核通知', switch1: false, switch2: false },\r\n  { title: '举报通知', switch1: false, switch2: false }\r\n]);\r\n\r\nconst privateNotifications = ref([\r\n  { title: '聊天消息', switch1: false, switch2: false }\r\n]);\r\n\r\nconst recommendedContent = ref([\r\n  { title: '文章推送', switch1: false, switch2: false },\r\n  { title: '其他消息', switch1: false, switch2: false }\r\n]);\r\n\r\nconst userData = ref();\r\nconst userId = ref()\r\n\r\n//这个函数的作用不用深究，是因为这里从后端拿到的数据有一些别致，需要处理一下\r\nfunction getLastTwoBits(num) {\r\n  return num.toString(2).slice(-2);\r\n}\r\n\r\n//这里使用映射和循环来简化整个赋值过程。下列是数据模型：\r\nconst userPreferenceMap = {\r\n  beSubscribe: interactionNotifications.value[0],\r\n  beLike: interactionNotifications.value[1],\r\n  beAt:interactionNotifications.value[2],\r\n  beComment:interactionNotifications.value[3],\r\n  beGift:interactionNotifications.value[4],\r\n  articlePurchase:interactionNotifications.value[5],\r\n  webNotice:systemNotifications.value[0],\r\n  auditNotice:systemNotifications.value[1],\r\n  reportNotice:systemNotifications.value[2],\r\n  chatMessage:privateNotifications.value[0],\r\n  articlePush:recommendedContent.value[0],\r\n  other:recommendedContent.value[1],\r\n};\r\n\r\n//这里的数据格式是修改接口中传入的数据类型，只是个架子所以是空值\r\nconst userPreferenceData = {\r\n  beSubscribe:'',\r\n  beLike: '',\r\n  beAt:'',\r\n  beComment:'',\r\n  beGift:'',\r\n  articlePurchase:'',\r\n  webNotice:'',\r\n  auditNotice:'',\r\n  reportNotice:'',\r\n  chatMessage:'',\r\n  articlePush:'',\r\n  other:'',\r\n}\r\n\r\n//这里是赋值的具体实现过程，其实数据模型中已经将接口中取得的数据与页面中呈现的数据进行了易懂的绑定，所以赋值过程理解起来不难\r\nfunction getNotificationPreferences(data) {\r\n  Object.keys(userPreferenceMap).forEach(key => {\r\n    if (data[key] !== undefined) {\r\n      userPreferenceMap[key].switch1 = juagePreference(0, data[key]);\r\n      userPreferenceMap[key].switch2 = juagePreference(1, data[key]);\r\n    }\r\n  });\r\n}\r\n//这里其实可以稍微简化一下，但是阅读性会大大降低，不利于后续维护，所以我用了最原始的判断\r\nconst juagePreference = (type, str) => {\r\n  if (str === '11') return true;\r\n  if (str === '10' && type === 0) return true;\r\n  if (str === '10' && type === 1) return false;\r\n  if (str === '1' && type === 0) return false;\r\n  if (str === '1' && type === 1) return true;\r\n}\r\n//获取用户信息列表\r\nasync function getUserPreference() {\r\n  try{\r\n    const response = await axios.get(`/notice/preference/${userId.value}`);\r\n    if(response.data.code === 1){\r\n      userData.value = response.data.data;\r\n    // 遍历 userData.value 中的每个属性，并处理它们，这里其实不需要把userId进行转化，但考虑到我们并不需要userData里的userId(因为从localStorage中取过了)，为了不影响代码一致性就把这里的userId也一并转化了\r\n    Object.keys(userData.value).forEach(key => {\r\n      userData.value[key] = getLastTwoBits(userData.value[key]);\r\n    });\r\n    getNotificationPreferences(userData.value);\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户数据失败\");\r\n        ElMessage.error('获取用户数据失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户数据失败\", error); \r\n    ElMessage.error('获取用户数据失败');\r\n  }\r\n}\r\n\r\n//这里是遍历之前的map，取每一个对象的switch值放入新构建的判断函数中，其实就是一个遍历\r\nfunction setNotificationPreferences(data) {\r\n  Object.keys(userPreferenceMap).forEach(key => {\r\n    const beSubscribeSwitch1 =  userPreferenceMap[key].switch1;\r\n    const beSubscribeSwitch2 = userPreferenceMap[key].switch2;\r\n    data[key] = setPreference(beSubscribeSwitch1,beSubscribeSwitch2);\r\n  });\r\n}\r\n\r\n//一个判断函数，这里的3其实是11,2是10,1是01 （当然，是二进制）\r\nconst setPreference = (switch1, switch2) => {\r\n  if (switch1 === true && switch2 === true) return 3;\r\n  if (switch1 === true && switch2 === false) return 2;\r\n  if (switch1 === false && switch2 === true) return 1;\r\n  else return 0;\r\n}\r\n\r\n//修改用户信息\r\nasync function putUserPreference() {\r\n  setNotificationPreferences(userPreferenceData);\r\n  try {\r\n    const response = await axios.put('/notice/preference',userPreferenceData);\r\n    if(response.data.code === 1){\r\n        console.log(response.data.msg); \r\n        ElMessage.success(\"修改个人信息成功\");\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"修改个人信息失败\");\r\n        ElMessage.error(\"修改个人信息失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"修改个人信息失败\", error); \r\n    ElMessage.error(\"修改个人信息失败\");\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nonMounted(() => {\r\n  userId.value = localStorage.getItem(\"userId\"); // 获取用户ID\r\n  getUserPreference();\r\n})\r\n\r\n</script>\r\n<style scoped>\r\n.page2 {\r\n  padding-bottom: 30px;\r\n  overflow: auto;\r\n}\r\n.item_box{\r\n  padding: 0px 30px;\r\n}\r\n.item-container{\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0.5rem 0;\r\n  position: relative;\r\n}\r\n\r\n.item-title{\r\n  padding-left: 3rem;\r\n  flex: 75%;\r\n}\r\n\r\n.item-switch{\r\n  flex: 35%;\r\n}\r\n\r\nimg{\r\n  position: absolute;\r\n  left: 180px;\r\n  width: 15px;\r\n  height: 15px;\r\n}\r\n\r\nimg:hover{\r\n  cursor: pointer;\r\n}\r\n\r\n.text-line {\r\n  padding: 10px 78px;\r\n  background-color: #F4F4F4;\r\n  display: flex;\r\n  align-items: center;\r\n  box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.25);\r\n}\r\n.text-top{\r\n  margin-right: 47%;\r\n}\r\n.text-box {\r\n  display: flex;\r\n  background-color: #F4F4F4;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 0.7rem 5rem;\r\n  box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.row1 {\r\n  margin-right: 22%;\r\n}\r\n/* 调整滚动条宽度和颜色 */\r\n::-webkit-scrollbar {\r\n    width: 6px; /* 增加纵向滚动条的宽度 */\r\n    height: 8px; /* 增加横向滚动条的高度 */\r\n    background: transparent;\r\n}\r\n\r\n/* 定义滚动条轨道，设置为透明 */\r\n::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 8px rgba(0, 0, 0, 0); /* 内阴影 */\r\n    background: transparent; /* 将轨道背景设置为透明 */\r\n}\r\n\r\n/* 定义滑块，设置为浅灰色并增加内阴影 */\r\n::-webkit-scrollbar-thumb {\r\n    box-shadow: inset 0 0 8px rgba(115, 115, 115, 0.3); /* 添加淡灰色内阴影 */\r\n    background-color: #dbdbdb; /* 滑块的颜色改为浅灰色 */\r\n    border-radius: 10px; /* 保持圆角不变 */\r\n}\r\n/* 当鼠标悬停在滚动条滑块上时改变滑块的颜色 */\r\n::-webkit-scrollbar-thumb:hover {\r\n    background: #c6c6c6;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}