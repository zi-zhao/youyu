{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from '../../../utils/request';\nimport { getColumnPictureFromCOS } from '@/utils/cosService';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'ColumnListS',\n  emits: ['dataFromChild'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\n    const currentPage = ref(1);\n    const emits = __emit;\n    const setActive = item => {\n      const name = '分享专栏';\n      const id = item.id;\n      emits('dataFromChild', name, id);\n    };\n    const shareColumnData = ref([]);\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getColumnShareList(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n    async function getColumnShareList(currentPage) {\n      try {\n        const response = await axios.get('/column', {\n          params: {\n            type: 1,\n            page: currentPage,\n            pageSize: 10,\n            userId: Number(userId)\n          }\n        });\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\n          const updates = response.data.data.records.map(async column => {\n            return getColumnPictureFromCOS(column.id).then(coverPicture => {\n              return {\n                ...column,\n                coverPicture\n              };\n            });\n          });\n          const updatedColumns = await Promise.all(updates);\n          shareColumnData.value = [...shareColumnData.value, ...updatedColumns];\n        } else if (response.data.code === 1 && response.data.data.records.length === 0) {\n          // ElMessage.info('已加载所有数据');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取分享专栏数据失败\");\n          ElMessage.error(\"获取分享专栏数据失败\");\n        }\n      } catch (error) {\n        console.error('获取分享专栏数据失败', error);\n        ElMessage.error(\"获取分享专栏数据失败\");\n      }\n    }\n    onMounted(() => {\n      getColumnShareList(currentPage.value);\n    });\n    const __returned__ = {\n      userId,\n      currentPage,\n      emits,\n      setActive,\n      shareColumnData,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getColumnShareList,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get getColumnPictureFromCOS() {\n        return getColumnPictureFromCOS;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","getColumnPictureFromCOS","ElMessage","userId","localStorage","getItem","currentPage","emits","__emit","setActive","item","name","id","shareColumnData","isLoading","load","value","getColumnShareList","error","console","response","get","params","type","page","pageSize","Number","data","code","records","length","updates","map","column","then","coverPicture","updatedColumns","Promise","all","msg","toString"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/Personalpage/shareColumn/ColumnListS.vue"],"sourcesContent":["<template>\r\n    <div class=\"cbutton\">\r\n        <span class=\"tatitle\">我的分享专栏</span>\r\n    </div>\r\n    <div class=\"hh\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n        <div class=\"show\" v-for=\"item in shareColumnData\" :key=\"item.id\" >\r\n            <div style=\"display: flex;flex-direction: column;justify-content: space-between;height: 100%;\">\r\n                <span class=\"title\">{{ item.name }}</span>\r\n                <span class=\"content multi-line-ellipsis-2 \">{{ item.profile }}</span>\r\n                <div class=\"more\">\r\n                    <span class=\"time\">创建时间{{ item.createTime }}</span>\r\n                    <span class=\"time\">分享数量 {{ item.number }}</span>\r\n                    <span class=\"time\">获赞数 {{ item.likeCount }}</span>\r\n                    <span class=\"text\" @click=\"setActive(item)\">进入专栏夹</span>\r\n                </div>\r\n            </div>\r\n            <img :src=\"item.coverPicture\" alt=\"\" class=\"carepic\">       \r\n        </div>\r\n        <el-empty \r\n            v-if=\"shareColumnData.length === 0 || !shareColumnData\" \r\n            :image-size=\"200\" \r\n            description=\"您还没有分享专栏呢，快去创作吧！\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { ref, onMounted,defineEmits } from 'vue';\r\n    import axios from '../../../utils/request';\r\n    import { getColumnPictureFromCOS } from '@/utils/cosService';\r\n    import { ElMessage } from 'element-plus';\r\n\r\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\n    const currentPage = ref(1);\r\n    const emits = defineEmits(['dataFromChild']);\r\n    const setActive = (item) => {\r\n        const name = '分享专栏';\r\n        const id = item.id;\r\n        emits('dataFromChild', name,id);\r\n    }\r\n    const shareColumnData = ref([]);\r\n\r\n    // 添加一个锁状态\r\n    let isLoading = false;\r\n    async function load() {\r\n        if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n        isLoading = true; // 开始加载数据，设置锁状态为true\r\n        try {\r\n            if(currentPage.value === 1){\r\n                currentPage.value++;\r\n            }\r\n            await getColumnShareList(currentPage.value);\r\n            currentPage.value++; // 只有在请求成功完成后才递增页码\r\n        } catch (error) {\r\n            console.error(error);\r\n            ElMessage.error('滚动时的未知错误');\r\n        } finally {\r\n            isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n        }\r\n    }\r\n\r\n    async function getColumnShareList(currentPage) {\r\n        try {\r\n            const response = await axios.get('/column',{\r\n                params: {\r\n                    type:1,\r\n                    page:currentPage,\r\n                    pageSize:10,\r\n                    userId:Number(userId),\r\n                }\r\n            });\r\n            if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n                const updates = response.data.data.records.map(async(column) => {\r\n                    return getColumnPictureFromCOS(column.id).then(coverPicture => {\r\n                    return { ...column, coverPicture };\r\n                    });\r\n                });\r\n                const updatedColumns = await Promise.all(updates);\r\n                shareColumnData.value = [...shareColumnData.value, ...updatedColumns];\r\n            }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n                // ElMessage.info('已加载所有数据');\r\n            }else if(response.data.code === 0 && response.data.msg){\r\n                ElMessage.error(response.data.msg.toString());\r\n            }else{\r\n                console.error(\"获取分享专栏数据失败\");\r\n                ElMessage.error(\"获取分享专栏数据失败\");\r\n            }\r\n        } catch (error) {\r\n            console.error('获取分享专栏数据失败', error);\r\n            ElMessage.error(\"获取分享专栏数据失败\");\r\n        }\r\n    }\r\n\r\n    onMounted(() => {\r\n        getColumnShareList(currentPage.value)\r\n    });\r\n\r\n</script>\r\n    \r\n<style scoped>\r\n.hh{\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 81vh;\r\n    width: 100%;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n}\r\n.cbutton{\r\n    border-bottom: 1px solid rgb(212, 212, 212);\r\n    padding: 9px 1%;\r\n    width: 98%;\r\n}\r\n.tatitle{\r\n    color: #000; \r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 23px;\r\n    line-height: 1.6; \r\n}\r\n.show{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 30px 30px;\r\n    gap: 16px;\r\n    border-radius: 4px;\r\n    background-color: #fffffc;\r\n    border-bottom: 1px solid rgb(240 240 240);\r\n}\r\n.title{\r\n    color: #000;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    line-height: 120%; \r\n}\r\n.content{\r\n    width: 600px;\r\n    margin: 15px 0px;\r\n    color: #646464;\r\n    line-height: 1.6;\r\n}\r\n.more{\r\n    display: flex;\r\n    gap: 40px;\r\n    margin-top: 15px;\r\n}\r\n.time{\r\n    color: #76849f;;\r\n    font-size: 14px;\r\n    line-height: 120%;\r\n}\r\n.text{\r\n    color: #2B6AE8;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    line-height: 120%; \r\n    cursor: pointer;\r\n}\r\n.carepic{\r\n    width: 170px;\r\n    height: 110px;\r\n    border-radius: 8px;\r\n}\r\n/* 调整滚动条宽度和颜色 */\r\n::-webkit-scrollbar {\r\n    width: 6px; /* 增加纵向滚动条的宽度 */\r\n    height: 8px; /* 增加横向滚动条的高度 */\r\n    background: transparent;\r\n}\r\n\r\n/* 定义滚动条轨道，设置为透明 */\r\n::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 8px rgba(0, 0, 0, 0); /* 内阴影 */\r\n    background: transparent; /* 将轨道背景设置为透明 */\r\n}\r\n\r\n/* 定义滑块，设置为浅灰色并增加内阴影 */\r\n::-webkit-scrollbar-thumb {\r\n    box-shadow: inset 0 0 8px rgba(145, 145, 145, 0.3); /* 添加淡灰色内阴影 */\r\n    background-color: #e2e2e2; /* 滑块的颜色改为浅灰色 */\r\n    border-radius: 10px; /* 保持圆角不变 */\r\n}\r\n/* 当鼠标悬停在滚动条滑块上时改变滑块的颜色 */\r\n::-webkit-scrollbar-thumb:hover {\r\n    background: #c8c8c8;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}