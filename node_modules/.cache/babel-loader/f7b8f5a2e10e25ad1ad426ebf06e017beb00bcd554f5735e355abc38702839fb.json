{"ast":null,"code":"import { ref, watchEffect } from 'vue';\nimport QRCode from 'qrcode';\nconst MASK_PATTERNS = [0, 1, 2, 3, 4, 5, 6, 7];\nconst MAX_QR_VERSION = 40;\nconst TYPES = ['image/png', 'image/jpeg', 'image/webp'];\nconst LEVELS = ['low', 'medium', 'quartile', 'high', 'L', 'M', 'Q', 'H'];\nexport default {\n  props: {\n    toSJISFunc: Function,\n    margin: Number,\n    scale: Number,\n    width: Number,\n    height: Number,\n    version: {\n      type: Number,\n      validator: version => version === parseInt(String(version), 10) && version > 1 && version <= MAX_QR_VERSION\n    },\n    errorCorrectionLevel: {\n      type: String,\n      validator: level => LEVELS.includes(level)\n    },\n    maskPattern: {\n      type: Number,\n      validator: maskPattern => MASK_PATTERNS.includes(maskPattern)\n    },\n    quality: {\n      type: Number,\n      validator: quality => quality === parseFloat(String(quality)) && quality >= 0 && quality <= 1\n    },\n    type: {\n      type: String,\n      validator: type => TYPES.includes(type)\n    },\n    color: {\n      type: Object,\n      default: () => ({\n        dark: '#000000',\n        light: '#FFFFFF'\n      }),\n      validator(color) {\n        return ['dark', 'light'].every(c => ['string', 'undefined'].includes(typeof color[c]));\n      }\n    },\n    value: {\n      type: String,\n      required: true,\n      validator(value) {\n        if (typeof value === 'string') {\n          return true;\n        }\n      }\n    }\n  },\n  setup(props) {\n    const dataUrl = ref('');\n    watchEffect(() => {\n      const options = Object.assign(props, props.quality == null || {\n        renderOptions: {\n          quality: props.quality\n        }\n      });\n      QRCode.toDataURL(props.value, options).then(newUrl => {\n        dataUrl.value = newUrl;\n      }).catch(error => {\n        console.log('error', error);\n      });\n    });\n    return {\n      dataUrl\n    };\n  }\n};","map":{"version":3,"names":["ref","watchEffect","QRCode","MASK_PATTERNS","MAX_QR_VERSION","TYPES","LEVELS","props","toSJISFunc","Function","margin","Number","scale","width","height","version","type","validator","parseInt","String","errorCorrectionLevel","level","includes","maskPattern","quality","parseFloat","color","Object","default","dark","light","every","c","value","required","setup","dataUrl","options","assign","renderOptions","toDataURL","then","newUrl","catch","error","console","log"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\node_modules\\vue3-qrcode\\lib\\qrCode.vue"],"sourcesContent":["<template>\n    <img v-if=\"dataUrl\" :src=\"dataUrl\">\n</template>\n<script>\nimport { ref, watchEffect } from 'vue'\nimport QRCode from 'qrcode'\n\nconst MASK_PATTERNS = [0, 1, 2, 3, 4, 5, 6, 7]\nconst MAX_QR_VERSION = 40\nconst TYPES = ['image/png', 'image/jpeg', 'image/webp']\nconst LEVELS = [\n    'low',\n    'medium',\n    'quartile',\n    'high',\n    'L',\n    'M',\n    'Q',\n    'H',\n];\n\nexport default {\n    props: {\n        toSJISFunc: Function,\n        margin: Number,\n        scale: Number,\n        width: Number,\n        height: Number,\n        version: {\n            type: Number,\n            validator: (version) => version === parseInt(String(version), 10) &&\n                version > 1 &&\n                version <= MAX_QR_VERSION,\n        },\n        errorCorrectionLevel: {\n            type: String,\n            validator: (level) => LEVELS.includes(level),\n        },\n        maskPattern: {\n            type: Number,\n            validator: (maskPattern) => MASK_PATTERNS.includes(maskPattern),\n        },\n        quality: {\n            type: Number,\n            validator: (quality) => quality === parseFloat(String(quality)) && quality >= 0 && quality <= 1,\n        },\n        type: {\n            type: String,\n            validator: (type) => TYPES.includes(type),\n        },\n        color: {\n            type: Object,\n            default: () => ({ \n                dark: '#000000',\n                light: '#FFFFFF' \n            }),\n            validator(color){\n                return ['dark', 'light'].every(c => ['string', 'undefined'].includes(typeof color[c]))\n            }\n        },\n        value: {\n            type: String,\n            required: true,\n            validator(value) {\n                if (typeof value === 'string') {\n                    return true\n                }\n            }\n        }\n    },\n    setup(props) {\n        const dataUrl = ref('');\n        watchEffect(() => {\n            const options = Object.assign(\n                    props, \n                    props.quality == null || { \n                        renderOptions: { \n                            quality: props.quality \n                        }\n                    }\n                )\n                QRCode.toDataURL(\n                    props.value,\n                    options\n                ).then((newUrl) => {\n                    dataUrl.value = newUrl\n                }).catch((error) => {\n                    console.log('error', error)\n                })\n        })\n        return {\n            dataUrl\n        }\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}