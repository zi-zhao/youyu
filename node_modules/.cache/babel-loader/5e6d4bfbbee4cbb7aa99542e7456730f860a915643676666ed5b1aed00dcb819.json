{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, withCtx as _withCtx, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock, vShow as _vShow, resolveDirective as _resolveDirective, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/LikeBefore.svg';\nimport _imports_1 from '@/assets/Comment.svg';\nimport _imports_2 from '@/assets/FavoriteBefore.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-1d0a7a0e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"search\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"width\": \"300px\",\n    \"height\": \"35px\",\n    \"border\": \"1px solid #ccc\",\n    \"border-radius\": \"4px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"content-container\",\n  \"infinite-scroll-distance\": \"100\",\n  \"infinite-scroll-immediate\": \"false\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"title\"\n};\nconst _hoisted_6 = {\n  class: \"head\"\n};\nconst _hoisted_7 = {\n  class: \"tags\",\n  style: {\n    \"display\": \"flex\",\n    \"gap\": \"8px\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"foot\"\n};\nconst _hoisted_9 = {\n  class: \"icon\"\n};\nconst _hoisted_10 = {\n  class: \"icon-box\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"icon-text\"\n};\nconst _hoisted_13 = {\n  class: \"icon-box\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_15 = {\n  class: \"icon-text\"\n};\nconst _hoisted_16 = {\n  class: \"icon-box\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_18 = {\n  class: \"icon-text\"\n};\nconst _hoisted_19 = {\n  class: \"time\"\n};\nconst _hoisted_20 = {\n  class: \"detailed-time\"\n};\nconst _hoisted_21 = {\n  class: \"btn\"\n};\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_Search = _resolveComponent(\"Search\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_MoreFilled = _resolveComponent(\"MoreFilled\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _directive_infinite_scroll = _resolveDirective(\"infinite-scroll\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createVNode(_component_el_tabs, {\n    modelValue: $setup.filter,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filter = $event),\n    onTabChange: $setup.handleTapageClick\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"全部\",\n      name: \"all\"\n    }), _createVNode(_component_el_tab_pane, {\n      label: \"仅我可见\",\n      name: \"mesee\"\n    }), _createCommentVNode(\" <el-tab-pane label=\\\"审核中\\\"></el-tab-pane>\\r\\n                    <el-tab-pane label=\\\"草稿箱\\\"></el-tab-pane> \"), _createVNode(_component_el_tab_pane, {\n      label: \"回收站\",\n      name: \"recycleBin\"\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" <el-select v-model=\\\"selectedColumnCategory\\\" placeholder=\\\"专栏分类\\\" @change=\\\"handleColumnCategoryChange\\\">\\r\\n                    <el-option-group>\\r\\n                        <el-option :value=\\\"option.name\\\" v-for=\\\"option in columnGroup\\\" :key=\\\"option.id\\\"></el-option>\\r\\n                    </el-option-group>\\r\\n                </el-select>  \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    style: {\n      \"flex\": \"1\",\n      \"padding\": \"6px 10px\",\n      \"border\": \"none\",\n      \"outline\": \"none\",\n      \"font-size\": \"14px\"\n    },\n    placeholder: \"请输入关键字\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.keyword = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.keyword]]), _createElementVNode(\"div\", {\n    style: {\n      \"padding\": \"0 10px\"\n    },\n    class: \"search-box\",\n    onClick: $setup.handleSearch\n  }, [_createVNode(_component_el_icon, null, {\n    default: _withCtx(() => [_createVNode(_component_Search)]),\n    _: 1 /* STABLE */\n  })])])]), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" 分享管理内容 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.shareGroup, shareItem => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"content-box\",\n      key: shareItem.id\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(shareItem.newCoverPicture.slice(0, 1), (image, imgIndex) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: imgIndex\n      }, [_createElementVNode(\"img\", {\n        src: image,\n        alt: \"Share Image\",\n        class: \"image\"\n      }, null, 8 /* PROPS */, _hoisted_4)]);\n    }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, _toDisplayString(shareItem.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(shareItem.tags, tag => {\n      return _openBlock(), _createBlock(_component_el_tag, {\n        key: tag,\n        size: \"mini\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(tag), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"span\", _hoisted_12, _toDisplayString(shareItem.likeCount), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createElementVNode(\"span\", _hoisted_15, _toDisplayString(shareItem.commentCount), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _createElementVNode(\"span\", _hoisted_18, _toDisplayString(shareItem.favoriteCount), 1 /* TEXT */)])])])]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, _toDisplayString(shareItem.time), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_21, [_createCommentVNode(\" <el-button>\\r\\n                                <el-icon><Tickets /></el-icon>数据\\r\\n                            </el-button> \"), _createVNode(_component_el_button, {\n      onClick: $event => $setup.openShareDialog(shareItem.id)\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 查看 \")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n      onClick: $event => shareItem.showDeletebtn = true\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_MoreFilled)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _withDirectives(_createElementVNode(\"div\", {\n      onClick: $event => $setup.deleteShare(shareItem),\n      onMouseleave: _cache[2] || (_cache[2] = $event => _ctx.showDeletebtn = false),\n      class: \"delete-btn\"\n    }, \"删除\", 40 /* PROPS, NEED_HYDRATION */, _hoisted_22), [[_vShow, shareItem.showDeletebtn]])])])]);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.shareGroup.length === 0 || !$setup.shareGroup ? (_openBlock(), _createBlock(_component_el_empty, {\n    key: 0,\n    \"image-size\": 200,\n    description: \"您还没有分享呢，快去创作吧！\"\n  })) : _createCommentVNode(\"v-if\", true)])), [[_directive_infinite_scroll, $setup.load]])]), $setup.dialogShowVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createVNode($setup[\"ShareDialog\"], {\n    modelValue: $setup.dialogShowVisible,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.dialogShowVisible = $event),\n    Id: $setup.shareId\n  }, null, 8 /* PROPS */, [\"modelValue\", \"Id\"])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","style","_createElementVNode","src","alt","_createElementBlock","_createVNode","_component_el_tabs","$setup","filter","$event","onTabChange","handleTapageClick","_component_el_tab_pane","label","name","_createCommentVNode","_hoisted_1","_hoisted_2","type","placeholder","keyword","onClick","handleSearch","_component_el_icon","_component_Search","_hoisted_3","_Fragment","_renderList","shareGroup","shareItem","key","id","newCoverPicture","slice","image","imgIndex","_hoisted_5","_hoisted_6","_toDisplayString","title","_hoisted_7","tags","tag","_createBlock","_component_el_tag","size","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","likeCount","_hoisted_13","_hoisted_14","_hoisted_15","commentCount","_hoisted_16","_hoisted_17","_hoisted_18","favoriteCount","_hoisted_19","_hoisted_20","time","_hoisted_21","_component_el_button","openShareDialog","showDeletebtn","_component_MoreFilled","deleteShare","onMouseleave","_cache","_ctx","_hoisted_22","length","_component_el_empty","description","load","dialogShowVisible","_hoisted_23","Id","shareId"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\CreateCenter\\components\\WorkManagement\\ShareManagement.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div >\r\n            <el-tabs v-model=\"filter\" @tab-change=\"handleTapageClick\">\r\n                    <el-tab-pane label=\"全部\" name=\"all\"></el-tab-pane>\r\n                    <el-tab-pane label=\"仅我可见\" name=\"mesee\"></el-tab-pane>\r\n                    <!-- <el-tab-pane label=\"审核中\"></el-tab-pane>\r\n                    <el-tab-pane label=\"草稿箱\"></el-tab-pane> -->\r\n                    <el-tab-pane label=\"回收站\" name=\"recycleBin\"></el-tab-pane>\r\n            </el-tabs>\r\n            <div class=\"search\">\r\n                <!-- <el-select v-model=\"selectedColumnCategory\" placeholder=\"专栏分类\" @change=\"handleColumnCategoryChange\">\r\n                    <el-option-group>\r\n                        <el-option :value=\"option.name\" v-for=\"option in columnGroup\" :key=\"option.id\"></el-option>\r\n                    </el-option-group>\r\n                </el-select>  -->\r\n                <div style=\"display: flex; align-items: center; width: 300px; height: 35px; border: 1px solid #ccc; border-radius: 4px;\">\r\n                    <input type=\"text\" style=\"flex: 1; padding: 6px 10px; border: none; outline: none; font-size: 14px;\"\r\n                        placeholder=\"请输入关键字\" v-model=\"keyword\">\r\n                    <div style=\"padding: 0 10px;\" class=\"search-box\" @click=\"handleSearch\">\r\n                        <el-icon>\r\n                            <Search />\r\n                        </el-icon>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n            <div class=\"content-container\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n                <!-- 分享管理内容 -->\r\n                <div class=\"content-box\" v-for=\"shareItem in shareGroup\" :key=\"shareItem.id\">\r\n                    <div  v-for= \"(image, imgIndex) in shareItem.newCoverPicture.slice(0, 1)\"  :key=\"imgIndex\">\r\n                        <img :src='image' alt=\"Share Image\" class=\"image\">\r\n                    </div>\r\n                    <div class=\"title\">\r\n                        <div class=\"head\">{{ shareItem.title }}</div>\r\n                        <div class=\"tags\" style=\"display: flex; gap: 8px;\">\r\n                            <el-tag v-for=\"tag in shareItem.tags\" :key=\"tag\" size=\"mini\">{{ tag }}</el-tag>\r\n                        </div>\r\n                        <div class=\"foot\">\r\n                            <div class=\"icon\">\r\n                                <div class=\"icon-box\">\r\n                                    <img src=\"@/assets/LikeBefore.svg\" alt=\"\">\r\n                                    <span class=\"icon-text\">{{ shareItem.likeCount }}</span>\r\n                                </div>\r\n                                <div class=\"icon-box\">\r\n                                    <img src=\"@/assets/Comment.svg\" alt=\"\">\r\n                                    <span class=\"icon-text\">{{ shareItem.commentCount }}</span>\r\n                                </div>\r\n                                <div class=\"icon-box\">\r\n                                    <img src=\"@/assets/FavoriteBefore.svg\" alt=\"\">\r\n                                    <span class=\"icon-text\">{{ shareItem.favoriteCount }}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"time\">\r\n                        <div class=\"detailed-time\">{{ shareItem.time }}</div>\r\n                        <div class=\"btn\">\r\n                            <!-- <el-button>\r\n                                <el-icon><Tickets /></el-icon>数据\r\n                            </el-button> -->\r\n                            <el-button @click=\"openShareDialog(shareItem.id)\">\r\n                                查看\r\n                            </el-button>\r\n                            <el-button @click=\"shareItem.showDeletebtn=true\">\r\n                                <el-icon><MoreFilled /></el-icon>\r\n                            </el-button>\r\n                            <div v-show=\"shareItem.showDeletebtn\" @click=\"deleteShare(shareItem)\" @mouseleave=\"showDeletebtn=false\" class=\"delete-btn\">删除</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <el-empty \r\n                    v-if=\"shareGroup.length === 0 || !shareGroup\" \r\n                    :image-size=\"200\" \r\n                    description=\"您还没有分享呢，快去创作吧！\"\r\n                />\r\n            </div>\r\n        </div>\r\n        <div v-if=\"dialogShowVisible\">\r\n            <ShareDialog v-model=\"dialogShowVisible\" :Id = shareId></ShareDialog>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref,onMounted,watch} from 'vue';\r\nimport { fetchShareCoverage } from '@/utils/fileService'; \r\nimport axios from '@/utils/request';\r\nimport { convertDateFormat } from '@/utils/timeFormat'; \r\nimport { ElMessageBox , ElMessage } from 'element-plus';\r\nimport ShareDialog from '../../../ShareShow/components/ShareDialog.vue'\r\n\r\nconst currentPageShare = ref(1);\r\nconst userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\nconst filter = ref('all');\r\nconst type = ref(0);\r\nconst selectedColumnCategory = ref();\r\nconst keyword = ref();\r\nconst columnGroup = ref([]);\r\nconst shareGroup = ref([]);//获取分享列表\r\nconst newColumnArray = ref([]);//存放用户的分享专栏数据\r\nconst dialogShowVisible = ref(false)//控制分享展示弹框是否展示\r\nconst shareId = ref(null); \r\n\r\n//点击打开分享展示弹框\r\nconst openShareDialog = (id) =>{\r\n    shareId.value = id;\r\n    dialogShowVisible.value = true\r\n}\r\n\r\n//点击删除的弹框\r\nconst deleteShare = async (shareItem) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要删除该条分享吗？',\r\n      {\r\n        confirmButtonText: '确认删除',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }\r\n    );\r\n    handleDelete(shareItem);\r\n  } catch {\r\n    console.log('关闭弹框')\r\n  }\r\n}\r\n\r\n//点击范围分类\r\nfunction handleTapageClick(tabName){\r\n    if(tabName === 'all' ){\r\n        type.value = 0;\r\n    }else if (tabName === 'mesee'){\r\n        type.value = 1;\r\n    }\r\n    else if (tabName === 'recycleBin'){\r\n        type.value = 4;\r\n    }\r\n    console.log(tabName);\r\n}\r\n\r\n// 使用watch来监听type的变化\r\nwatch(type, (newValue, oldValue) => {\r\n    currentPageShare.value = 1;\r\n    keyword.value ='';\r\n    getShareList(keyword.value, currentPageShare.value,newValue);\r\n});\r\n\r\n// //点击专栏分类\r\n// function handleColumnCategoryChange() {\r\n//     selectedColumnCategory.value = getIdFromColumnName( selectedColumnCategory.value);\r\n//     currentPageShare.value = 1;\r\n//     keyword.value ='';\r\n//     getShareList(selectedColumnCategory.value, keyword.value,currentPageShare.value,type.value);\r\n// }\r\n\r\n//点击搜索框\r\nfunction handleSearch() {\r\n    currentPageShare.value = 1;\r\n    getShareList(keyword.value,currentPageShare.value,type.value);\r\n}\r\n\r\n// //根据专栏名获取专栏ID\r\n// function getIdFromColumnName(columnName) {\r\n//     const matchedItem = newColumnArray.value.find(item => item.name === columnName);\r\n//     return matchedItem ? matchedItem.id : null;  \r\n// }\r\n\r\n// //根据专栏id获取专栏名\r\n// function getNameFromColumnId(columnId) {\r\n//     const matchedItem = newColumnArray.value.find(item => item.id === columnId);\r\n//     return matchedItem ? matchedItem.name : null;  \r\n// }\r\n\r\n//根据分享分页数据判断分享状态\r\nfunction juageShareStatus(status) {\r\n    if(status === 0) return '草稿'\r\n    if(status === 1) return '审核中'\r\n    if(status === 2) return '已发表'\r\n    if(status === -1) return '审核未通过'\r\n}\r\n\r\n//根据分享分页数据判断分享可见范围\r\nfunction juageShareAccess(access) {\r\n    if(access === 0) return '全部可见'\r\n    if(access === 1) return '仅我可见'\r\n}\r\n\r\n//因为要获取多种分享数据列表，所以封装一下获取到分享分类数据后的处理函数\r\nasync function processShareGroup(records) {\r\n    const updates = records.map(async (record) => {\r\n        const showDeletebtn = false;\r\n        const newCoverPicture = await fetchShareCoverage(record.id);\r\n        const postTime = convertDateFormat(record.postTime);\r\n        let tags = {}; \r\n        tags.articleStatus = juageShareStatus(record.status);\r\n        // tags.column = getNameFromColumnId(record.columnId);\r\n        tags.access = juageShareAccess(record.access);\r\n        return {\r\n            ...record, \r\n            showDeletebtn,\r\n            newCoverPicture, \r\n            postTime, \r\n            tags\r\n        };\r\n    });\r\n    // 等待所有的并行操作完成\r\n    return Promise.all(updates);\r\n}\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n        if(currentPageShare.value === 1){\r\n            currentPageShare.value++;\r\n        }\r\n        await getShareList(keyword.value,currentPageShare.value,type.value);\r\n        currentPageShare.value++; // 只有在请求成功完成后才递增页\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n//删除分享接口\r\nasync function handleDelete(shareItem) {\r\n    try {\r\n        const response = await axios.delete(`/share/${shareItem.id}`);\r\n        if (response.data.code === 1) {\r\n            shareItem.showDeletebtn = false;\r\n            ElMessage.success('删除分享成功！');\r\n            currentPageShare.value = 1;\r\n            getShareList(keyword.value,currentPageShare.value,type.value);\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error('删除分享失败', response.data.msg);\r\n            ElMessage.error('删除分享失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"删除分享失败\", error); \r\n        ElMessage.error('删除分享失败');\r\n    }\r\n}\r\n\r\n//获取分享分页数据\r\nasync function getShareList(textValue,currentPage,type) {\r\n  try {\r\n    if(currentPage === 1){\r\n        shareGroup.value =[];\r\n    }\r\n    let params = {\r\n        currentPage:currentPage,\r\n        type:type,\r\n    };\r\n    // if (selectedColumnId) params.columnId = selectedColumnId;\r\n    if (textValue) params.title = textValue;\r\n    const response = await axios.get('/users/share/list',{ params: params });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n        const shareGroupNew = response.data.data.records;\r\n        const processedArticleGroup = await processShareGroup(shareGroupNew);\r\n        shareGroup.value = [...shareGroup.value, ...processedArticleGroup];\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n        // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取分享数据失败\");\r\n        ElMessage.error(\"获取分享数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"请求分享接口失败\", error); \r\n    ElMessage.error(\"请求分享接口失败\");\r\n    \r\n  }\r\n}\r\n\r\n// //获取分享专栏列表\r\n// async function getColumnShareList() {\r\n//   try {\r\n//     const response = await axios.get('/column',{\r\n//       params: {\r\n//           type:1,\r\n//           page:1,\r\n//           pageSize:1000,\r\n//           userId:userId,\r\n//         }\r\n//     });\r\n//     if (response.data.code === 1 ) {\r\n//         columnGroup.value = response.data.data.records;\r\n//         console.log(response.data); \r\n//     }else if(response.data.code === 0 && response.data.msg){\r\n//         ElMessage.error(response.data.msg.toString());\r\n//     }else{\r\n//         console.error(\"获取分享专栏数据失败\");\r\n//         ElMessage.error(\"获取分享专栏数据失败\");\r\n//     }\r\n//   } catch (error) {\r\n//     console.error(\"请求分享专栏接口失败\", error); \r\n//     ElMessage.error(\"请求分享专栏接口失败\");\r\n//   }\r\n// }\r\n\r\n//一定要先等待获取专栏的接口完成，不然在获取分享分页数据时无法确定每篇分享的专栏名称\r\nonMounted(async () => {\r\n    // getColumnShareList();  \r\n    getShareList( keyword.value,currentPageShare.value,type.value);\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.icon-text{\r\n    color:#2d2d2d;\r\n}\r\n.search {\r\n    display: flex;\r\n    gap: 2rem;\r\n}\r\n\r\n.search-box {\r\n    cursor: pointer;\r\n}\r\n.content-box {\r\n    display: flex;\r\n    width: 100%;\r\n    border-radius: 4px;\r\n    padding: 1rem 1rem;\r\n    border-bottom: 1px solid #ccc;\r\n}\r\n.image {\r\n    width: 142px;\r\n    height: 100px;\r\n    border-radius: 8px;\r\n}\r\n.title {\r\n    padding-left: 1rem;\r\n    flex: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n}\r\n.icon {\r\n    width: 35%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    color: #888;\r\n    gap: 8px;\r\n}\r\n.icon-box {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 3px;\r\n}\r\n.icon-box span{\r\n    font-size: 14px;\r\n}\r\n.detailed-time {\r\n    font-size: 14px;\r\n}\r\n.time {\r\n    flex: 10%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    padding-right: 1rem;\r\n    color: #888;\r\n    gap: 1rem;\r\n}\r\n.btn {\r\n    color: black;\r\n    position: relative;\r\n}\r\n.delete-btn{\r\n    position: absolute;\r\n    top: 35px ;\r\n    right: 0px;\r\n    width: 50px;\r\n    height: 26px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 5px; \r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    color: #5d5d5d;\r\n}\r\n.underline {\r\n  border: none;\r\n  border-top: 1px solid #ccc;\r\n}\r\n\r\n/* 去除el-tabs底部灰色横线 */\r\n::v-deep .el-tabs__nav-wrap::after {\r\n    height: 0px;\r\n}\r\n.el-select-dropdown{\r\n    overflow-y: auto;\r\n    height: 180px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}