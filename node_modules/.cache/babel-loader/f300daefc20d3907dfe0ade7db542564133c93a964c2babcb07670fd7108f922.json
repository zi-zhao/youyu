{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/VerifiedUser.svg';\nimport _imports_1 from '@/assets/Comment.svg';\nimport _imports_2 from '@/assets/More.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-2d086104\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"cnav\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"ctext1\"\n}, \"评论\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"ml-4\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"button_gap\"\n}, \"|\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"commont_body\"\n};\nconst _hoisted_6 = {\n  class: \"commentListCont\"\n};\nconst _hoisted_7 = {\n  class: \"levelOneCommentInput commentInput\"\n};\nconst _hoisted_8 = {\n  class: \"input\"\n};\nconst _hoisted_9 = {\n  class: \"commentList\",\n  \"infinite-scroll-distance\": \"100\",\n  \"infinite-scroll-immediate\": \"false\"\n};\nconst _hoisted_10 = [\"onMouseenter\", \"onMouseleave\"];\nconst _hoisted_11 = {\n  class: \"userPhoto_1\"\n};\nconst _hoisted_12 = [\"src\", \"onClick\"];\nconst _hoisted_13 = {\n  class: \"userComment\"\n};\nconst _hoisted_14 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"gap\": \"3px\"\n  }\n};\nconst _hoisted_15 = {\n  class: \"userName\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  src: _imports_0,\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\"\n  },\n  alt: \"\"\n};\nconst _hoisted_17 = {\n  class: \"content\"\n};\nconst _hoisted_18 = {\n  class: \"operationBar\"\n};\nconst _hoisted_19 = {\n  class: \"commentDate\"\n};\nconst _hoisted_20 = {\n  class: \"operationBar-right\"\n};\nconst _hoisted_21 = [\"src\", \"onClick\"];\nconst _hoisted_22 = {\n  class: \"like-count\"\n};\nconst _hoisted_23 = [\"onClick\"];\nconst _hoisted_24 = {\n  class: \"like-count\"\n};\nconst _hoisted_25 = [\"onClick\"];\nconst _hoisted_26 = [\"onClick\"];\nconst _hoisted_27 = [\"onMouseleave\"];\nconst _hoisted_28 = {\n  key: 0,\n  class: \"userinput2\"\n};\nconst _hoisted_29 = {\n  class: \"input\"\n};\nconst _hoisted_30 = [\"onClick\"];\nconst _hoisted_31 = {\n  key: 1\n};\nconst _hoisted_32 = [\"onMouseenter\", \"onMouseleave\"];\nconst _hoisted_33 = {\n  class: \"userPhoto_2\"\n};\nconst _hoisted_34 = [\"src\", \"onClick\"];\nconst _hoisted_35 = {\n  class: \"userComment2\"\n};\nconst _hoisted_36 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"gap\": \"3px\"\n  }\n};\nconst _hoisted_37 = {\n  class: \"userName2\"\n};\nconst _hoisted_38 = {\n  key: 0,\n  src: _imports_0,\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\"\n  },\n  alt: \"\"\n};\nconst _hoisted_39 = {\n  class: \"content2\"\n};\nconst _hoisted_40 = {\n  class: \"operationBar2\"\n};\nconst _hoisted_41 = {\n  class: \"commentDate2\"\n};\nconst _hoisted_42 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  }\n};\nconst _hoisted_43 = [\"src\", \"onClick\"];\nconst _hoisted_44 = {\n  class: \"like-count2\"\n};\nconst _hoisted_45 = [\"onClick\"];\nconst _hoisted_46 = [\"onMouseleave\"];\nconst _hoisted_47 = [\"onClick\"];\nconst _hoisted_48 = {\n  key: 0,\n  class: \"bottom\"\n};\nconst _hoisted_49 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _directive_infinite_scroll = _resolveDirective(\"infinite-scroll\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", {\n    class: _normalizeClass([\"cursor-pointer\", {\n      active: $setup.activeTab === 'newest'\n    }]),\n    onClick: _cache[0] || (_cache[0] = $event => $setup.handlecommentChange(0))\n  }, \"最新\", 2 /* CLASS */), _hoisted_4, _createElementVNode(\"span\", {\n    class: _normalizeClass([\"cursor-pointer\", {\n      active: $setup.activeTab === 'hottest'\n    }]),\n    onClick: _cache[1] || (_cache[1] = $event => $setup.handlecommentChange(1))\n  }, \"最热\", 2 /* CLASS */)])])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createCommentVNode(\" 一级评论 输入 \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_input, {\n    modelValue: $setup.levelOneCommentContent,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.levelOneCommentContent = $event),\n    modelModifiers: {\n      lazy: true,\n      trim: true\n    },\n    autosize: {\n      minRows: 1,\n      maxRows: 5\n    },\n    type: \"textarea\",\n    maxlength: \"200\",\n    \"show-word-limit\": \"true\",\n    resize: \"none\",\n    placeholder: \"发表你的评论吧\",\n    class: \"comment-input\",\n    style: {\n      \"width\": \"92%\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"button\", {\n    onClick: $setup.handlerlevelOneComment\n  }, \"评论\")])]), _createCommentVNode(\" 评论渲染 \"), _createCommentVNode(\" 评论渲染 \"), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createCommentVNode(\" 评论item \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.records, record => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: record.id\n    }, [_createElementVNode(\"div\", {\n      class: \"levelOneComment commentItem\",\n      onMouseenter: $event => record.showMore = true,\n      onMouseleave: $event => record.showMore = false\n    }, [_createElementVNode(\"div\", _hoisted_11, [record.newAvatar ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: record.newAvatar,\n      alt: \"\",\n      class: \"navbar-avatar\",\n      onClick: $event => $setup.navigateToUserProfile(record.userId),\n      style: {\n        cursor: 'pointer'\n      }\n    }, null, 8 /* PROPS */, _hoisted_12)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 一级评论内容 \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"p\", _hoisted_15, _toDisplayString(record.username), 1 /* TEXT */), record.verified === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_16)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"p\", _hoisted_17, _toDisplayString(record.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"span\", _hoisted_19, _toDisplayString(record.createTime), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"img\", {\n      class: \"like-pic\",\n      src: record.state === 0 ? $setup.unlikedImage : $setup.likedImage,\n      onClick: $event => $setup.increaseCount(record)\n    }, null, 8 /* PROPS */, _hoisted_21), _createElementVNode(\"span\", _hoisted_22, _toDisplayString(record.likeCount), 1 /* TEXT */), _createElementVNode(\"img\", {\n      class: \"like-pic\",\n      src: _imports_1,\n      onClick: $event => $setup.handleSubComment(record.id)\n    }, null, 8 /* PROPS */, _hoisted_23), _createElementVNode(\"span\", _hoisted_24, _toDisplayString(record.replyCount), 1 /* TEXT */), _createElementVNode(\"span\", {\n      class: \"commentBtn\",\n      onClick: $event => $setup.toggleReplyBox(record.id, record.userId, record.username)\n    }, \"回复\", 8 /* PROPS */, _hoisted_25), record.showMore ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: _imports_2,\n      class: \"more\",\n      onClick: $event => record.showReported = true,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_26)) : _createCommentVNode(\"v-if\", true), record.showReported ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      class: \"hover-box\",\n      onMouseleave: $event => record.showReported = false\n    }, [_createElementVNode(\"div\", {\n      class: \"report-hover\",\n      onClick: _cache[3] || (_cache[3] = $event => $setup.commentReport(_ctx.reply.id, 0))\n    }, \" 举报 \")], 40 /* PROPS, NEED_HYDRATION */, _hoisted_27)) : _createCommentVNode(\"v-if\", true)])])])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_10), _createCommentVNode(\" 一级回复输入框 - 显示在每个一级评论的底下 \"), $setup.activeReplyBoxId === record.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_createVNode(_component_el_input, {\n      modelValue: $setup.replyCommentContent,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.replyCommentContent = $event),\n      modelModifiers: {\n        lazy: true,\n        trim: true\n      },\n      autosize: {\n        minRows: 1,\n        maxRows: 5\n      },\n      type: \"textarea\",\n      maxlength: \"200\",\n      \"show-word-limit\": \"true\",\n      resize: \"none\",\n      placeholder: \"文本中的评论将被发送\",\n      class: \"comment-input\",\n      style: {\n        \"width\": \"89%\"\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"button\", {\n      onClick: $event => $setup.handleReplyToFirstLevelComment(record)\n    }, \" 评论 \", 8 /* PROPS */, _hoisted_30)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 二级评论 \"), record.showComments ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.repliesMap[record.id] || [], reply => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: reply.id,\n        class: \"userComment\"\n      }, [_createElementVNode(\"div\", {\n        class: \"leveltwoComment commentItem\",\n        onMouseenter: $event => reply.showMore = true,\n        onMouseleave: $event => reply.showMore = false\n      }, [_createElementVNode(\"div\", _hoisted_33, [reply.newAvatar ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        src: reply.newAvatar,\n        alt: \"\",\n        class: \"navbar-avatar\",\n        onClick: $event => $setup.navigateToUserProfile(reply.userId),\n        style: {\n          cursor: 'pointer'\n        }\n      }, null, 8 /* PROPS */, _hoisted_34)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"p\", _hoisted_37, _toDisplayString(reply.username), 1 /* TEXT */), reply.verified === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_38)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"p\", _hoisted_39, _toDisplayString(reply.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_40, [_createElementVNode(\"span\", _hoisted_41, _toDisplayString(reply.createTime), 1 /* TEXT */), _createCommentVNode(\" 点赞图片 \"), _createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"img\", {\n        class: \"like-pic2\",\n        src: reply.state === 0 ? $setup.unlikedImage : $setup.likedImage,\n        onClick: $event => $setup.increaseCount2(reply)\n      }, null, 8 /* PROPS */, _hoisted_43), _createElementVNode(\"span\", _hoisted_44, _toDisplayString(reply.likeCount), 1 /* TEXT */)]), _createCommentVNode(\" 评论举报 \"), reply.showMore ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        src: _imports_2,\n        class: \"more\",\n        onClick: $event => reply.showReported = true,\n        alt: \"\"\n      }, null, 8 /* PROPS */, _hoisted_45)) : _createCommentVNode(\"v-if\", true), reply.showReported ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 1,\n        class: \"hover-box\",\n        onMouseleave: $event => reply.showReported = false\n      }, [_createElementVNode(\"div\", {\n        class: \"report-hover\",\n        onClick: $event => $setup.commentReport(reply.id, 1)\n      }, \" 举报 \", 8 /* PROPS */, _hoisted_47)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_46)) : _createCommentVNode(\"v-if\", true)])])], 40 /* PROPS, NEED_HYDRATION */, _hoisted_32), record.replyCount > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_48, [_createVNode($setup[\"ElPagination\"], {\n        \"current-page\": $setup.paginationStates[record.id].currentPage,\n        \"onUpdate:currentPage\": $event => $setup.paginationStates[record.id].currentPage = $event,\n        \"page-size\": $setup.paginationStates[record.id].pageSize,\n        \"onUpdate:pageSize\": $event => $setup.paginationStates[record.id].pageSize = $event,\n        small: _ctx.small,\n        layout: \"prev, pager, next\",\n        \"pager-count\": $setup.paginationStates[record.id].pageCount,\n        \"page-count\": $setup.paginationStates[record.id].pageCount,\n        onCurrentChange: newPage => $setup.handleCurrentChange(record.id, newPage)\n      }, null, 8 /* PROPS */, [\"current-page\", \"onUpdate:currentPage\", \"page-size\", \"onUpdate:pageSize\", \"small\", \"pager-count\", \"page-count\", \"onCurrentChange\"])])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])), [[_directive_infinite_scroll, $setup.load]])])]), $setup.dialogVisible2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_49, [_createVNode($setup[\"CreportedDialog\"], {\n    modelValue: $setup.dialogVisible2,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.dialogVisible2 = $event),\n    id: $setup.workId,\n    type: $setup.type\n  }, null, 8 /* PROPS */, [\"modelValue\", \"id\", \"type\"])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","_createElementVNode","style","src","alt","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_normalizeClass","active","$setup","activeTab","onClick","_cache","$event","handlecommentChange","_hoisted_4","_hoisted_5","_hoisted_6","_createCommentVNode","_hoisted_7","_hoisted_8","_createVNode","_component_el_input","levelOneCommentContent","lazy","trim","autosize","minRows","maxRows","type","maxlength","resize","placeholder","handlerlevelOneComment","_hoisted_9","_Fragment","_renderList","records","record","key","id","onMouseenter","showMore","onMouseleave","_hoisted_11","newAvatar","navigateToUserProfile","userId","cursor","_hoisted_13","_hoisted_14","_hoisted_15","_toDisplayString","username","verified","_hoisted_16","_hoisted_17","content","_hoisted_18","_hoisted_19","createTime","_hoisted_20","state","unlikedImage","likedImage","increaseCount","_hoisted_22","likeCount","handleSubComment","_hoisted_24","replyCount","toggleReplyBox","_hoisted_25","showReported","commentReport","_ctx","reply","activeReplyBoxId","_hoisted_28","_hoisted_29","replyCommentContent","handleReplyToFirstLevelComment","_hoisted_30","showComments","_hoisted_31","repliesMap","_hoisted_33","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","increaseCount2","_hoisted_44","_hoisted_47","_hoisted_48","paginationStates","currentPage","pageSize","small","layout","pageCount","onCurrentChange","newPage","handleCurrentChange","load","dialogVisible2","_hoisted_49","workId"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\TheArticle\\components\\UserComment.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"cnav\">\r\n      <div class=\"ctext1\">评论</div>\r\n      <div>\r\n        <div class=\"ml-4\">\r\n          <span class=\"cursor-pointer\" :class=\"{ active: activeTab === 'newest' }\" @click=\"handlecommentChange(0)\">最新</span>\r\n          <span class=\"button_gap\">|</span>\r\n          <span class=\"cursor-pointer\" :class=\"{ active: activeTab === 'hottest' }\" @click=\"handlecommentChange(1)\">最热</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"commont_body\">\r\n      <div class=\"commentListCont\">\r\n        <!-- 一级评论 输入 -->\r\n        <div class=\"levelOneCommentInput commentInput\">\r\n          <div class=\"input\">\r\n            <el-input\r\n                v-model.lazy.trim=\"levelOneCommentContent\"\r\n                :autosize=\"{ minRows: 1, maxRows: 5 }\"\r\n                type=\"textarea\"\r\n                maxlength=\"200\"\r\n                show-word-limit=\"true\"\r\n                resize=\"none\"\r\n                placeholder=\"发表你的评论吧\"\r\n                class=\"comment-input\"\r\n                style=\"width: 92%;\"\r\n            />\r\n            <button @click=\"handlerlevelOneComment\">评论</button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 评论渲染 -->\r\n        <!-- 评论渲染 -->\r\n        <div class=\"commentList\"  v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n          <!-- 评论item -->\r\n          <div v-for=\"record in records\" :key=\"record.id\" >\r\n            <div class=\"levelOneComment commentItem\" @mouseenter=\"record.showMore = true\" @mouseleave=\"record.showMore = false\">\r\n              <div class=\"userPhoto_1\">\r\n                <img \r\n                  v-if=\"record.newAvatar\"\r\n                  :src=\"record.newAvatar\"\r\n                  alt=\"\"\r\n                  class=\"navbar-avatar\"\r\n                  @click=\"navigateToUserProfile(record.userId)\"\r\n                  :style=\"{ cursor: 'pointer' }\"\r\n              >\r\n              </div>\r\n              <!-- 一级评论内容 -->\r\n              <div class=\"userComment\">\r\n                <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                    <p class=\"userName\">{{ record.username }}</p>\r\n                    <img v-if=\"record.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n                </div>\r\n                <p class=\"content\">{{ record.content }}</p>\r\n                <div class=\"operationBar\">\r\n                  <span class=\"commentDate\">{{ record.createTime }}</span>\r\n                  <div class=\"operationBar-right\">\r\n                    <img\r\n                      class=\"like-pic\"\r\n                      :src=\" record.state === 0 ? unlikedImage : likedImage\"\r\n                      @click=\"increaseCount(record)\"\r\n                    />\r\n                    <span class=\"like-count\">{{ record.likeCount }}</span>\r\n                    <img class=\"like-pic\" src=\"@/assets/Comment.svg\"  @click=\"handleSubComment(record.id)\"/>\r\n                    <span class=\"like-count\">{{ record.replyCount }}</span>\r\n                    <span class=\"commentBtn\" @click=\"toggleReplyBox(record.id,record.userId,record.username)\"\r\n                      >回复</span\r\n                    >\r\n                    <img src=\"@/assets/More.svg\" class=\"more\" v-if=\"record.showMore\" @click=\"record.showReported = true\" alt=\"\">\r\n                    <div class=\"hover-box\" v-if=\"record.showReported\" @mouseleave=\"record.showReported = false\">\r\n                        <div class=\"report-hover\" @click=\"commentReport(reply.id,0)\">\r\n                          举报\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- 一级回复输入框 - 显示在每个一级评论的底下 -->\r\n            <div v-if=\"activeReplyBoxId === record.id\" class=\"userinput2\">\r\n              <div class=\"input\">\r\n                <el-input\r\n                    v-model.lazy.trim=\"replyCommentContent\"\r\n                    :autosize=\"{ minRows: 1, maxRows: 5 }\"\r\n                    type=\"textarea\"\r\n                    maxlength=\"200\"\r\n                    show-word-limit=\"true\"\r\n                    resize=\"none\"\r\n                    placeholder=\"文本中的评论将被发送\"\r\n                    class=\"comment-input\"\r\n                    style=\"width: 89%;\"\r\n                />\r\n                <button @click=\"handleReplyToFirstLevelComment(record)\">\r\n                  评论\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 二级评论 -->\r\n            <div v-if=\"record.showComments\" >\r\n              <div\r\n                v-for=\"reply in repliesMap[record.id] || []\"\r\n                :key=\"reply.id\"\r\n                class=\"userComment\"\r\n              >\r\n                <div class=\"leveltwoComment commentItem\" @mouseenter=\"reply.showMore = true\" @mouseleave=\"reply.showMore = false\">\r\n                  <div class=\"userPhoto_2\">\r\n                    <img \r\n                        v-if=\"reply.newAvatar\"\r\n                        :src=\"reply.newAvatar\"\r\n                        alt=\"\"\r\n                        class=\"navbar-avatar\"\r\n                        @click=\"navigateToUserProfile(reply.userId)\"\r\n                        :style=\"{ cursor: 'pointer' }\"\r\n                    >\r\n                  </div>\r\n                  <div class=\"userComment2\">\r\n                    <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                        <p class=\"userName2\">{{ reply.username }}</p>\r\n                        <img v-if=\"reply.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n                    </div>\r\n                    <p class=\"content2\">{{ reply.content }}</p>\r\n                    <div class=\"operationBar2\">\r\n                      <span class=\"commentDate2\">{{ reply.createTime }}</span>\r\n                      <!-- 点赞图片 -->\r\n                      <div style=\"display: flex;align-items: center;\">\r\n                        <img\r\n                          class=\"like-pic2\"\r\n                          :src=\"reply.state === 0 ? unlikedImage : likedImage\"\r\n                          @click=\"increaseCount2(reply)\"\r\n                        />\r\n                        <span class=\"like-count2\">{{ reply.likeCount }}</span>\r\n                      </div>\r\n                      <!-- 评论举报 -->\r\n                      <img src=\"@/assets/More.svg\" class=\"more\" v-if=\" reply.showMore\" @click=\" reply.showReported = true\" alt=\"\">\r\n                      <div class=\"hover-box\" v-if=\" reply.showReported\" @mouseleave=\" reply.showReported = false\">\r\n                        <div class=\"report-hover\" @click=\"commentReport(reply.id,1)\">\r\n                          举报\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"bottom\" v-if=\"record.replyCount>0\">\r\n                  <el-pagination\r\n                    v-model:current-page=\"paginationStates[record.id].currentPage\"\r\n                    v-model:page-size=\"paginationStates[record.id].pageSize\"\r\n                    :small=\"small\"\r\n                    layout=\"prev, pager, next\"\r\n                    :pager-count=\"paginationStates[record.id].pageCount\"\r\n                    :page-count=\"paginationStates[record.id].pageCount\"\r\n                    @current-change=\"newPage => handleCurrentChange(record.id, newPage)\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"dialogVisible2\">\r\n      <CreportedDialog v-model=\"dialogVisible2\" :id=\"workId\" :type=\"type\"></CreportedDialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage,ElPagination } from 'element-plus';\r\nimport axios from \"@/utils/request\";\r\nimport { ref,onMounted,reactive } from \"vue\";\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport unlikedImage from '@/assets/LikeBefore.svg';//点赞前图片\r\nimport likedImage from '@/assets/LikeAfter.svg';//点赞后图片\r\nimport CreportedDialog from '@/page/components/CreportedDialog.vue';\r\nimport { useRouter,useRoute} from 'vue-router';\r\nimport { formatDateTime} from '@/utils/timeFormat'; \r\nimport { openUrl } from '@/utils/routeJudge'\r\n\r\nconst dialogVisible2 = ref(false);//控制评论举报弹框是否显示\r\nconst type = ref(null);\r\nconst commentType = ref(0);\r\nconst workId = ref(null);\r\nconst currentPage = ref(1);\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst userId = localStorage.getItem(\"userId\");\r\nconst userName = localStorage.getItem(\"userName\");\r\nconst newUserAvater = ref();//存放用户自己的头像\r\nconst replyCommentContent = ref(\"\");\r\nconst articleData = ref({})//存储文章数据\r\nconst records = ref([]); //储存一级评论列表\r\nconst repliesMap = ref({}); // 存储每个一级评论ID对应的二级评论列表\r\nconst paginationStates = reactive({});//存储每个分页器\r\nconst articleId = parseInt(route.params.id,10);//路径中的文章ID\r\nconst activeTab = ref('newest');//记录点击最新或最热\r\n\r\nconst initPaginationState = (recordId) => {\r\n  if (!paginationStates[recordId]) {\r\n    paginationStates[recordId] = {\r\n      currentPage: 1, //分页器中的当前页数\r\n      pageSize: 5, //分页器中的每页呈现数据条数\r\n      pageCount: 0,//分页器中总页数\r\n      pagerCount: 5,//分页器最多显示几个页码\r\n    };\r\n  }\r\n};\r\n\r\nconst handleCurrentChange = (commentId, currentChange) => {\r\n  if (paginationStates[commentId]) {\r\n    paginationStates[commentId].currentPage= currentChange;\r\n    fetchReplies(commentId, paginationStates[commentId].currentPage, paginationStates[commentId].pageSize);\r\n  }\r\n};\r\n\r\n//点击“最新”或“最热”评论\r\nasync function handlecommentChange(type) {\r\n  activeTab.value = type === 0 ? 'newest' : 'hottest';\r\n  currentPage.value =1;\r\n  if(type == 0){\r\n    commentType.value = 0;\r\n    await fetchCommentsNew(articleId,currentPage.value);\r\n  }else{\r\n    commentType.value = 1;\r\n    await fetchCommentsHot(articleId,currentPage.value);\r\n  }\r\n}\r\n\r\n\r\n//向举报弹窗赋值的函数\r\nconst commentReport = (id,typeNum) =>{\r\n  workId.value = id;\r\n  type.value = typeNum;\r\n  dialogVisible2.value = true;\r\n}\r\n\r\n//点击用户头像进行跳转\r\nconst navigateToUserProfile = (user_id) => {\r\n  console.log('点击用户头像跳转');\r\n  if(user_id == userId){\r\n    // const routeLocation = router.resolve({ path: '/PersonalPage' });\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl('/PersonalPage')\r\n  }else{\r\n    // const routeLocation = router.resolve({ path: `/OtherUserPersonalPage/${user_id}`});\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl(`/OtherUserPersonalPage/${user_id}`)\r\n  }\r\n};\r\n\r\n\r\n//获取文章内容\r\nasync function fetchArticleContent(id) {\r\n  try {\r\n    const response = await axios.get(`/article/${id}`);\r\n    if (response.data && response.data.code === 1) {\r\n      articleData.value =  response.data.data;\r\n      newUserAvater.value = await getUsersAvatarFromCOS(userId);\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error('获取文章数据失败', response.data.msg || 'Unknown error');\r\n      ElMessage.error('获取文章数据失败');\r\n    }\r\n  } catch (error) {\r\n    console.error('网络错误:', error.message);\r\n    ElMessage.error('获取文章数据失败');\r\n  }\r\n}\r\n\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n  if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n  isLoading = true; // 开始加载数据，设置锁状态为true\r\n  try {\r\n      if(currentPage.value === 1){\r\n        currentPage.value++;\r\n      }\r\n      if(commentType.value === 0){\r\n        await fetchCommentsNew(articleId,currentPage.value);\r\n      }else if(commentType.value === 1){\r\n        await fetchCommentsHot(articleId,currentPage.value);\r\n      }\r\n      currentPage.value++; // 只有在请求成功完成后才递增页码\r\n  } catch (error) {\r\n      console.error(error);\r\n      ElMessage.error('滚动时的未知错误');\r\n  } finally {\r\n      isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n  }\r\n}\r\n\r\n//获取一级评论(最新)\r\nconst fetchCommentsNew = async (articleId,currentPage) => {\r\n  if(currentPage === 1){\r\n    records.value = [];\r\n  }\r\n  try {\r\n    const response = await axios.get(\"/comment/list\", {\r\n      params: {\r\n        pageSize: 10,\r\n        currentPage: currentPage,\r\n        articleId: articleId,\r\n        type:0,\r\n        category:1,\r\n      },\r\n    });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n      response.data.data.records.forEach(record => initPaginationState(record.id));\r\n      const updates = response.data.data.records.map(async (record) => {\r\n        const newAvatar = await getUsersAvatarFromCOS(record.userId);\r\n        return {\r\n          ...record,\r\n          showComments: false,\r\n          showReported: false,\r\n          showMore: false,\r\n          newAvatar // 新获取的头像\r\n        };\r\n      });\r\n      const updatedRecords = await Promise.all(updates);\r\n      records.value = [...records.value, ...updatedRecords];\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n      // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error(\"获取文章评论失败:\",response.data.msg || \"Unknown error\");\r\n      ElMessage.error('获取文章评论失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取文章评论失败\", error.message);\r\n    ElMessage.error('获取文章评论失败');\r\n  }\r\n};\r\n\r\n//获取一级评论(最热)\r\nconst fetchCommentsHot = async (articleId,currentPage) => {\r\n  if(currentPage === 1){\r\n    records.value = [];\r\n  }\r\n  try {\r\n    const response = await axios.get(\"/comment/list\", {\r\n      params: {\r\n        pageSize: 10,\r\n        currentPage: currentPage,\r\n        articleId: articleId,\r\n        type:0,\r\n        category:0,\r\n      },\r\n    });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n      response.data.data.records.forEach(record => initPaginationState(record.id));\r\n      const updates = response.data.data.records.map(async (record) => {\r\n        const newAvatar = await getUsersAvatarFromCOS(record.userId);\r\n        const verified = await fetchUserInformation(record.userId);\r\n        return {\r\n          ...record,\r\n          verified,\r\n          showComments: false,\r\n          showReported: false,\r\n          showMore: false,\r\n          newAvatar // 新获取的头像\r\n        };\r\n      });\r\n      const updatedRecords = await Promise.all(updates);\r\n      records.value = [...records.value, ...updatedRecords];\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n      // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error(\"获取文章评论失败:\",response.data.msg || \"Unknown error\");\r\n      ElMessage.error('获取文章评论失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取文章评论失败\", error.message);\r\n    ElMessage.error('获取文章评论失败');\r\n  }\r\n};\r\n\r\n//根据一级评论id获取对应二级评论\r\nconst fetchReplies = async (commentId, currentPage, pageSize) => {\r\n  try {\r\n    const response = await axios.get(\"/comment/reply/list\", {\r\n      params: {\r\n        pageSize: pageSize,\r\n        currentPage: currentPage,\r\n        commentId: commentId,\r\n      },\r\n    });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n      repliesMap.value[commentId] = response.data.data.records;\r\n      if (paginationStates[commentId]) {\r\n        paginationStates[commentId].pageCount = Math.ceil(response.data.data.total / pageSize);\r\n      }\r\n      const updates = repliesMap.value[commentId].map(async (record) => {\r\n        const newAvatar = await getUsersAvatarFromCOS(record.userId);\r\n        const verified = await fetchUserInformation(record.userId);\r\n        return {\r\n          ...record,\r\n          verified,\r\n          showReported: false, // 控制评论的举报按钮是否显示\r\n          showMore: false, // 控制评论“more”图标是否显示\r\n          newAvatar,\r\n        };\r\n      });\r\n      repliesMap.value[commentId] = await Promise.all(updates);\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n      // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error( \"获取二级评论接口失败:\", response.data.msg || \"Unknown error\" );\r\n      ElMessage.error('获取二级评论接口失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\" 获取二级评论接口失败\", error.message);\r\n    ElMessage.error('获取二级评论接口失败');\r\n  }\r\n};\r\n\r\n//点击一级评论的评论按钮，展开对应的二级评论\r\nconst handleSubComment =(recordId) =>{\r\n  const record = records.value.find(r => r.id === recordId);\r\n  if (record) {\r\n    record.showComments = !record.showComments;\r\n  }\r\n  if (record.showComments) {\r\n    // 初始化分页状态，如果尚未初始化\r\n    initPaginationState(recordId);\r\n    // 使用该一级评论的分页状态来获取二级评论\r\n    fetchReplies(recordId, paginationStates[recordId].currentPage, paginationStates[recordId].pageSize);\r\n  }\r\n}\r\n\r\n//最顶部的评论框提交的相关接口\r\nconst levelOneCommentContent = ref(\"\");\r\nconst handlerlevelOneComment = async () => {\r\n  if (!levelOneCommentContent.value) {\r\n    ElMessage.error(\"评论内容不能为空!\");\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.post(\"/comment/send\", {\r\n      authorId:articleData.value.userId,\r\n      authorName:articleData.value.username,\r\n      worksId: articleId,\r\n      worksTitle:articleData.value.title,\r\n      userId: userId,\r\n      username: userName,\r\n      content: levelOneCommentContent.value,\r\n      type:0,\r\n    });\r\n    if (response.data.code === 1) {\r\n      const newReplyId = response.data.map.id;\r\n      ElMessage.success(\"评论成功!\");\r\n      const time = new Date()\r\n      // 假设并构造新的评论\r\n      const newComment = {\r\n        id: newReplyId, // 临时ID，实际应用中这应该是由后台返回的\r\n        newAvatar: newUserAvater.value,\r\n        username: userName, // 假设的用户名，实际上可以从用户会话或其他地方获取\r\n        content: levelOneCommentContent.value,\r\n        createTime: formatDateTime(time), // 使用当前时间作为评论时间\r\n        state:0, // 初始状态下，该评论未被点赞\r\n        likeCount: 0,\r\n        replyCount: 0,\r\n        articleId: articleId, // 假设的文章ID\r\n      };\r\n      // 将新评论添加到records数组的开头\r\n      records.value.unshift(newComment);\r\n      // 清除评论输入框的内容\r\n      levelOneCommentContent.value = \"\";\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      ElMessage.error(\"评论失败: \" + (response.data.msg || \"未知错误\"));\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"提交评论时出现错误: \" + error.message);\r\n  }\r\n};\r\n\r\n//一级评论框的内容获取\r\nconst handleReplyToFirstLevelComment = async (comment) => {\r\n  if (!replyCommentContent.value) {\r\n    ElMessage.error(\"回复内容不能为空!\");\r\n    return;\r\n  }\r\n  try {\r\n    const response = await axios.post(\"/comment/reply/send\", {\r\n      userId: userId, \r\n      username: userName,\r\n      worksId: articleId,\r\n      worksTitle:articleData.value.title,\r\n      commentId: comment.id,\r\n      content: replyCommentContent.value,\r\n      type:0,\r\n    });\r\n    if (response.data.code === 1) {\r\n      ElMessage.success(\"回复成功!\");\r\n      // 折叠回复框\r\n      activeReplyBoxId.value = null;\r\n      comment.replyCount = response.data.map.replyCount;\r\n      comment.showComments = false;\r\n      replyCommentContent.value = \"\";\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      ElMessage.error(\"回复失败: \" + (response.data.msg || \"未知错误\"));\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error(\"提交回复时出现错误: \" + error.message);\r\n  }\r\n};\r\n\r\n\r\n//一级评论的点赞接口，接受一个 record 作为参数\r\nasync function increaseCount(record) {\r\n  try {\r\n      const config = record.state === 0\r\n          ? {\r\n              method: 'put',\r\n              url: `/comment/like`,\r\n              params: { id: record.id , userId : record.userId}\r\n          }\r\n          : {\r\n              method: 'delete',\r\n              url: `/comment/unlike`,\r\n              params: { id: record.id , userId : record.userId}\r\n          };\r\n      const response = await axios(config);\r\n      if (response.data && response.data.code === 1) {\r\n        record.state  = record.state === 0 ? 1 : 0;\r\n        record.likeCount = response .data.data;\r\n        console.log('点赞/取消赞 成功');\r\n      } else if(response.data.code === 0 && response.data.msg){\r\n          ElMessage.error(response.data.msg.toString());\r\n      }else {\r\n        console.error(response.data.msg || 'Unknown error');\r\n        ElMessage.error('点赞失败');\r\n      }\r\n  } catch (error) {\r\n      console.error('获取点赞状态失败', error.message);\r\n      ElMessage.error('点赞动态失败');\r\n  }\r\n}\r\n\r\n  //二级评论的点赞接口，接受一个 reply 作为参数\r\n  async function increaseCount2(reply) {\r\n  try {\r\n      const config = reply.state === 0\r\n        ? {\r\n            method: 'put',\r\n            url: `comment/reply/like`,\r\n            params: { id: reply.id , userId : reply.userId}\r\n        }\r\n        : {\r\n            method: 'delete',\r\n            url: `/comment/reply/unlike`,\r\n            params: { id: reply.id , userId : reply.userId}\r\n        };\r\n      const response = await axios(config);\r\n      if (response.data && response.data.code === 1) {\r\n        reply.state  = reply.state === 0 ? 1 : 0;\r\n        reply.likeCount = response.data.data;\r\n      } else if(response.data.code === 0 && response.data.msg){\r\n          ElMessage.error(response.data.msg.toString());\r\n      }else {\r\n        ElMessage.error('点赞操作失败');\r\n        console.error(response.data.msg || 'Unknown error');\r\n      }\r\n  } catch (error) {\r\n      console.error('获取点赞状态失败', error.message);\r\n  }\r\n}\r\n\r\n//一级回复框的折叠\r\nconst activeReplyBoxId = ref(null);\r\nconst toggleReplyBox = (id) => {\r\n  activeReplyBoxId.value = activeReplyBoxId.value === id ? null : id;\r\n};\r\n\r\n  // 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n  try {\r\n    const response = await axios.get(`/users/${userId}`);\r\n    if(response.data.code === 1){\r\n        return (response.data.data.verified);\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户信息失败\", error);\r\n    ElMessage.error('获取用户信息失败');\r\n  }\r\n};\r\n\r\n\r\nonMounted(() => {\r\n  fetchArticleContent(articleId);\r\n  fetchCommentsNew(articleId,currentPage.value);\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.bottom{\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 20px 0 20px 2rem;\r\n}\r\n::v-deep .el-pagination__rightwrapper .el-pagination__total{\r\n  display: none !important;;\r\n}\r\n.cnav {\r\n  display: flex;\r\n  width: 85%;\r\n  padding: 11px 12px 11px 12px;\r\n  align-items: flex-start;\r\n  gap: 32px;\r\n  flex-shrink: 0;\r\n  margin: 10px auto 20px;\r\n}\r\n.ctext1 {\r\n  font-size: 18px;\r\n}\r\n.ml-4 span {\r\n  display: inline-block;\r\n  text-align: center;\r\n  width: 50px;\r\n  height: 20px;\r\n  font-size: 14px;\r\n}\r\n.ml-4 .button_gap {\r\n  width: 10px;\r\n  height: 20px;\r\n  font-size: 14px;\r\n}\r\n\r\n.commont_body {\r\n  width: 85%;\r\n  height: auto;\r\n  margin: 0px auto;\r\n}\r\n\r\n.commentListCont {\r\n  margin: 10px auto;\r\n  width: 80%;\r\n  min-width: 650px;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* 头像 */\r\n.userPhoto_1,\r\n.userPhoto_2 {\r\n  margin-right: 15px;\r\n}\r\n.userPhoto_1 {\r\n  width: 2.5rem;\r\n  height: 2.5rem;\r\n}\r\n.userPhoto_2 {\r\n  width: 2rem;\r\n  height: 2rem;\r\n}\r\n.navbar-avatar {\r\n  border-radius: 50%;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n/*一级,二级,评论输入*/\r\n.commentInput {\r\n  width: 106%;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.commentInput .input {\r\n  border-radius: 16px;\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n} \r\n.commentInput .input > button {\r\n  border-radius: 20px;\r\n  height: 30px;\r\n  padding: 0 15px;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  background-color: #9fa9ca;\r\n  cursor: pointer;\r\n}\r\n.commentInput .input > button:active {\r\n  box-shadow: 1px 1px 5px 5px #999 inset;\r\n}\r\n\r\n/* 评论列表 */\r\n.commentList {\r\n  flex: 1;\r\n  width: 100%;\r\n  padding: 0 5px;\r\n  margin-top: 15px;\r\n}\r\n.levelOneComment {\r\n  display: flex; \r\n  align-items: flex-start;\r\n  padding: 10px;\r\n  margin-bottom: 2rem;\r\n}\r\n.userComment {\r\n  flex: 1; \r\n}\r\n.userName {\r\n  color: #393939;\r\n  font-family: Microsoft YaHei;\r\n  margin-top: 2px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n}\r\n.content {\r\n  margin-top: 5px;\r\n  color: #000;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 16px;\r\n  margin: 1rem 0 1.5rem;\r\n  max-width: 100%;\r\n  line-height: 1.6;\r\n}\r\n.operationBar {\r\n  margin-bottom: 3px;\r\n  width: 90%;\r\n  display: flex; \r\n  justify-content: space-between;\r\n  align-items: center; \r\n  position: relative;\r\n}\r\n.operationBar-right{\r\n  display: flex;\r\n  width: auto;\r\n  align-items: center;\r\n}\r\n.more{\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: -100px;\r\n}\r\n.hover-box{\r\n  position: absolute;\r\n  top: 20px ;\r\n  right: -120px;\r\n  width: 50px;\r\n  height: 26px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px; \r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n.report-hover{\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  color: #5d5d5d;\r\n}\r\n.commentDate {\r\n  color: #9b9b9b;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  margin-right: 70px;\r\n}\r\n.like-pic {\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 0.2rem;\r\n  cursor: pointer;\r\n}\r\n.like-count {\r\n  display: inline-block;\r\n  width: 45px;\r\n  height: 14px;\r\n  color: #2d2d2d;;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  line-height: 14px;\r\n  margin-right: 45px;\r\n}\r\n.commentBtn {\r\n  color: #005b82;\r\n  height: 21px;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  cursor: pointer; \r\n}\r\n.userinput2 {\r\n  width: 89%;\r\n  padding: 14px;\r\n  display: flex;\r\n  margin: 25px 0px 25px 63px;\r\n  align-items: center;\r\n}\r\n.userinput2 .input {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n}\r\n.userinput2 .input > button {\r\n  border-radius: 20px;\r\n  height: 30px;\r\n  padding: 0 15px;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  background-color: #9fa9ca;\r\n  cursor: pointer;\r\n}\r\n.userinput2 .input > button:active {\r\n  box-shadow: 1px 1px 5px 5px #999 inset;\r\n}\r\n.leveltwoComment {\r\n  display: flex;  \r\n  align-items: flex-start;  \r\n  margin-bottom: 10px;\r\n  margin-left: 65px;\r\n}\r\n.userComment2 {\r\n  flex: 1; \r\n}\r\n\r\n.userName2 {\r\n  color: #393939;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n}\r\n.content2 {\r\n  color: #000;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  margin: 1rem 0 1.5rem;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n}\r\n\r\n.operationBar2 {\r\n  margin-bottom: 3px;\r\n  width: 75%;\r\n  display: flex; \r\n  justify-content: space-between;\r\n  align-items: center; \r\n  position: relative;\r\n}\r\n.commentDate2 {\r\n  color: #9b9b9b;\r\n  font-family: Microsoft YaHei;\r\n  font-size: 12px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  margin-right: 70px;\r\n}\r\n.like-count2 {\r\n  display: inline-block;\r\n  width: 45px;\r\n  height: 12px;\r\n  color: #2d2d2d;;\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  line-height: 12px;\r\n  margin-right: 90px;\r\n}\r\n.like-pic2 {\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-right: 0.2rem;\r\n  cursor: pointer;\r\n}\r\n.commentBtn2 {\r\n  color: #005B82;;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: normal;\r\n  cursor: pointer;  \r\n}\r\n.cursor-pointer {\r\n    cursor: pointer;\r\n}\r\n.cursor-pointer:hover,\r\n.active {\r\n    color: #667bc0;  \r\n}\r\n@media (max-width:768px){\r\n  .cnav{\r\n    width: auto;\r\n  }\r\n  .commont_body{\r\n    width: auto;\r\n    margin-left: 0px;\r\n  }\r\n  .commentListCont{\r\n    width: 95%;\r\n    min-width: auto;\r\n  }\r\n  .commentInput{\r\n    width: 100%;\r\n  }\r\n  .commentInput .input{\r\n    width: auto;\r\n  }\r\n  .commentInput .input>input{\r\n    width: 83%;\r\n    padding: 0 0.5rem;\r\n  }\r\n  .commentInput .input>button,\r\n  .userinput2 .input>button{\r\n    width: 15%;\r\n    padding: 0 3%;\r\n    font-size: 0.8rem;\r\n  }\r\n  .levelOneComment {\r\n    margin-left: 0px;\r\n  }\r\n  .userPhoto_1 ,\r\n  .userPhoto_2 {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    margin-right: 0.5rem;\r\n  }\r\n  .operationBar {\r\n    width: auto;\r\n  }\r\n  .commentDate{\r\n    width: auto;\r\n    margin-right: 0px;\r\n  }\r\n  .like-count,\r\n  .like-count2{\r\n    width: auto;\r\n    margin-right: 8px;\r\n  }\r\n  .leveltwoComment {\r\n    margin-left: 2rem;\r\n  }\r\n  .userinput2{\r\n    width: 93%;\r\n    padding: 0px;\r\n    height: auto;\r\n  }\r\n  .userinput2 .input>input{\r\n    width: 83%;\r\n    padding: 10px 15px;\r\n  }\r\n  .operationBar2 {\r\n    width: 90%;\r\n  }\r\n  .commentDate2,\r\n  .like-count2 {\r\n    width: auto;\r\n    margin-right: 0px;\r\n    margin-left: 0.3rem;\r\n  }\r\n  .commentDate,\r\n  .commentDate2{\r\n    font-size: 0.8rem;\r\n  }\r\n  .content2, \r\n  .userName2{\r\n    font-size: 1rem;\r\n  }\r\n  .userinput2 .input>button{\r\n    height: 27px;\r\n  }  \r\n  .bottom{\r\n    width: auto;\r\n  }\r\n  .bottom .el-pagination{\r\n    justify-content: center;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";OAoDsDA,UAA+B;OAY3CC,UAA0B;OAK3CC,UAAuB;;;EAnEvCC,KAAK,EAAC;AAAM;gEACfC,mBAAA,CAA4B;EAAvBD,KAAK,EAAC;AAAQ,GAAC,IAAE;;EAEfA,KAAK,EAAC;AAAM;gEAEfC,mBAAA,CAAiC;EAA3BD,KAAK,EAAC;AAAY,GAAC,GAAC;;EAK3BA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAiB;;EAErBA,KAAK,EAAC;AAAmC;;EACvCA,KAAK,EAAC;AAAO;;EAkBfA,KAAK,EAAC,aAAa;EAA2B,0BAAwB,EAAC,KAAK;EAAC,2BAAyB,EAAC;;;;EAIjGA,KAAK,EAAC;AAAa;;;EAWnBA,KAAK,EAAC;AAAa;;EACjBE,KAAmD,EAAnD;IAAA;IAAA;IAAA;EAAA;AAAmD;;EACjDF,KAAK,EAAC;AAAU;;;EACeG,GAA+B,EAA/BN,UAA+B;EAACK,KAAiC,EAAjC;IAAA;IAAA;EAAA,CAAiC;EAACE,GAAG,EAAC;;;EAEzGJ,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAc;;EACjBA,KAAK,EAAC;AAAa;;EACpBA,KAAK,EAAC;AAAoB;;;EAMvBA,KAAK,EAAC;AAAY;;;EAElBA,KAAK,EAAC;AAAY;;;;;;EAeWA,KAAK,EAAC;;;EAC1CA,KAAK,EAAC;AAAO;;;;;;;EA0BTA,KAAK,EAAC;AAAa;;;EAUnBA,KAAK,EAAC;AAAc;;EAClBE,KAAmD,EAAnD;IAAA;IAAA;IAAA;EAAA;AAAmD;;EACjDF,KAAK,EAAC;AAAW;;;EACaG,GAA+B,EApElCN,UAA+B;EAoEIK,KAAiC,EAAjC;IAAA;IAAA;EAAA,CAAiC;EAACE,GAAG,EAAC;;;EAExGJ,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAe;;EAClBA,KAAK,EAAC;AAAc;;EAErBE,KAA0C,EAA1C;IAAA;IAAA;EAAA;AAA0C;;;EAMvCF,KAAK,EAAC;AAAa;;;;;;EAY5BA,KAAK,EAAC;;;;;;;;uBA/IzBK,mBAAA,CAkKM,cAjKJJ,mBAAA,CASM,OATNK,UASM,GARJC,UAA4B,EAC5BN,mBAAA,CAMM,cALJA,mBAAA,CAIM,OAJNO,UAIM,GAHJP,mBAAA,CAAkH;IAA5GD,KAAK,EAAAS,eAAA,EAAC,gBAAgB;MAAAC,MAAA,EAAmBC,MAAA,CAAAC,SAAS;IAAA;IAAkBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAK,mBAAmB;KAAK,IAAE,kBAC3GC,UAAiC,EACjChB,mBAAA,CAAmH;IAA7GD,KAAK,EAAAS,eAAA,EAAC,gBAAgB;MAAAC,MAAA,EAAmBC,MAAA,CAAAC,SAAS;IAAA;IAAmBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAK,mBAAmB;KAAK,IAAE,iB,OAIlHf,mBAAA,CAmJM,OAnJNiB,UAmJM,GAlJJjB,mBAAA,CAiJM,OAjJNkB,UAiJM,GAhJJC,mBAAA,aAAgB,EAChBnB,mBAAA,CAeM,OAfNoB,UAeM,GAdJpB,mBAAA,CAaM,OAbNqB,UAaM,GAZJC,YAAA,CAUEC,mBAAA;gBATqBb,MAAA,CAAAc,sBAAsB;+DAAtBd,MAAA,CAAAc,sBAAsB,GAAAV,MAAA;oBAAzC;MAAAW,IAAA;MAAAC,IAAA;IAAA,CAA0C;IACzCC,QAAQ,EAAE;MAAAC,OAAA;MAAAC,OAAA;IAAA,CAA0B;IACrCC,IAAI,EAAC,UAAU;IACfC,SAAS,EAAC,KAAK;IACf,iBAAe,EAAC,MAAM;IACtBC,MAAM,EAAC,MAAM;IACbC,WAAW,EAAC,SAAS;IACrBlC,KAAK,EAAC,eAAe;IACrBE,KAAmB,EAAnB;MAAA;IAAA;2CAEJD,mBAAA,CAAmD;IAA1CY,OAAK,EAAEF,MAAA,CAAAwB;EAAsB,GAAE,IAAE,E,KAI9Cf,mBAAA,UAAa,EACbA,mBAAA,UAAa,E,+BACbf,mBAAA,CA2HM,OA3HN+B,UA2HM,GA1HJhB,mBAAA,YAAe,G,kBACff,mBAAA,CAwHMgC,SAAA,QAAAC,WAAA,CAxHgB3B,MAAA,CAAA4B,OAAO,EAAjBC,MAAM;yBAAlBnC,mBAAA,CAwHM;MAxH0BoC,GAAG,EAAED,MAAM,CAACE;QAC1CzC,mBAAA,CAyCM;MAzCDD,KAAK,EAAC,6BAA6B;MAAE2C,YAAU,EAAA5B,MAAA,IAAEyB,MAAM,CAACI,QAAQ;MAAUC,YAAU,EAAA9B,MAAA,IAAEyB,MAAM,CAACI,QAAQ;QACxG3C,mBAAA,CASM,OATN6C,WASM,GAPIN,MAAM,CAACO,SAAS,I,cADxB1C,mBAAA,CAOD;;MALIF,GAAG,EAAEqC,MAAM,CAACO,SAAS;MACtB3C,GAAG,EAAC,EAAE;MACNJ,KAAK,EAAC,eAAe;MACpBa,OAAK,EAAAE,MAAA,IAAEJ,MAAA,CAAAqC,qBAAqB,CAACR,MAAM,CAACS,MAAM;MAC1C/C,KAAK,EAAE;QAAAgD,MAAA;MAAA;iFAGZ9B,mBAAA,YAAe,EACfnB,mBAAA,CA4BM,OA5BNkD,WA4BM,GA3BJlD,mBAAA,CAGM,OAHNmD,WAGM,GAFFnD,mBAAA,CAA6C,KAA7CoD,WAA6C,EAAAC,gBAAA,CAAtBd,MAAM,CAACe,QAAQ,kBAC3Bf,MAAM,CAACgB,QAAQ,U,cAA1BnD,mBAAA,CAA2G,OAA3GoD,WAA2G,K,qCAE/GxD,mBAAA,CAA2C,KAA3CyD,WAA2C,EAAAJ,gBAAA,CAArBd,MAAM,CAACmB,OAAO,kBACpC1D,mBAAA,CAqBM,OArBN2D,WAqBM,GApBJ3D,mBAAA,CAAwD,QAAxD4D,WAAwD,EAAAP,gBAAA,CAA3Bd,MAAM,CAACsB,UAAU,kBAC9C7D,mBAAA,CAkBM,OAlBN8D,WAkBM,GAjBJ9D,mBAAA,CAIE;MAHAD,KAAK,EAAC,UAAU;MACfG,GAAG,EAAGqC,MAAM,CAACwB,KAAK,SAASrD,MAAA,CAAAsD,YAAY,GAAGtD,MAAA,CAAAuD,UAAU;MACpDrD,OAAK,EAAAE,MAAA,IAAEJ,MAAA,CAAAwD,aAAa,CAAC3B,MAAM;0CAE9BvC,mBAAA,CAAsD,QAAtDmE,WAAsD,EAAAd,gBAAA,CAA1Bd,MAAM,CAAC6B,SAAS,kBAC5CpE,mBAAA,CAAwF;MAAnFD,KAAK,EAAC,UAAU;MAACG,GAA0B,EAA1BL,UAA0B;MAAGe,OAAK,EAAAE,MAAA,IAAEJ,MAAA,CAAA2D,gBAAgB,CAAC9B,MAAM,CAACE,EAAE;0CACpFzC,mBAAA,CAAuD,QAAvDsE,WAAuD,EAAAjB,gBAAA,CAA3Bd,MAAM,CAACgC,UAAU,kBAC7CvE,mBAAA,CAEC;MAFKD,KAAK,EAAC,YAAY;MAAEa,OAAK,EAAAE,MAAA,IAAEJ,MAAA,CAAA8D,cAAc,CAACjC,MAAM,CAACE,EAAE,EAACF,MAAM,CAACS,MAAM,EAACT,MAAM,CAACe,QAAQ;OACpF,IAAE,iBAAAmB,WAAA,GAE2ClC,MAAM,CAACI,QAAQ,I,cAA/DvC,mBAAA,CAA4G;;MAAvGF,GAAuB,EAAvBJ,UAAuB;MAACC,KAAK,EAAC,MAAM;MAAyBa,OAAK,EAAAE,MAAA,IAAEyB,MAAM,CAACmC,YAAY;MAASvE,GAAG,EAAC;+EAC5EoC,MAAM,CAACmC,YAAY,I,cAAhDtE,mBAAA,CAIM;;MAJDL,KAAK,EAAC,WAAW;MAA6B6C,YAAU,EAAA9B,MAAA,IAAEyB,MAAM,CAACmC,YAAY;QAC9E1E,mBAAA,CAEM;MAFDD,KAAK,EAAC,cAAc;MAAEa,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAiE,aAAa,CAACC,IAAA,CAAAC,KAAK,CAACpC,EAAE;OAAK,MAE7D,E,0IAMZtB,mBAAA,4BAA+B,EACpBT,MAAA,CAAAoE,gBAAgB,KAAKvC,MAAM,CAACE,EAAE,I,cAAzCrC,mBAAA,CAiBM,OAjBN2E,WAiBM,GAhBJ/E,mBAAA,CAeM,OAfNgF,WAeM,GAdJ1D,YAAA,CAUEC,mBAAA;kBATqBb,MAAA,CAAAuE,mBAAmB;iEAAnBvE,MAAA,CAAAuE,mBAAmB,GAAAnE,MAAA;sBAAtC;QAAAW,IAAA;QAAAC,IAAA;MAAA,CAAuC;MACtCC,QAAQ,EAAE;QAAAC,OAAA;QAAAC,OAAA;MAAA,CAA0B;MACrCC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAC,KAAK;MACf,iBAAe,EAAC,MAAM;MACtBC,MAAM,EAAC,MAAM;MACbC,WAAW,EAAC,YAAY;MACxBlC,KAAK,EAAC,eAAe;MACrBE,KAAmB,EAAnB;QAAA;MAAA;6CAEJD,mBAAA,CAES;MAFAY,OAAK,EAAAE,MAAA,IAAEJ,MAAA,CAAAwE,8BAA8B,CAAC3C,MAAM;OAAG,MAExD,iBAAA4C,WAAA,E,0CAIJhE,mBAAA,UAAa,EACFoB,MAAM,CAAC6C,YAAY,I,cAA9BhF,mBAAA,CAuDM,OAAAiF,WAAA,I,kBAtDJjF,mBAAA,CAqDMgC,SAAA,QAAAC,WAAA,CApDY3B,MAAA,CAAA4E,UAAU,CAAC/C,MAAM,CAACE,EAAE,SAA7BoC,KAAK;2BADdzE,mBAAA,CAqDM;QAnDHoC,GAAG,EAAEqC,KAAK,CAACpC,EAAE;QACd1C,KAAK,EAAC;UAENC,mBAAA,CAqCM;QArCDD,KAAK,EAAC,6BAA6B;QAAE2C,YAAU,EAAA5B,MAAA,IAAE+D,KAAK,CAAClC,QAAQ;QAAUC,YAAU,EAAA9B,MAAA,IAAE+D,KAAK,CAAClC,QAAQ;UACtG3C,mBAAA,CASM,OATNuF,WASM,GAPMV,KAAK,CAAC/B,SAAS,I,cADzB1C,mBAAA,CAOC;;QALIF,GAAG,EAAE2E,KAAK,CAAC/B,SAAS;QACrB3C,GAAG,EAAC,EAAE;QACNJ,KAAK,EAAC,eAAe;QACpBa,OAAK,EAAAE,MAAA,IAAEJ,MAAA,CAAAqC,qBAAqB,CAAC8B,KAAK,CAAC7B,MAAM;QACzC/C,KAAK,EAAE;UAAAgD,MAAA;QAAA;mFAGdjD,mBAAA,CAyBM,OAzBNwF,WAyBM,GAxBJxF,mBAAA,CAGM,OAHNyF,WAGM,GAFFzF,mBAAA,CAA6C,KAA7C0F,WAA6C,EAAArC,gBAAA,CAArBwB,KAAK,CAACvB,QAAQ,kBAC3BuB,KAAK,CAACtB,QAAQ,U,cAAzBnD,mBAAA,CAA0G,OAA1GuF,WAA0G,K,qCAE9G3F,mBAAA,CAA2C,KAA3C4F,WAA2C,EAAAvC,gBAAA,CAApBwB,KAAK,CAACnB,OAAO,kBACpC1D,mBAAA,CAkBM,OAlBN6F,WAkBM,GAjBJ7F,mBAAA,CAAwD,QAAxD8F,WAAwD,EAAAzC,gBAAA,CAA1BwB,KAAK,CAAChB,UAAU,kBAC9C1C,mBAAA,UAAa,EACbnB,mBAAA,CAOM,OAPN+F,WAOM,GANJ/F,mBAAA,CAIE;QAHAD,KAAK,EAAC,WAAW;QAChBG,GAAG,EAAE2E,KAAK,CAACd,KAAK,SAASrD,MAAA,CAAAsD,YAAY,GAAGtD,MAAA,CAAAuD,UAAU;QAClDrD,OAAK,EAAAE,MAAA,IAAEJ,MAAA,CAAAsF,cAAc,CAACnB,KAAK;4CAE9B7E,mBAAA,CAAsD,QAAtDiG,WAAsD,EAAA5C,gBAAA,CAAzBwB,KAAK,CAACT,SAAS,iB,GAE9CjD,mBAAA,UAAa,EACoC0D,KAAK,CAAClC,QAAQ,I,cAA/DvC,mBAAA,CAA4G;;QAAvGF,GAAuB,EAlEzBJ,UAAuB;QAkEGC,KAAK,EAAC,MAAM;QAAyBa,OAAK,EAAAE,MAAA,IAAG+D,KAAK,CAACH,YAAY;QAASvE,GAAG,EAAC;iFAC3E0E,KAAK,CAACH,YAAY,I,cAAhDtE,mBAAA,CAIM;;QAJDL,KAAK,EAAC,WAAW;QAA6B6C,YAAU,EAAA9B,MAAA,IAAG+D,KAAK,CAACH,YAAY;UAChF1E,mBAAA,CAEM;QAFDD,KAAK,EAAC,cAAc;QAAEa,OAAK,EAAAE,MAAA,IAAEJ,MAAA,CAAAiE,aAAa,CAACE,KAAK,CAACpC,EAAE;SAAK,MAE7D,iBAAAyD,WAAA,E,wIAKkB3D,MAAM,CAACgC,UAAU,Q,cAA3CnE,mBAAA,CASM,OATN+F,WASM,GARJ7E,YAAA,CAOwEZ,MAAA;QAN9D,cAAY,EAAEA,MAAA,CAAA0F,gBAAgB,CAAC7D,MAAM,CAACE,EAAE,EAAE4D,WAAW;0CAAvC3F,MAAA,CAAA0F,gBAAgB,CAAC7D,MAAM,CAACE,EAAE,EAAE4D,WAAW,GAAAvF,MAAA;QACrD,WAAS,EAAEJ,MAAA,CAAA0F,gBAAgB,CAAC7D,MAAM,CAACE,EAAE,EAAE6D,QAAQ;uCAApC5F,MAAA,CAAA0F,gBAAgB,CAAC7D,MAAM,CAACE,EAAE,EAAE6D,QAAQ,GAAAxF,MAAA;QACtDyF,KAAK,EAAE3B,IAAA,CAAA2B,KAAK;QACbC,MAAM,EAAC,mBAAmB;QACzB,aAAW,EAAE9F,MAAA,CAAA0F,gBAAgB,CAAC7D,MAAM,CAACE,EAAE,EAAEgE,SAAS;QAClD,YAAU,EAAE/F,MAAA,CAAA0F,gBAAgB,CAAC7D,MAAM,CAACE,EAAE,EAAEgE,SAAS;QACjDC,eAAc,EAAEC,OAAO,IAAIjG,MAAA,CAAAkG,mBAAmB,CAACrE,MAAM,CAACE,EAAE,EAAEkE,OAAO;;;mEAtHjCjG,MAAA,CAAAmG,IAAI,E,OA8H1CnG,MAAA,CAAAoG,cAAc,I,cAAzB1G,mBAAA,CAEM,OAAA2G,WAAA,GADJzF,YAAA,CAAsFZ,MAAA;gBAA5DA,MAAA,CAAAoG,cAAc;+DAAdpG,MAAA,CAAAoG,cAAc,GAAAhG,MAAA;IAAG2B,EAAE,EAAE/B,MAAA,CAAAsG,MAAM;IAAGlF,IAAI,EAAEpB,MAAA,CAAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}