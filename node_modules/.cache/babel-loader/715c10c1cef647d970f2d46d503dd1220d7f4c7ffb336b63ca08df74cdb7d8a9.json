{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from '@/utils/request';\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\nimport { openUrl } from '@/utils/routeJudge';\nexport default {\n  __name: 'QASquare',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const currentPage = ref(1);\n    const router = useRouter();\n    const recommendedAnswererList = ref([]);\n    const userId = localStorage.getItem(\"userId\");\n\n    //点击进入答主信息展示页面\n    const goToConsult = id => {\n      // const routeLocation = router.resolve({ path: `/DefaultPresentation/AnswererBrief/${id}`});\n      // window.open(routeLocation.href, '_blank');\n      // const routeLocation = router.resolve({ path: `/DefaultPresentation/AnswererBrief/${id}` });\n      // window.open(routeLocation.href, '_blank');\n      openUrl(`/DefaultPresentation/AnswererBrief/${id}`);\n    };\n\n    //点击用户头像进行跳转到个人主页\n    const navigateToUserProfile = user_id => {\n      console.log('点击用户头像跳转');\n      if (user_id == userId) {\n        // const routeLocation = router.resolve({ path: '/PersonalPage' });\n        // window.open(routeLocation.href, '_blank');\n        openUrl('/PersonalPage');\n      } else {\n        // const routeLocation = router.resolve({ path: `/OtherUserPersonalPage/${user_id}`});\n        // window.open(routeLocation.href, '_blank');\n        openUrl(`/OtherUserPersonalPage/${user_id}`);\n      }\n    };\n\n    //判断哦评价展示的星星数量\n    const getStarCount1 = grade => {\n      const result = Math.floor(grade);\n      return result;\n    };\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getRecommendedAnswerer(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n\n    //获取推荐答主列表\n    async function getRecommendedAnswerer(currentPage) {\n      try {\n        const response = await axios.get(`/answer/answerer`, {\n          params: {\n            page: currentPage,\n            pageSize: 10\n          }\n        });\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\n          const updates = response.data.data.records.map(async record => {\n            const verified = await fetchUserInformation(record.userId);\n            const newAvater = await getUsersAvatarFromCOS(record.userId);\n            const commentGrade = ref();\n            if (record.answerCount != 0) {\n              commentGrade.value = (record.cumGrade / record.answerCount).toFixed(1);\n            } else {\n              commentGrade.value = 0;\n            }\n            const sliceanswererInfo = record.answererInfo.slice(0, 15);\n            return {\n              ...record,\n              verified,\n              newAvater,\n              commentGrade,\n              sliceanswererInfo\n            };\n          });\n          const updatedRecords = await Promise.all(updates);\n          recommendedAnswererList.value = [...recommendedAnswererList.value, ...updatedRecords];\n          // ElMessage.success('获取推荐答主列表成功');\n        } else if (response.data.code === 1 && response.data.data.records.length === 0) {\n          // ElMessage.info('已加载所有数据');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取推荐答主列表失败\");\n          ElMessage.error('获取推荐答主列表失败');\n        }\n      } catch (error) {\n        console.error(\"获取推荐答主列表失败\", error);\n        ElMessage.error('获取推荐答主列表失败');\n      }\n    }\n\n    // 获取用户信息\n    const fetchUserInformation = async userId => {\n      try {\n        const response = await axios.get(`/users/${userId}`);\n        if (response.data.code === 1) {\n          return response.data.data.verified;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取用户信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户信息失败\", error);\n        ElMessage.error('获取用户信息失败');\n      }\n    };\n    onMounted(() => {\n      getRecommendedAnswerer(currentPage.value);\n    });\n    const __returned__ = {\n      currentPage,\n      router,\n      recommendedAnswererList,\n      userId,\n      goToConsult,\n      navigateToUserProfile,\n      getStarCount1,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getRecommendedAnswerer,\n      fetchUserInformation,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      },\n      get getUsersAvatarFromCOS() {\n        return getUsersAvatarFromCOS;\n      },\n      get openUrl() {\n        return openUrl;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","ElMessage","axios","getUsersAvatarFromCOS","openUrl","currentPage","router","recommendedAnswererList","userId","localStorage","getItem","goToConsult","id","navigateToUserProfile","user_id","console","log","getStarCount1","grade","result","Math","floor","isLoading","load","value","getRecommendedAnswerer","error","response","get","params","page","pageSize","data","code","records","length","updates","map","record","verified","fetchUserInformation","newAvater","commentGrade","answerCount","cumGrade","toFixed","sliceanswererInfo","answererInfo","slice","updatedRecords","Promise","all","msg","toString"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/QACenter/SquareQuestion/QASquare.vue"],"sourcesContent":["<template>\r\n    <!-- <div class=\"part_1\">\r\n        <span class=\"toptext\">推荐答主</span>\r\n    </div> -->\r\n    <div class=\"part_2\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n        <div v-for=\"(source,index) in recommendedAnswererList\" :key=\"index\" class=\"item\">\r\n            <div class=\"item-left\">\r\n                <!-- 用户头像 -->\r\n                <div class=\"authorpic\">\r\n                    <img :src=\"source.newAvater\"  @click=\"navigateToUserProfile(source.userId)\" alt=\"\">\r\n                </div>\r\n                <!-- 用户名称+咨询信息 -->\r\n                <div class=\"info\">\r\n                    <div style=\"display: flex;align-items: center;gap: 3px;\">\r\n                        <span>{{ source.username }}</span>\r\n                        <img  v-if=\"source.verified === 1\"  src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;\" alt=\"\">\r\n                    </div>\r\n                    <div class=\"middle\">\r\n                        <img src=\"@/assets/QACenter/QuestionMark.svg\" alt=\"\">\r\n                        <span>{{ source.answerCount }}次咨询</span>\r\n                        <div class=\"score\">\r\n                            <img v-for=\"n in getStarCount1(source.commentGrade)\" :key=\"n\" src=\"@/assets/QACenter/ScoreStar.svg\" alt=\"\">\r\n                            <span>{{ source.commentGrade }}</span>\r\n                        </div>\r\n                    </div>\r\n                    <!-- 回答领域 -->\r\n                    <div class=\"field\">\r\n                        {{ source.answererInfo }}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- *鱼饵 起 咨询 -->\r\n            <div class=\"consult_btn\"  @click=\"goToConsult(source.userId)\">\r\n                <div style=\"display:flex; align-items: center; gap:5px;\">\r\n                    <img src=\"@/assets/QACenter/FishPoint.svg\" alt=\"\">\r\n                    <!-- <span class=\"text1 recommend\">推荐：</span>\r\n                    <span class=\"text2\">{{ source.priceLow }}~{{source.priceHigh}}起</span> -->\r\n                    <span class=\"text2\">免费</span>\r\n                </div>\r\n                <span class=\"text1\">咨询</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref,onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from '@/utils/request';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport { openUrl } from '@/utils/routeJudge'\r\n\r\nconst currentPage = ref(1);\r\nconst router = useRouter()\r\nconst recommendedAnswererList = ref([]);\r\nconst userId = localStorage.getItem(\"userId\");\r\n\r\n//点击进入答主信息展示页面\r\nconst goToConsult = (id) =>{\r\n    // const routeLocation = router.resolve({ path: `/DefaultPresentation/AnswererBrief/${id}`});\r\n    // window.open(routeLocation.href, '_blank');\r\n    // const routeLocation = router.resolve({ path: `/DefaultPresentation/AnswererBrief/${id}` });\r\n    // window.open(routeLocation.href, '_blank');\r\n    openUrl(`/DefaultPresentation/AnswererBrief/${id}`)\r\n}\r\n\r\n//点击用户头像进行跳转到个人主页\r\nconst navigateToUserProfile = (user_id) => {\r\n    console.log('点击用户头像跳转');\r\n    if(user_id == userId){\r\n        // const routeLocation = router.resolve({ path: '/PersonalPage' });\r\n        // window.open(routeLocation.href, '_blank');\r\n        openUrl('/PersonalPage')\r\n    }else{\r\n        // const routeLocation = router.resolve({ path: `/OtherUserPersonalPage/${user_id}`});\r\n        // window.open(routeLocation.href, '_blank');\r\n        openUrl(`/OtherUserPersonalPage/${user_id}`)\r\n    }\r\n};\r\n\r\n//判断哦评价展示的星星数量\r\nconst getStarCount1 = (grade) =>{\r\n    const result = Math.floor(grade);\r\n    return result\r\n}\r\n\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n        if(currentPage.value === 1){\r\n            currentPage.value++;\r\n        }\r\n        await getRecommendedAnswerer(currentPage.value);\r\n        currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n//获取推荐答主列表\r\nasync function getRecommendedAnswerer(currentPage) {\r\n  try{\r\n    const response = await axios.get(`/answer/answerer`, {\r\n        params: {\r\n            page:currentPage,\r\n            pageSize:10,\r\n        }\r\n    });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n        const updates = response.data.data.records.map(async (record) => {\r\n            const verified = await fetchUserInformation(record.userId);\r\n            const newAvater = await getUsersAvatarFromCOS(record.userId);\r\n            const commentGrade = ref();\r\n            if(record.answerCount != 0){\r\n                commentGrade.value = (record.cumGrade/record.answerCount).toFixed(1);\r\n            }else{\r\n                commentGrade.value = 0;\r\n            }\r\n            const sliceanswererInfo = record.answererInfo.slice(0, 15);\r\n            return {\r\n                ...record,\r\n                verified,\r\n                newAvater,\r\n                commentGrade,\r\n                sliceanswererInfo\r\n            };\r\n        });\r\n        const updatedRecords = await Promise.all(updates);\r\n        recommendedAnswererList.value = [...recommendedAnswererList.value, ...updatedRecords];\r\n        // ElMessage.success('获取推荐答主列表成功');\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n        // ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取推荐答主列表失败\");\r\n        ElMessage.error('获取推荐答主列表失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取推荐答主列表失败\", error); \r\n    ElMessage.error('获取推荐答主列表失败');\r\n  }\r\n}\r\n\r\n\r\n// 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\nonMounted(() => {\r\n    getRecommendedAnswerer(currentPage.value);\r\n})\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.toptext{\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n}\r\n.part_2{\r\n    height: 86vh;\r\n    overflow: auto;\r\n    width: 100%;\r\n}\r\n.item{\r\n    width: 90%;\r\n    margin: 0px auto;\r\n    padding: 20px 0px;\r\n    border-bottom: 1px solid #EEE;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n.item-left{\r\n    display: flex;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n    width: 70%;\r\n}\r\n.authorpic img{\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 50%;\r\n    margin-bottom: 35px;\r\n    cursor: pointer;\r\n}\r\n.info{\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 7px;\r\n}\r\n.info span{\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    line-height: 1.6;\r\n}\r\n.middle{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n}\r\n.middle img{\r\n    width: 12px;\r\n    height: 12px;\r\n}\r\n.middle span{\r\n    color: #7E7E7E;\r\n    font-size: 12px;\r\n}\r\n.score{\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.score img{\r\n    width: 16px;\r\n    height: 16px;\r\n}\r\n.score span{\r\n    color: #FACB25;\r\n    font-size: 12px;\r\n}\r\n.field{\r\n    width: 710px;\r\n    color: #000;\r\n    font-size: 14px;\r\n    line-height: 1.6;\r\n}\r\n.consult_btn{\r\n    height: 17px;\r\n    display: flex;\r\n    padding: 8px 12px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    border-radius: 8px;\r\n    background: #9ba5c7;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n}\r\n.consult_btn img{\r\n    width: 12px;\r\n    height: 12px;\r\n}\r\n.text1{\r\n    color: #46639D;\r\n    font-size: 14px;\r\n    line-height: 1.6;\r\n}\r\n.text2{\r\n    color: #FFF;\r\n    font-size: 14px;\r\n    line-height: 1.6; \r\n}\r\n/* 对手机屏幕和小尺寸屏幕的样式调整 */\r\n@media (max-width: 768px) {\r\n    .item{\r\n        padding: 1.5rem 0.5rem;\r\n        flex-direction: column;\r\n        align-items: flex-end;\r\n        gap: 1rem;\r\n    }\r\n    .item-left{\r\n        width: 100%;\r\n        gap: 0.8rem;\r\n    }\r\n    .authorpic img{\r\n        width: 2.5rem;\r\n        height: 2.5rem;\r\n    }\r\n    .info{\r\n        width: 27%;\r\n        gap: 0.6rem;\r\n    }\r\n    .consult_btn{\r\n        margin-right: 0px;\r\n    }\r\n    .middle,\r\n    .field{\r\n        width: 300%;\r\n    }\r\n    .recommend{\r\n        display: none;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}