{"ast":null,"code":"import { onMounted, ref, watch } from 'vue';\nimport axios from '@/utils/request';\nimport { convertDateFormat } from '@/utils/timeFormat';\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'LikeNotice',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const currentPage = ref(1);\n    const likeNotification = ref([]);\n    const checked1 = ref(true);\n    const checked2 = ref(true);\n    const checked3 = ref(true);\n    const checkboxes = [checked1, checked2, checked3];\n\n    // 这里的代码会在`checkboxes`变化时重新运行\n    checkboxes.forEach(checkbox => {\n      watch(checkbox, () => {\n        currentPage.value = 1; // 重置页码\n        likeNotification.value.splice(0, likeNotification.value.length);\n        getLikeNote(currentPage.value);\n      });\n    });\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getLikeNote(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n    async function getLikeNote(currentPage) {\n      try {\n        const response = await axios.get('/notice/like', {\n          params: {\n            page: currentPage,\n            pageSize: 10\n          }\n        });\n        if (response.data.data.records) {\n          let updatedRecords = response.data.data.records;\n          const filteredRecords = updatedRecords.filter(record => {\n            if (checked1.value && record.type === 2) return true;\n            if (checked2.value && record.type === 3) return true;\n            if (checked3.value && (record.type === 0 || record.type === 1)) return true;\n            return false;\n          });\n          const processedRecords = await Promise.all(filteredRecords.map(async record => {\n            record.createTime = convertDateFormat(record.createTime);\n            record.newAvatar = await getUsersAvatarFromCOS(record.userId);\n            record.verified = await fetchUserInformation(record.userId);\n            return record;\n          }));\n          likeNotification.value = [...likeNotification.value, ...processedRecords];\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else error => {\n          console.log(error);\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    // 获取用户信息\n    const fetchUserInformation = async userId => {\n      try {\n        const response = await axios.get(`/users/${userId}`);\n        if (response.data.code === 1) {\n          return response.data.data.verified;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          ElMessage.error('获取用户信息失败');\n        }\n      } catch (error) {\n        console.error(\"获取用户信息失败\", error);\n        ElMessage.error('获取用户信息失败');\n      }\n    };\n    onMounted(() => {\n      getLikeNote(currentPage.value);\n    });\n    const __returned__ = {\n      currentPage,\n      likeNotification,\n      checked1,\n      checked2,\n      checked3,\n      checkboxes,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getLikeNote,\n      fetchUserInformation,\n      onMounted,\n      ref,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get convertDateFormat() {\n        return convertDateFormat;\n      },\n      get getUsersAvatarFromCOS() {\n        return getUsersAvatarFromCOS;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","watch","axios","convertDateFormat","getUsersAvatarFromCOS","ElMessage","currentPage","likeNotification","checked1","checked2","checked3","checkboxes","forEach","checkbox","value","splice","length","getLikeNote","isLoading","load","error","console","response","get","params","page","pageSize","data","records","updatedRecords","filteredRecords","filter","record","type","processedRecords","Promise","all","map","createTime","newAvatar","userId","verified","fetchUserInformation","code","msg","toString","log"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/MessageCenter/component/LikeMessage/LikeNotice.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"first\">\r\n            <div class=\"one\">\r\n                <img src=\"@/assets/LikeBefore.svg\" alt=\"\">\r\n                <span>点赞我的</span>\r\n            </div>\r\n            <div>\r\n                <el-checkbox v-model=\"checked1\" label=\"文章点赞\" size=\"large\" @change=\"change\"/>\r\n                <el-checkbox v-model=\"checked2\" label=\"分享点赞\" size=\"large\" @change=\"change\"/>\r\n                <el-checkbox v-model=\"checked3\" label=\"评论点赞\" size=\"large\" @change=\"change\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"then\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n            <div v-for=\"(source,index) in likeNotification\" :key=\"index\" class=\"box\">\r\n                <div v-if=\"source.type === 0 || source.type === 1\" class=\"large\">\r\n                    <img :src=source.newAvatar alt=\"\" class=\"cover\">\r\n                    <div style=\"display: flex;flex-direction: column;\">\r\n                        <div class=\"text\">\r\n                            <div style=\"display: flex;align-items: center;\">\r\n                                <div style=\"display: flex;align-items: center;\">\r\n                                    <span class=\"name\">{{ source.username }}</span>\r\n                                    <img  v-if=\"source.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin-left: -9px;margin-right: 10px;\" alt=\"\">\r\n                                </div>\r\n                                <span class=\"middle\">赞了我的在</span>\r\n                                <span class=\"name\">{{ source.workTitle }}</span>\r\n                                <span class=\"middle\">中的评论：</span>\r\n                            </div>\r\n                            <span class=\"time\">{{ source.createTime }}</span>\r\n                        </div>\r\n                        <div class=\"comment-content\">\r\n                            <span>\r\n                                {{ source.commentContent }}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div v-if=\"source.type === 2\" class=\"large\">\r\n                    <img :src=source.newAvatar alt=\"\" class=\"cover\">\r\n                    <div class=\"text\">\r\n                        <div style=\"display: flex;align-items: center;\">\r\n                            <div style=\"display: flex;align-items: center;\">\r\n                                <span class=\"name\">{{ source.username }}</span>\r\n                                <img  v-if=\"source.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin-left: -9px;margin-right: 10px;\" alt=\"\">\r\n                            </div>\r\n                            <span class=\"middle\">赞了我的 文章</span>\r\n                            <span class=\"name\">{{ source.workTitle }}</span>\r\n                        </div>\r\n                        <span class=\"time\">{{ source.createTime }}</span>\r\n                    </div>\r\n                </div>\r\n                <div v-if=\"source.type === 3\" class=\"large\">\r\n                    <img :src=source.newAvatar alt=\"\" class=\"cover\">\r\n                    <div class=\"text\">\r\n                        <div style=\"display: flex;align-items: center;\">\r\n                            <div style=\"display: flex;align-items: center;;\">\r\n                                <span class=\"name\">{{ source.username }}</span>\r\n                                <img  v-if=\"source.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin-left: -9px;margin-right: 10px;\" alt=\"\">\r\n                            </div>\r\n                            <span class=\"middle\">赞了我的 分享</span>\r\n                            <span class=\"name\">{{ source.workTitle }}</span>\r\n                        </div>\r\n                        <span class=\"time\">{{ source.createTime }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <el-empty \r\n                v-if=\"!likeNotification || likeNotification.length === 0\" \r\n                :image-size=\"200\" \r\n                description=\"您暂时还没有收到点赞消息呢！\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted,ref,watch } from 'vue';\r\nimport axios from '@/utils/request'\r\nimport { convertDateFormat } from '@/utils/timeFormat';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nconst currentPage = ref(1);\r\nconst likeNotification = ref([]);\r\nconst checked1 = ref(true)\r\nconst checked2 = ref(true)\r\nconst checked3 = ref(true)\r\nconst checkboxes = [checked1, checked2, checked3];\r\n\r\n// 这里的代码会在`checkboxes`变化时重新运行\r\ncheckboxes.forEach(checkbox => {\r\n    watch(checkbox, () => {\r\n        currentPage.value = 1; // 重置页码\r\n        likeNotification.value.splice(0, likeNotification.value.length);\r\n        getLikeNote(currentPage.value);\r\n    });\r\n});\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n        if(currentPage.value === 1){\r\n            currentPage.value++;\r\n        }\r\n        await getLikeNote(currentPage.value);\r\n        currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\nasync function getLikeNote(currentPage) {\r\n    try {\r\n        const response = await axios.get('/notice/like', {\r\n            params: {\r\n                page:currentPage,\r\n                pageSize:10,\r\n            }\r\n        });\r\n        if(response.data.data.records){\r\n            let updatedRecords = response.data.data.records;\r\n            const filteredRecords = updatedRecords.filter(record => {\r\n                if (checked1.value && record.type === 2) return true;\r\n                if (checked2.value && record.type === 3) return true;\r\n                if (checked3.value && (record.type === 0 || record.type === 1)) return true;\r\n                return false;\r\n            });\r\n            const processedRecords = await Promise.all(filteredRecords.map(async (record) => {\r\n                record.createTime = convertDateFormat(record.createTime);\r\n                record.newAvatar = await getUsersAvatarFromCOS(record.userId);\r\n                record.verified = await fetchUserInformation(record.userId);\r\n                return record;\r\n            }));\r\n            likeNotification.value = [...likeNotification.value, ...processedRecords];\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else(error)=>{\r\n            console.log(error);\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n    // 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\n\r\nonMounted(()=>{\r\n    getLikeNote(currentPage.value);\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.first{\r\n    width: 77vw;\r\n    padding: 12px 12px 0px; \r\n    justify-content: center; \r\n    gap: 12px;\r\n    border-radius: 8px;\r\n    border: 2px solid #F0F0F0;\r\n    background: #FFF;\r\n    margin-top: 50px;\r\n}\r\n.one{\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n}\r\n.one img{\r\n    width: 20px;\r\n    height: 20px;\r\n    align-items: center;\r\n}\r\n.one span{\r\n    color: #6B757B;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    line-height: 1.6; \r\n    margin-left: 8px;\r\n}\r\n.then{\r\n    width: 77vw;\r\n    height: 72vh;\r\n    overflow-y: scroll;\r\n    padding: 12px 12px 0px;\r\n    border-radius: 8px;\r\n    border: 2px solid #F0F0F0;\r\n    margin-top: 12px;\r\n}\r\n.box{\r\n    width: 95%;\r\n    margin: 0px auto;\r\n    border-bottom:1px solid #e7e7e7;\r\n    margin-bottom: 10px;\r\n    padding-left: 5px;\r\n}\r\n.title{\r\n    color: #000;\r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 120%; \r\n}\r\n/* .cover1{\r\n    margin-bottom: 15px;\r\n}\r\n.cover1, */\r\n.cover{\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 100%;\r\n}\r\n.name{\r\n    color: #000;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    line-height: 260%; \r\n    margin: 0 10px;\r\n}\r\n.middle{\r\n    color: #505050;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    line-height: 260%; \r\n}\r\n.text{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n.time{\r\n    color: #A1A1A1;\r\n    font-size: 12px;\r\n    line-height: 1.6;\r\n    position: absolute;\r\n    right: 0px;\r\n    top: 15px;\r\n}\r\n.comment-content{\r\n    font-size: 14px;\r\n    width: 790px;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    line-height: 1.6;\r\n}\r\n.aritle{\r\n    width: 70px;\r\n    height: 70px;\r\n    position: absolute;\r\n    right: 36px;\r\n    bottom: 10px;\r\n    top: 10px;\r\n}\r\n.large{\r\n    display: flex;\r\n    align-items: center;\r\n    width: 98%;\r\n    gap: 5px;\r\n    min-height: 100px;\r\n    position: relative;\r\n}\r\n.number{\r\n    color: #9FA9CA;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    line-height: 120%;\r\n}\r\n.content{\r\n    color: #505050;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 120%; /* 16.8px */\r\n}\r\n::v-deep .el-checkbox.el-checkbox--large{\r\n    width: 80px;\r\n}\r\n@media (max-width: 768px) {\r\n    .first,\r\n    .then{\r\n        width: 800px;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}