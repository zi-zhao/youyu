{"ast":null,"code":"import { resolveComponent as _resolveComponent, withModifiers as _withModifiers, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-c8f50526\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"video\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_video_player = _resolveComponent(\"video-player\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_video_player, {\n    class: \"video-player vjs-big-play-centered\",\n    ref: $setup.player,\n    sources: $setup.props.sources,\n    poster: $setup.props.sources[0].poster,\n    crossorigin: \"anonymous\",\n    playsinline: \"\",\n    controls: \"\",\n    volume: 0.6,\n    height: 320,\n    \"playback-rates\": [0.7, 1.0, 1.5, 2.0, 2.5],\n    onMounted: _ctx.handleMounted,\n    onReady: _cache[0] || (_cache[0] = $event => _ctx.handleEvent($event)),\n    onPlay: _cache[1] || (_cache[1] = $event => _ctx.handleEvent($event)),\n    onPause: _cache[2] || (_cache[2] = $event => _ctx.handleEvent($event)),\n    onEnded: _cache[3] || (_cache[3] = $event => _ctx.handleEvent($event)),\n    onLoadeddata: _cache[4] || (_cache[4] = $event => _ctx.handleEvent($event)),\n    onWaiting: _cache[5] || (_cache[5] = $event => _ctx.handleEvent($event)),\n    onPlaying: _cache[6] || (_cache[6] = $event => _ctx.handleEvent($event)),\n    onCanplay: _cache[7] || (_cache[7] = $event => _ctx.handleEvent($event)),\n    onCanplaythrough: _cache[8] || (_cache[8] = $event => _ctx.handleEvent($event)),\n    onTimeupdate: _cache[9] || (_cache[9] = $event => _ctx.handleEvent($setup.player?.currentTime())),\n    onContextmenu: _cache[10] || (_cache[10] = _withModifiers(() => {}, [\"prevent\"]))\n  }, null, 8 /* PROPS */, [\"sources\", \"poster\", \"onMounted\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_video_player","ref","$setup","player","sources","props","poster","crossorigin","playsinline","controls","volume","height","onMounted","_ctx","handleMounted","onReady","_cache","$event","handleEvent","onPlay","onPause","onEnded","onLoadeddata","onWaiting","onPlaying","onCanplay","onCanplaythrough","onTimeupdate","currentTime","onContextmenu","_withModifiers"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\components\\VideoPlay.vue"],"sourcesContent":["<template>\r\n  <div class=\"video\">\r\n    <video-player\r\n      class=\"video-player vjs-big-play-centered\"\r\n      :ref=\"player\"\r\n      :sources=\"props.sources\"\r\n      :poster=\"props.sources[0].poster\"\r\n      crossorigin=\"anonymous\"\r\n      playsinline\r\n      controls\r\n      :volume=\"0.6\"        \r\n      :height=\"320\"      \r\n      :playback-rates=\"[0.7, 1.0, 1.5, 2.0, 2.5]\"        \r\n      @mounted=\"handleMounted\"\r\n      @ready=\"handleEvent($event)\"\r\n      @play=\"handleEvent($event)\"\r\n      @pause=\"handleEvent($event)\"\r\n      @ended=\"handleEvent($event)\"\r\n      @loadeddata=\"handleEvent($event)\"\r\n      @waiting=\"handleEvent($event)\"\r\n      @playing=\"handleEvent($event)\"\r\n      @canplay=\"handleEvent($event)\"\r\n      @canplaythrough=\"handleEvent($event)\"\r\n      @timeupdate=\"handleEvent(player?.currentTime())\"\r\n      @contextmenu.prevent\r\n  />\r\n  </div>\r\n</template>\r\n  \r\n<script setup>\r\n// id: 播放器的唯一标识符。类型为字符串。\r\n// src: 视频的URL。类型为字符串，支持响应式布局。\r\n// sources: 视频源数组。允许指定多种格式的视频源。类型为数组，支持响应式布局。\r\n// width/height: 播放器的宽度和高度。类型为数字，支持响应式布局。\r\n// preload: 指定视频预加载的方式。类型为字符串。\r\n// loop: 是否循环播放视频。类型为布尔值。\r\n// muted: 是否静音播放。类型为布尔值。\r\n// poster: 视频的封面图URL。类型为字符串。\r\n// controls: 是否显示播放器控制条。类型为布尔值。\r\n// autoplay: 是否自动播放视频。类型为布尔值或字符串，支持响应式布局。\r\n// playsinline: 在某些设备上，视频是否应该内联播放（而不是全屏）。类型为布尔值。\r\n// crossorigin: 设置跨源资源共享(CORS)。类型为字符串。\r\n// volume: 控制播放器的音量，介于0（静音）到1（最大音量）之间。类型为数字。\r\n// playbackRate: 控制播放速率。类型为数字。\r\n// playbackRates: 可选的播放速率数组。类型为数字数组。\r\n// fluid: 是否使用流体布局，自适应父容器大小。类型为布尔值。\r\n// language: 播放器的语言设置。类型为字符串。\r\n// tracks: 视频字幕轨道设置。类型为数组。\r\n// responsive: 是否支持响应式布局。类型为布尔值。\r\nimport { defineProps,watch,ref} from 'vue'\r\n\r\nconst props = defineProps({\r\n  poster: String, // 视频封面图片 URL\r\n  sources: Array,  // 视频源信息，支持多种格式\r\n  autoplay: Boolean,  // 是否自动播放视频\r\n  isLive:Boolean,\r\n});\r\n\r\nconst player = ref(null);\r\nconst videoElement = player.value; // 获取到视频元素\r\n\r\nconsole.log(props.sources);\r\n// watch(() => props.sources, (newSources, oldSources) => {\r\n//   if (newSources[0].src !== oldSources[0].src) {\r\n//     resetPlayer();\r\n//   }\r\n// }, { deep: true });\r\n\r\n// const resetPlayer = () => {\r\n//   if (player.value) {\r\n//     player.value.pause();\r\n//     player.value.currentTime = 0;  // 重置时间滚动条到开始位置\r\n//     player.value.load(); // 为了确保新的视频源加载\r\n//   }\r\n// };\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.video-player {\r\n  background-color: black;\r\n  width: 100%;\r\n  height: 70vh;\r\n}\r\n@media (max-width:768px){\r\n  .video-player {\r\n    height: 35vh;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAO;;;uBAAlBC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,YAAA,CAuBAC,uBAAA;IAtBEJ,KAAK,EAAC,oCAAoC;IACzCK,GAAG,EAAEC,MAAA,CAAAC,MAAM;IACXC,OAAO,EAAEF,MAAA,CAAAG,KAAK,CAACD,OAAO;IACtBE,MAAM,EAAEJ,MAAA,CAAAG,KAAK,CAACD,OAAO,IAAIE,MAAM;IAChCC,WAAW,EAAC,WAAW;IACvBC,WAAW,EAAX,EAAW;IACXC,QAAQ,EAAR,EAAQ;IACPC,MAAM,EAAE,GAAG;IACXC,MAAM,EAAE,GAAG;IACX,gBAAc,EAAE,yBAAyB;IACzCC,SAAO,EAAEC,IAAA,CAAAC,aAAa;IACtBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,WAAW,CAACD,MAAM;IACzBE,MAAI,EAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,WAAW,CAACD,MAAM;IACxBG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,WAAW,CAACD,MAAM;IACzBI,OAAK,EAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,WAAW,CAACD,MAAM;IACzBK,YAAU,EAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,WAAW,CAACD,MAAM;IAC9BM,SAAO,EAAAP,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,WAAW,CAACD,MAAM;IAC3BO,SAAO,EAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,WAAW,CAACD,MAAM;IAC3BQ,SAAO,EAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,WAAW,CAACD,MAAM;IAC3BS,gBAAc,EAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,WAAW,CAACD,MAAM;IAClCU,YAAU,EAAAX,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,WAAW,CAAChB,MAAA,CAAAC,MAAM,EAAEyB,WAAW;IAC3CC,aAAW,EAAAb,MAAA,SAAAA,MAAA,OAAAc,cAAA,CAAZ,QAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}