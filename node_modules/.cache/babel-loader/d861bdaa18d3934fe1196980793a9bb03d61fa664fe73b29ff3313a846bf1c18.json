{"ast":null,"code":"import '@wangeditor/editor/dist/css/style.css'; // 引入 css\nimport { onBeforeUnmount, ref, onMounted, shallowRef, watch, reactive, toRaw } from 'vue';\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue';\nimport { Boot } from '@wangeditor/editor';\nimport { useStore } from 'vuex';\nimport axios from '@/utils/request';\nimport ToSubmit from './components/ToSubmit.vue';\nimport PictureAndAttachment from './PictureAndAttachment.vue';\nimport formulaModule from '@wangeditor/plugin-formula';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { useRoute, useRouter } from 'vue-router';\nimport { compressImage } from '@/utils/fileService';\nimport { getArticleContentPermission } from '@/utils/cosService';\nexport default {\n  __name: 'WangEditor',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const title = ref(''); //存放文章标题\n    const store = useStore();\n    const article = ref(''); //存放文章数据\n    const valueHtml = ref('');\n    const articleId = parseInt(route.params.id, 10); //路径中的文章ID\n    const submitState = ref('1');\n\n    // 注册。要在创建编辑器之前注册，且只能注册一次，不可重复注册。\n    if (!store.getters.hasRegisteredMenu) {\n      Boot.registerModule(formulaModule);\n      store.dispatch('registerMenu');\n    }\n\n    // 编辑器实例，使用 shallowRef\n    const editorRef = shallowRef();\n    const handleCreated = editor => {\n      editorRef.value = editor; // 记录 editor 实例\n    };\n\n    // 设置弹出框相关参数\n    const toolbarConfig = {\n      insertKeys: {\n        index: 34,\n        // 插入的位置，基于当前的 toolbarKeys\n        keys: ['insertFormula']\n      }\n    };\n    const editorConfig = {\n      placeholder: '请输入内容...',\n      MENU_CONF: {\n        uploadImage: {\n          async customUpload(file, insertFn) {\n            const articleId = localStorage.getItem(\"articleId\"); // 获取文章ID\n            const timestamp = new Date().getTime(); // 获取当前时间戳\n            const filePictureName = `${timestamp}-${file.name}`; // 在文件名前加时间戳\n            const compressedFile = await compressImage(file);\n            const url = await getArticleContentPermission(compressedFile, articleId, filePictureName);\n            insertFn(url);\n          }\n        }\n      },\n      hoverbarKeys: {\n        formula: {\n          menuKeys: ['editFormula'] // “编辑公式”菜单\n        }\n      }\n    };\n\n    // 组件销毁时，也及时销毁编辑器\n    onBeforeUnmount(() => {\n      const editor = editorRef.value;\n      if (editor == null) return;\n      editor.destroy();\n    });\n\n    //获取文章内容\n    async function fetchArticleContent(id) {\n      try {\n        const response = await axios.get(`/article/${id}`);\n        if (response.data.code === 1) {\n          article.value = response.data.data;\n          title.value = article.value.title;\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('无法找到匹配文章数据', response.data.msg || 'Unknown error');\n          ElMessage.error('无法找到匹配文章数据');\n        }\n      } catch (error) {\n        console.error('无法获取接口数据', error.message);\n        ElMessage.error('无法找到匹配文章数据');\n      }\n    }\n\n    /**\r\n     * 这里定义了一些目录相关的参数\r\n     * 以及目录关闭时调用的方法\r\n     * 以及，你也想哈哈吗\r\n     */\n    const drawer = ref(false);\n    const direction = ref('rtl');\n    const menuList = ref([]);\n    const handleClose = done => {\n      ElMessageBox.confirm('哈哈，你也想关目录吗').then(() => {\n        done();\n      }).catch(() => {});\n    };\n    const handlerMenu = () => {\n      let content = document.querySelector(\".content\");\n      let els = content.querySelectorAll(\"h1,h2,h3,h4,h5,h6\");\n      let menus = [];\n      if (els) {\n        els.forEach((item, index) => {\n          let menu = {};\n          menu.isActive = null;\n          menu.title = item.innerText;\n          menu.scrollTop = item.offsetTop;\n          let level = item.tagName.toLowerCase().replace(\"h\", \"\");\n          menu.level = parseInt(level);\n          item.setAttribute(\"id\", `menus_${index + 1}`);\n          menu.id = `#menus_${index + 1}`;\n          menus.push(menu);\n        });\n      }\n      menuList.value = menus;\n    };\n    const scrollTo = id => {\n      const element = document.querySelector(id);\n      if (element !== 0) {\n        element.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    };\n\n    //发表文章的提示弹框\n    const postArticlePost = async () => {\n      try {\n        await ElMessageBox.confirm('确定要发表文章吗（请确认已经填写了所有文章的相关信息，否则无法通过审核）？', {\n          confirmButtonText: '确认发表',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        await postArticle();\n      } catch {\n        console.log('关闭弹框');\n      }\n    };\n    function checkProperties(...objects) {\n      for (let obj of objects) {\n        for (let key in obj) {\n          if (obj[key] === null || obj[key] === undefined || obj[key] === '') {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    //提交文章的接口\n    async function postArticle() {\n      let articleCon = reactive({\n        get title() {\n          return title.value;\n        },\n        get content() {\n          return valueHtml.value;\n        }\n      });\n      const first = ref({\n        id: articleId,\n        editorType: 0 //富文本编辑器\n      });\n      const submitData = toRaw(store.state.submitDate);\n      const isValid = checkProperties(submitData, first.value, articleCon);\n      if (isValid) {\n        ElMessage.error('未填写所有信息');\n        return;\n      }\n      const data = {\n        ...submitData,\n        ...first.value,\n        ...articleCon\n      };\n      try {\n        const response = await axios.post('/article', data); //发表文章接口\n        if (response.data.code === 1) {\n          ElMessage.success('发表文章成功');\n          submitState.value = '2';\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else ElMessage.error('发表文章失败');\n      } catch (error) {\n        console.log(error);\n        ElMessage.error('发表文章失败');\n      }\n    }\n    watch(valueHtml, () => {\n      handlerMenu();\n    });\n    onMounted(async () => {\n      await fetchArticleContent(articleId);\n      valueHtml.value = article.value.content; // 更新编辑器内容\n      handlerMenu();\n    });\n    const __returned__ = {\n      route,\n      router,\n      title,\n      store,\n      article,\n      valueHtml,\n      articleId,\n      submitState,\n      editorRef,\n      handleCreated,\n      toolbarConfig,\n      editorConfig,\n      fetchArticleContent,\n      drawer,\n      direction,\n      menuList,\n      handleClose,\n      handlerMenu,\n      scrollTo,\n      postArticlePost,\n      checkProperties,\n      postArticle,\n      onBeforeUnmount,\n      ref,\n      onMounted,\n      shallowRef,\n      watch,\n      reactive,\n      toRaw,\n      get Editor() {\n        return Editor;\n      },\n      get Toolbar() {\n        return Toolbar;\n      },\n      get Boot() {\n        return Boot;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get axios() {\n        return axios;\n      },\n      ToSubmit,\n      PictureAndAttachment,\n      get formulaModule() {\n        return formulaModule;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get compressImage() {\n        return compressImage;\n      },\n      get getArticleContentPermission() {\n        return getArticleContentPermission;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onBeforeUnmount","ref","onMounted","shallowRef","watch","reactive","toRaw","Editor","Toolbar","Boot","useStore","axios","ToSubmit","PictureAndAttachment","formulaModule","ElMessage","ElMessageBox","useRoute","useRouter","compressImage","getArticleContentPermission","route","router","title","store","article","valueHtml","articleId","parseInt","params","id","submitState","getters","hasRegisteredMenu","registerModule","dispatch","editorRef","handleCreated","editor","value","toolbarConfig","insertKeys","index","keys","editorConfig","placeholder","MENU_CONF","uploadImage","customUpload","file","insertFn","localStorage","getItem","timestamp","Date","getTime","filePictureName","name","compressedFile","url","hoverbarKeys","formula","menuKeys","destroy","fetchArticleContent","response","get","data","code","msg","error","toString","console","message","drawer","direction","menuList","handleClose","done","confirm","then","catch","handlerMenu","content","document","querySelector","els","querySelectorAll","menus","forEach","item","menu","isActive","innerText","scrollTop","offsetTop","level","tagName","toLowerCase","replace","setAttribute","push","scrollTo","element","scrollIntoView","behavior","postArticlePost","confirmButtonText","cancelButtonText","type","postArticle","log","checkProperties","objects","obj","key","undefined","articleCon","first","editorType","submitData","state","submitDate","isValid","post","success"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/CreateCenter/components/WorkManagement/TheAuditEditor/WangEditor.vue"],"sourcesContent":["<template>\r\n  <div class=\"body_bgc\">\r\n    <div class=\"large\">\r\n      <div style=\"  border-radius: 4px; box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.25);\">\r\n        <Toolbar\r\n          style=\"border-bottom: 1px solid #ccc;width: 1100px;\"\r\n          :editor=\"editorRef\"\r\n          :defaultConfig=\"toolbarConfig\"\r\n          :mode=\"mode\"\r\n        />\r\n        <div class=\"header\">\r\n          <input type=\"text\" placeholder=\"请输入文章标题\" class=\"title\" v-model=\"title\">\r\n        </div>\r\n        <div style=\"background-color: #fff;\">\r\n          <Editor\r\n            style=\"height: 500px; overflow-y: hidden;width: 1020px;margin-top: 0px;padding: 0px 40px;\"\r\n            v-model=\"valueHtml\"\r\n            v-add\r\n            :defaultConfig=\"editorConfig\"\r\n            :mode=\"mode\"\r\n            @onCreated=\"handleCreated\"\r\n            class=\"content\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"drawer-btn\">\r\n      <el-button   \r\n        class=\"top-right-button\" \r\n        type=\"primary\" \r\n        @click=\"drawer = true\">\r\n        <el-icon><DArrowLeft /></el-icon>\r\n      </el-button>\r\n    </div>\r\n    <el-drawer\r\n      v-model=\"drawer\"\r\n      :direction=\"direction\"\r\n      :before-close=\"handleClose\"\r\n      :show-close=\"false\"\r\n      :modal=\"false\"\r\n      :lock-scroll=\"false\"\r\n    >\r\n      <template #title>\r\n          <div class=\"custom-title-class\">文章目录</div>\r\n      </template>\r\n      <img src=\"@/assets/TheEditor/CloseCatalog.svg\" class=\"custom-close-btn\" @click=\"drawer = false\">\r\n      <div v-for=\"(articlemenu, index) in menuList\" :key=\"index\">\r\n        <span :id=\"articlemenu.id\" \r\n          :class=\"articlemenu.level === 1 ? 'h1-class' : 'other-class'\"\r\n          @click=\"scrollTo(articlemenu.id)\"\r\n        >\r\n          {{ articlemenu.title }}\r\n        </span>\r\n      </div>\r\n    </el-drawer>\r\n    <!-- <PictureAndAttachment :Submit = \"submitState\"></PictureAndAttachment> -->\r\n    <ToSubmit />\r\n    <!-- 底部滚动条 -->\r\n    <div class=\"foot\">\r\n      <div class=\"b-container\">\r\n        <!-- <button class=\"b-1\" @click=\"saveArticleDraft\">保存草稿</button> -->\r\n        <!-- <button class=\"b-1\">定时发布</button> -->\r\n        <button class=\"b-2\" @click=\"postArticlePost\">发表文章</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport '@wangeditor/editor/dist/css/style.css' // 引入 css\r\nimport { onBeforeUnmount,ref, onMounted,shallowRef, watch,reactive,toRaw} from 'vue'\r\nimport { Editor , Toolbar } from '@wangeditor/editor-for-vue'\r\nimport{Boot} from '@wangeditor/editor'\r\nimport { useStore } from 'vuex';\r\nimport axios from '@/utils/request'\r\nimport ToSubmit from './components/ToSubmit.vue'\r\nimport PictureAndAttachment from './PictureAndAttachment.vue'\r\nimport formulaModule from '@wangeditor/plugin-formula'\r\nimport { ElMessage,ElMessageBox } from 'element-plus';\r\nimport { useRoute,useRouter} from 'vue-router';\r\nimport {compressImage} from '@/utils/fileService';\r\nimport {getArticleContentPermission} from '@/utils/cosService';\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst title = ref('');//存放文章标题\r\nconst store = useStore();\r\nconst article = ref('');//存放文章数据\r\nconst valueHtml = ref('');\r\nconst articleId = parseInt(route.params.id,10);//路径中的文章ID\r\nconst submitState = ref('1');\r\n\r\n// 注册。要在创建编辑器之前注册，且只能注册一次，不可重复注册。\r\nif (!store.getters.hasRegisteredMenu) {\r\n  Boot.registerModule(formulaModule);\r\n  store.dispatch('registerMenu');\r\n}\r\n\r\n// 编辑器实例，使用 shallowRef\r\nconst editorRef = shallowRef();\r\nconst handleCreated = (editor) => {\r\n  editorRef.value = editor; // 记录 editor 实例\r\n}\r\n\r\n// 设置弹出框相关参数\r\nconst toolbarConfig = {insertKeys: {\r\n  index: 34, // 插入的位置，基于当前的 toolbarKeys\r\n  keys: [\r\n    'insertFormula'],\r\n}}\r\nconst editorConfig = { \r\n  placeholder: '请输入内容...',\r\n  MENU_CONF: {\r\n    uploadImage: {\r\n      async customUpload(file, insertFn) {   \r\n        const articleId = localStorage.getItem(\"articleId\"); // 获取文章ID\r\n        const timestamp = new Date().getTime(); // 获取当前时间戳\r\n        const filePictureName = `${timestamp}-${file.name}`; // 在文件名前加时间戳\r\n        const compressedFile = await compressImage(file);\r\n        const url = await getArticleContentPermission(compressedFile,articleId,filePictureName);\r\n        insertFn(url);\r\n      }\r\n    }\r\n  },\r\n  hoverbarKeys: {\r\n    formula: {\r\n      menuKeys: ['editFormula'], // “编辑公式”菜单\r\n    },\r\n  }, \r\n}\r\n\r\n// 组件销毁时，也及时销毁编辑器\r\nonBeforeUnmount(() => {\r\n    const editor = editorRef.value;\r\n    if (editor == null) return\r\n    editor.destroy()\r\n})\r\n\r\n//获取文章内容\r\nasync function fetchArticleContent(id) {\r\n  try {\r\n    const response = await axios.get(`/article/${id}`);\r\n    if ( response.data.code === 1) {\r\n      article.value = response.data.data;\r\n      title.value = article.value.title;\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n      ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.error('无法找到匹配文章数据', response.data.msg || 'Unknown error');\r\n      ElMessage.error('无法找到匹配文章数据');\r\n    }\r\n  } catch (error) {\r\n    console.error('无法获取接口数据', error.message);\r\n    ElMessage.error('无法找到匹配文章数据');\r\n  }\r\n}\r\n\r\n/**\r\n * 这里定义了一些目录相关的参数\r\n * 以及目录关闭时调用的方法\r\n * 以及，你也想哈哈吗\r\n */\r\nconst drawer = ref(false)\r\nconst direction = ref('rtl')\r\nconst menuList = ref([])\r\nconst handleClose = (done) => {\r\n  ElMessageBox.confirm('哈哈，你也想关目录吗')\r\n    .then(() => {\r\n      done();\r\n    })\r\n    .catch(() => {\r\n    });\r\n};\r\n\r\nconst handlerMenu = () => {\r\n  let content = document.querySelector(\".content\")\r\n  let els = content.querySelectorAll(\"h1,h2,h3,h4,h5,h6\")\r\n  let menus = []\r\n  if (els) {\r\n    els.forEach((item, index) => {\r\n      let menu = {}\r\n      menu.isActive = null\r\n      menu.title = item.innerText\r\n      menu.scrollTop = item.offsetTop\r\n      let level = item.tagName.toLowerCase().replace(\"h\", \"\")\r\n      menu.level = parseInt(level)\r\n      item.setAttribute(\"id\", `menus_${index+1}`)\r\n      menu.id = `#menus_${index+1}`\r\n      menus.push(menu)\r\n    })\r\n  }\r\n  menuList.value = menus\r\n}\r\n\r\nconst scrollTo = (id) => {\r\n    const element = document.querySelector(id);\r\n    if (element!==0) {\r\n      element.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n};\r\n\r\n//发表文章的提示弹框\r\nconst postArticlePost = async () => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要发表文章吗（请确认已经填写了所有文章的相关信息，否则无法通过审核）？',\r\n      {\r\n        confirmButtonText: '确认发表',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }\r\n    );\r\n    await postArticle();\r\n  } catch {\r\n    console.log('关闭弹框')\r\n  }\r\n}\r\n\r\nfunction checkProperties(...objects) {\r\n  for (let obj of objects) {\r\n    for (let key in obj) {\r\n      if (obj[key] === null || obj[key] === undefined || obj[key] === '') {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n//提交文章的接口\r\nasync function postArticle(){\r\n  let articleCon = reactive({\r\n    get title(){ return title.value},\r\n    get content(){ return valueHtml.value}\r\n  })\r\n  const first = ref({\r\n    id:articleId,\r\n    editorType:0,//富文本编辑器\r\n  })\r\n  const submitData = toRaw(store.state.submitDate);\r\n  const isValid = checkProperties(submitData, first.value, articleCon);\r\n  if(isValid){\r\n    ElMessage.error('未填写所有信息');\r\n    return;\r\n  }\r\n  const data = {...submitData,...first.value,...articleCon};\r\n  try {\r\n    const response = await axios.post('/article', data);//发表文章接口\r\n    if(response.data.code ===1) {\r\n      ElMessage.success('发表文章成功');\r\n      submitState.value = '2';\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n      ElMessage.error(response.data.msg.toString());\r\n    }\r\n    else ElMessage.error('发表文章失败');\r\n  } catch (error) {\r\n    console.log(error);\r\n    ElMessage.error('发表文章失败');\r\n  }\r\n}\r\n\r\nwatch(valueHtml, () => {\r\n  handlerMenu();\r\n});\r\n\r\n\r\nonMounted(async () => {\r\n  await fetchArticleContent(articleId);\r\n  valueHtml.value = article.value.content;  // 更新编辑器内容\r\n  handlerMenu();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.body_bgc{\r\n  background-color: #fdfbf6;\r\n}\r\n.large{\r\n  width: 1100px;\r\n  margin: 0px auto 20px;\r\n  z-index:1;\r\n}\r\n.header{\r\n  width: 1100px;\r\n  height: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: auto;\r\n  background-color: #fff;\r\n}\r\n.title{\r\n  width: 100%;\r\n  height: 30px;\r\n  padding: 20px 30px 15px 30px;\r\n  border-radius: 16px;\r\n  border: none;\r\n  margin: 0px 20px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  border-bottom: 1px solid rgb(244 244 244);\r\n}\r\n.title:focus{\r\n  outline: none;\r\n}\r\n/* .one{\r\n  width: 80px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #DCDFE6;\r\n  font-size: 15px;\r\n  margin: 20px;\r\n  cursor: pointer;\r\n}\r\n.two{\r\n  width: 80px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #DCDFE6;\r\n  background-color: #9FA9CA;\r\n  font-size: 15px;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n}\r\n.large_submit1{\r\n    border-radius: 4px 4px 0px 0px;\r\n    background: #fff;\r\n    box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\r\n    width: 1020px;\r\n    padding: 24px 40px 0px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 20px auto 0px;\r\n    gap:20px\r\n} */\r\nlabel{\r\n    color: #606266;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 16px;\r\n    margin-right: 80px;\r\n    cursor: pointer;\r\n}\r\n\r\n.el-input__inner{\r\n    text-align: center;\r\n}\r\n/* .image-container {\r\n    width: 180px;\r\n    height: 180px;\r\n    border: 1px dashed #bbbbbb;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    position: relative;\r\n}\r\n.pic_contain{\r\n  position: relative;\r\n}\r\ni.delete-btn2 {\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 8px;\r\n  cursor: pointer;\r\n} */\r\n\r\n/* .spic{\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    width: 180px;\r\n    height: 180px;\r\n    border-radius: 10px;\r\n    border: 1px dashed #bbbbbb;\r\n}\r\n.plus-sign {\r\n  font-size: 2rem;\r\n} */\r\n\r\n.foot{\r\n  width: 100%;\r\n  height: 38px;\r\n  border-radius: 8px;\r\n  border: 1px solid #DCDFE6;\r\n  background: #FFF;\r\n  position: fixed;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px 0 10px;\r\n  \r\n}\r\n.b-1{\r\n  display: inline-flex;\r\n  padding: 8px 16px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 16px;\r\n  border-radius: 16px;\r\n  border: 1px solid #DCDFE6;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n}\r\n.b-2{\r\n  display: inline-flex;\r\n  padding: 8px 16px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 16px;\r\n  border-radius: 16px;\r\n  border: #FFF;\r\n  background: #9FA9CA;\r\n  cursor: pointer;\r\n}\r\n.b-container{\r\n  position: absolute;\r\n  right: 40px;\r\n}\r\n.drawer-btn .el-button {\r\n    width: 22px;\r\n    height: 60px;\r\n    padding:3px;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 10px rgb(0 0 0 / 15%);\r\n    border: none;\r\n}\r\n::v-deep .top-right-button .el-icon svg{\r\n  color: black !important;;\r\n}\r\n.top-right-button {\r\n  position: fixed; \r\n  top: 40%; \r\n  right: 0px; \r\n}\r\n.custom-close-btn {\r\n  position: absolute;\r\n  top: 25px;\r\n  right: 15px;\r\n  cursor: pointer;\r\n}\r\n.custom-title-class {\r\n  color: black; /* 修改标题颜色 */\r\n  font-size: 24px; /* 修改标题字体大小 */\r\n  font-family: '黑体', 'Heiti', sans-serif; /* 修改标题字体 */\r\n}\r\n\r\n.h1-class{\r\n  color: #595959;\r\n  font-size: 18px; /* 修改文本字体大小 */\r\n  line-height: 2;\r\n  font-family: '宋体', 'SongTi', sans-serif;\r\n  cursor: pointer;\r\n}\r\n\r\n.other-class{\r\n  color: #595959;\r\n  font-size: 18px; /* 修改文本字体大小 */\r\n  line-height: 1.5;\r\n  font-family: '宋体', 'SongTi', sans-serif;\r\n  padding-left: 20px;\r\n  cursor: pointer;\r\n}\r\n::v-deep .top-right-button{\r\n  color: #000000;\r\n  background-color: #9fa9ca;\r\n  border-color: #9199b2;\r\n}\r\n::v-deep .other-class::before {\r\n  content: '';  /* 没有内容 */\r\n  display: inline-block;\r\n  width: 3px;  /* 黑点的宽度 */\r\n  height: 3px;  /* 黑点的高度 */\r\n  background-color: #595959;  /* 黑点的颜色 */\r\n  border-radius: 50%;  /* 使黑点呈圆形 */\r\n  margin-right: 8px;  /* 与文本内容之间的间距 */\r\n  vertical-align: middle; /* 使黑点居中 */\r\n}\r\n::v-deep .el-drawer__close-btn{\r\n  color: #000000;\r\n}\r\n::v-deep .h1-class::before {\r\n  content: '';  /* 没有内容 */\r\n  display: inline-block;\r\n  width: 6px;  /* 黑点的宽度 */\r\n  height: 6px;  /* 黑点的高度 */\r\n  background-color: #595959;  /* 黑点的颜色 */\r\n  border-radius: 50%;  /* 使黑点呈圆形 */\r\n  margin-right: 8px;  /* 与文本内容之间的间距 */\r\n  vertical-align: middle; /* 使黑点居中 */\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}