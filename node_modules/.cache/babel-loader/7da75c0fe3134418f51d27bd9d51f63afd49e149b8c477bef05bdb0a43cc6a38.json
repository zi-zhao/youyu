{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fad5cf1a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"linechart\"\n};\nconst _hoisted_2 = {\n  ref: \"lineContainer\",\n  class: \"linebox\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 折线图容器 \"), _createElementVNode(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\CreateCenter\\components\\TheData\\ArticleDataPage\\CommentData.vue"],"sourcesContent":["<template>\r\n    <div class=\"linechart\">\r\n        <!-- 折线图容器 -->\r\n        <div ref=\"lineContainer\" class=\"linebox\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ElMessage } from 'element-plus';\r\nimport { ref, onMounted} from 'vue';\r\nimport axios from '@/utils/request';\r\nimport * as echarts from 'echarts';\r\n\r\nlet lineChart ;\r\nconst lineContainer = ref(null);\r\nconst userRecentCreateData = ref([]);\r\nconst dates = ref([]);//存放近七天的日期，供折线图的X轴\r\n\r\nconst getPastSevenDays = () => {\r\n    let currentDate = new Date();\r\n    for (let i = 0; i < 7; i++) {\r\n        dates.value.unshift(\r\n        `${String(currentDate.getMonth() + 1).padStart(2, '0')}-${String(currentDate.getDate()).padStart(2, '0')}`\r\n        );\r\n        currentDate.setDate(currentDate.getDate() - 1);\r\n    }\r\n};\r\n\r\n//获取用户近7天评论数据\r\nasync function getSevenCommentData() {\r\n  try {\r\n    const response = await axios.get(`/articledata/comment`)\r\n    if(response.data.code === 1){\r\n        userRecentCreateData.value = response.data.data;\r\n        // ElMessage.success('获取用户近7天评论数据成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户近7天评论数据失败\");\r\n        ElMessage.error(\"获取用户近7天评论数据失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户近7天评论数据失败\", error); \r\n    ElMessage.error(\"获取用户近7天评论数据失败\");\r\n  }\r\n}\r\n\r\n\r\n\r\nonMounted(async () => {\r\n    getPastSevenDays();\r\n    await getSevenCommentData();\r\n\r\n    // 折线图配置\r\n    const lineOption = {\r\n        title: {\r\n            text: '近7天评论数'\r\n        },\r\n        tooltip: {},\r\n        grid:{\r\n            height: \"70%\"\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            data: dates.value,\r\n        },\r\n        yAxis: {\r\n            type: 'value',\r\n            splitNumber: 4\r\n        },\r\n        series: [{\r\n            data: userRecentCreateData.value,\r\n            type: 'line',\r\n            smooth: true,\r\n            barWidth: 60\r\n        }]\r\n    };\r\n\r\n    // 初始化图表\r\n    lineChart = echarts.init(lineContainer.value);\r\n    lineChart.setOption(lineOption);\r\n});\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.linechart{\r\n    border: 1px solid #eaeaea;\r\n    box-shadow: 0px 0px 20px 0px rgba(96, 111, 160, 0.25), 0px 4px 4px 0px rgb(0 0 0 / 21%);\r\n    border-radius: 20px;\r\n    padding: 20px 30px;\r\n}\r\n.linebox{\r\n    width: 100%;\r\n    height: 300px;\r\n}\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAW;;EAEbC,GAAG,EAAC,eAAe;EAACD,KAAK,EAAC;;;uBAFnCE,mBAAA,CAGM,OAHNC,UAGM,GAFFC,mBAAA,WAAc,EACdC,mBAAA,CAA+C,OAA/CC,UAA+C,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}