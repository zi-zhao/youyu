{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport axios from '@/utils/request';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'IdentifyPart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const myForm = ref(null);\n    const router = useRouter();\n    const labelPosition = ref('top');\n    let isRunning = ref(false); // 判断发送验证码事件\n    let allFieldsValid = ref(false); //所有表单是否符合规则\n    let phoneNumberValid = ref(false); //手机号是否符合规则\n    let formTouched = ref(false); //用户是否输入内容\n    const store = useStore();\n    let formLabelAlign = reactive({\n      phoneNumber: '',\n      phoneVerification: ''\n      // email:'',\n      // emailVerification:'',\n    }); // 收集表单数据\n    let inner = ref('获取短信验证码'); // 设置发送验证码按钮内容\n\n    // 设置表单校验规则\n    const rules = reactive({\n      // email: [\n      //   { required: true, message: '请输入邮箱', trigger: 'blur' },\n      //   { pattern: /^[A-Za-z0-9_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/, message: '邮箱格式不正确', trigger: 'blur' }\n      // ],\n      // emailVerification:[\n      //   {required: true, message: '请输入验证码', trigger: 'blur'}\n      // ],\n      phoneNumber: [{\n        required: true,\n        message: '请输入手机号',\n        trigger: 'blur'\n      }, {\n        validator: (rules, value, callback) => {\n          if (/^1[3-9]\\d{9}$/.test(value)) {\n            phoneNumberValid.value = true;\n            callback();\n          } else {\n            phoneNumberValid.value = false;\n            callback(new Error('手机号格式不正确'));\n          }\n        },\n        trigger: 'blur'\n      }]\n    });\n\n    // 手机号验证函数\n    function checkPhoneNumber() {\n      const phoneNumberPattern = /^1[3-9]\\d{9}$/;\n      phoneNumberValid.value = phoneNumberPattern.test(formLabelAlign.phoneNumber);\n      checkAllFields();\n    }\n\n    //验证输入框是否符合规则\n    async function checkAllFields() {\n      formTouched.value = true;\n      myForm.value.validate(valid => {\n        allFieldsValid.value = valid;\n      });\n    }\n\n    // 点击发送验证码\n    async function send() {\n      if (!isRunning.value) {\n        isRunning.value = true;\n        fetchData();\n        let time = ref(60);\n        let timeId = setInterval(function () {\n          time.value--;\n          inner.value = time.value + '后重新获取';\n          if (time.value === 0) {\n            clearInterval(timeId);\n            inner.value = '获取短信验证码';\n            isRunning.value = false;\n          }\n        }, 1000);\n      }\n    }\n\n    // 发送手机获取验证码请求\n    async function fetchData() {\n      try {\n        const response = await axios.get(`/sendLoginSMSCode/${formLabelAlign.phoneNumber}`);\n        // const response = await axios.get(`/sendEmailVerification/0/${formLabelAlign.email}`);\n        if (response.data.code === 1) {\n          ElMessage.success('手机验证码发送成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.log('手机验证码发送失败');\n          ElMessage.error('手机验证码发送失败');\n        }\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('手机验证码发送失败');\n      }\n    }\n\n    // 发送验证码登录信息数据请求\n    async function fetchLoad() {\n      myForm.value.validate(valid => {\n        if (valid) {\n          axios.post('/users/loginByVerification', formLabelAlign).then(response => {\n            if (response.data.code === 1) {\n              if (response.headers[\"authorization\"]) {\n                localStorage.setItem('token', response.headers[\"authorization\"]);\n                localStorage.setItem('userId', response.data.data.id);\n                localStorage.setItem('userName', response.data.data.username);\n                ElMessage.success('登录成功');\n                store.commit('DOWNLOAD', false); // 关闭登录dialog \n                // router.push('/VideoMain');\n                router.push('/DefaultPresentation');\n              } else {\n                ElMessage.error('登录失败');\n              }\n            } else if (response.data.code === 0 && response.data.msg) {\n              ElMessage.error(response.data.msg.toString());\n            } else {\n              console.log(response.data);\n              ElMessage.error('登录失败');\n            }\n          }).catch(error => {\n            console.error(error);\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    }\n\n    // 发送邮箱验证码登录信息数据请求\n    // async function fetchLoad() {\n    //   myForm.value.validate((valid) => {\n    //   if (valid) {\n    //     axios.post('/users/loginByEmailVerification',formLabelAlign)\n    //     .then(response => {\n    //       if (response.data.code === 1 ) { \n    //         if(response.headers[\"authorization\"]){\n    //           localStorage.setItem('token',response.headers[\"authorization\"]);\n    //           localStorage.setItem('userId',response.data.data.id);\n    //           localStorage.setItem('userName',response.data.data.username);\n    //           ElMessage.success('登录成功');\n    //           store.commit('DOWNLOAD', false);// 关闭登录dialog \n    //           router.push('/TheMain');\n    //         }else{\n    //           ElMessage.error('登录失败'); \n    //         }              \n    //       } else if(response.data.code === 0 && response.data.msg){\n    //         ElMessage.error(response.data.msg.toString());\n    //       }else {\n    //         console.log(response.data);\n    //         ElMessage.error('登录失败'); \n    //       }\n    //     })\n    //     .catch(error => {\n    //       console.error(error);\n    //     });\n    //   }\n    //   else {\n    //       console.log('error submit!!');\n    //       return false;\n    //     }\n    //   })\n    // }\n\n    const __returned__ = {\n      myForm,\n      router,\n      labelPosition,\n      get isRunning() {\n        return isRunning;\n      },\n      set isRunning(v) {\n        isRunning = v;\n      },\n      get allFieldsValid() {\n        return allFieldsValid;\n      },\n      set allFieldsValid(v) {\n        allFieldsValid = v;\n      },\n      get phoneNumberValid() {\n        return phoneNumberValid;\n      },\n      set phoneNumberValid(v) {\n        phoneNumberValid = v;\n      },\n      get formTouched() {\n        return formTouched;\n      },\n      set formTouched(v) {\n        formTouched = v;\n      },\n      store,\n      get formLabelAlign() {\n        return formLabelAlign;\n      },\n      set formLabelAlign(v) {\n        formLabelAlign = v;\n      },\n      get inner() {\n        return inner;\n      },\n      set inner(v) {\n        inner = v;\n      },\n      rules,\n      checkPhoneNumber,\n      checkAllFields,\n      send,\n      fetchData,\n      fetchLoad,\n      ref,\n      reactive,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","axios","useRouter","useStore","ElMessage","myForm","router","labelPosition","isRunning","allFieldsValid","phoneNumberValid","formTouched","store","formLabelAlign","phoneNumber","phoneVerification","inner","rules","required","message","trigger","validator","value","callback","test","Error","checkPhoneNumber","phoneNumberPattern","checkAllFields","validate","valid","send","fetchData","time","timeId","setInterval","clearInterval","response","get","data","code","success","msg","error","toString","console","log","fetchLoad","post","then","headers","localStorage","setItem","id","username","commit","push","catch"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/TheFirst/components/TheDialog/IdentifyPart.vue"],"sourcesContent":["<template>\r\n    <div class=\"form\">\r\n        <el-form\r\n        ref=\"myForm\"\r\n        :label-position=\"labelPosition\"\r\n        label-width=\"100px\"\r\n        :model=\"formLabelAlign\"\r\n        :rules=\"rules\"\r\n        @submit.prevent=\"fetchLoad\"\r\n        :class=\"{ 'form-touched': formTouched.valueOf }\"\r\n      >\r\n        <el-form-item label=\"手机号\" prop=\"phoneNumber\">\r\n          <el-input v-model=\"formLabelAlign.phoneNumber\" @input=\"checkPhoneNumber\" @change=\"checkAllFields\" />\r\n        </el-form-item>\r\n        <!-- <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"formLabelAlign.email\" @change=\"checkAllFields\" />\r\n        </el-form-item> -->\r\n        <el-form-item label=\"验证码\" prop=\"phoneVerification\" class=\"send-identifycode\">\r\n          <el-input class=\"two\" v-model=\"formLabelAlign.phoneVerification\" @change=\"checkAllFields\" />\r\n          <button class=\"send-pc\" @click=\"send\" :disabled=\" !phoneNumberValid ||isRunning\">{{ inner }}</button>\r\n          <div class=\"send-phone\" @click=\"send\" :disabled=\" !phoneNumberValid ||isRunning\">点击获取验证码</div>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <div class=\"center-button\">\r\n      <el-button type=\"primary\" round style=\"height: 45px;width: 141px;\" @click=\"fetchLoad\" v-model=\"isRunning\">登录</el-button>\r\n      <!-- 注意这里要加一个点击事件，点击关闭登录弹框，打开注册弹框 -->\r\n      <!-- <div class=\"noaccount\">没有账号?<span style=\"color: #00A6DA;\">去注册</span></div> -->\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref,reactive} from 'vue'\r\nimport axios from '@/utils/request'\r\nimport { useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nconst myForm = ref(null);\r\nconst router = useRouter();\r\nconst labelPosition = ref('top');\r\nlet isRunning = ref(false);// 判断发送验证码事件\r\nlet allFieldsValid = ref(false);//所有表单是否符合规则\r\nlet phoneNumberValid = ref(false);//手机号是否符合规则\r\nlet formTouched = ref(false);//用户是否输入内容\r\nconst store = useStore();\r\nlet formLabelAlign = reactive({\r\n  phoneNumber: '',\r\n  phoneVerification: '',\r\n  // email:'',\r\n  // emailVerification:'',\r\n});  // 收集表单数据\r\nlet inner = ref('获取短信验证码');// 设置发送验证码按钮内容\r\n\r\n// 设置表单校验规则\r\nconst rules = reactive({\r\n  // email: [\r\n  //   { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n  //   { pattern: /^[A-Za-z0-9_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/, message: '邮箱格式不正确', trigger: 'blur' }\r\n  // ],\r\n  // emailVerification:[\r\n  //   {required: true, message: '请输入验证码', trigger: 'blur'}\r\n  // ],\r\n  phoneNumber:[\r\n    {required: true, message: '请输入手机号', trigger: 'blur'},\r\n    {\r\n      validator: ( rules ,value, callback) => {\r\n        if (/^1[3-9]\\d{9}$/.test(value)) {\r\n          phoneNumberValid.value = true;\r\n          callback();\r\n        } else {\r\n          phoneNumberValid.value = false;\r\n          callback(new Error('手机号格式不正确'));\r\n        }\r\n      },\r\n      trigger: 'blur'\r\n    }   \r\n  ]\r\n})\r\n\r\n// 手机号验证函数\r\nfunction checkPhoneNumber() {\r\n  const phoneNumberPattern = /^1[3-9]\\d{9}$/;\r\n  phoneNumberValid.value = phoneNumberPattern.test(formLabelAlign.phoneNumber);\r\n  checkAllFields();\r\n}\r\n \r\n//验证输入框是否符合规则\r\nasync function checkAllFields() {\r\n  formTouched.value = true;\r\n  myForm.value.validate(valid => {\r\n    allFieldsValid.value = valid;\r\n  });\r\n}\r\n\r\n// 点击发送验证码\r\nasync function send(){\r\n  if(!isRunning.value){\r\n    isRunning.value = true\r\n    fetchData()\r\n    let time = ref(60);\r\n    let timeId = setInterval(function(){\r\n      time.value--;\r\n      inner.value = time.value+'后重新获取';\r\n      if(time.value===0){\r\n        clearInterval(timeId);\r\n        inner.value = '获取短信验证码';\r\n        isRunning.value = false;\r\n      }\r\n    },1000)\r\n  }\r\n}\r\n\r\n// 发送手机获取验证码请求\r\nasync function fetchData() {\r\n  try {\r\n    const response = await axios.get(`/sendLoginSMSCode/${formLabelAlign.phoneNumber}`);\r\n    // const response = await axios.get(`/sendEmailVerification/0/${formLabelAlign.email}`);\r\n    if (response.data.code === 1) {\r\n      ElMessage.success('手机验证码发送成功');\r\n    } else if(response.data.code === 0 && response.data.msg){\r\n      ElMessage.error(response.data.msg.toString());\r\n    }else {\r\n      console.log('手机验证码发送失败');\r\n      ElMessage.error('手机验证码发送失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    ElMessage.error('手机验证码发送失败');\r\n  }\r\n}\r\n\r\n// 发送验证码登录信息数据请求\r\nasync function fetchLoad() {\r\n  myForm.value.validate((valid) => {\r\n  if (valid) {\r\n    axios.post('/users/loginByVerification',formLabelAlign)\r\n    .then(response => {\r\n      if (response.data.code === 1 ) { \r\n        if(response.headers[\"authorization\"]){\r\n          localStorage.setItem('token',response.headers[\"authorization\"])\r\n          localStorage.setItem('userId',response.data.data.id)\r\n          localStorage.setItem('userName',response.data.data.username)\r\n          ElMessage.success('登录成功');\r\n          store.commit('DOWNLOAD', false)// 关闭登录dialog \r\n          // router.push('/VideoMain');\r\n          router.push('/DefaultPresentation');\r\n        }else{\r\n          ElMessage.error('登录失败'); \r\n        }              \r\n      } else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n      }else {\r\n        console.log(response.data);\r\n        ElMessage.error('登录失败'); \r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n  }\r\n  else {\r\n      console.log('error submit!!');\r\n      return false;\r\n    }\r\n  })\r\n}\r\n\r\n// 发送邮箱验证码登录信息数据请求\r\n// async function fetchLoad() {\r\n//   myForm.value.validate((valid) => {\r\n//   if (valid) {\r\n//     axios.post('/users/loginByEmailVerification',formLabelAlign)\r\n//     .then(response => {\r\n//       if (response.data.code === 1 ) { \r\n//         if(response.headers[\"authorization\"]){\r\n//           localStorage.setItem('token',response.headers[\"authorization\"]);\r\n//           localStorage.setItem('userId',response.data.data.id);\r\n//           localStorage.setItem('userName',response.data.data.username);\r\n//           ElMessage.success('登录成功');\r\n//           store.commit('DOWNLOAD', false);// 关闭登录dialog \r\n//           router.push('/TheMain');\r\n//         }else{\r\n//           ElMessage.error('登录失败'); \r\n//         }              \r\n//       } else if(response.data.code === 0 && response.data.msg){\r\n//         ElMessage.error(response.data.msg.toString());\r\n//       }else {\r\n//         console.log(response.data);\r\n//         ElMessage.error('登录失败'); \r\n//       }\r\n//     })\r\n//     .catch(error => {\r\n//       console.error(error);\r\n//     });\r\n//   }\r\n//   else {\r\n//       console.log('error submit!!');\r\n//       return false;\r\n//     }\r\n//   })\r\n// }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.form{\r\n\twidth: 100%;\r\n  margin: 3rem auto;\r\n}\r\n\r\n.center-button{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 40px;\r\n  position: relative;\r\n}\r\n.send-pc{\r\n  display: inline-block;\r\n\twidth: 137px;\r\n\theight: 40px;\r\n\tbackground-color: #d5e3f2;\r\n\tbox-shadow: 0px 4px 4px 0px \r\n\t\t#b8cdf8;\r\n\tborder-radius: 4px;\r\n\tborder: solid 1px #d9d9d9;\r\n  margin-left: 20px;\r\n  cursor: pointer;\r\n}\r\n.send-phone{\r\n  display: none;\r\n}\r\n:deep .send-identifycode .el-form-item__content{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  gap: 1rem;\r\n}\r\n:deep .el-form-item__error {\r\n  top: 45px;\r\n}\r\n.noaccount{\r\n  position: absolute;\r\n  right: 5%;\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n  letter-spacing: 1px;\r\n}\r\n@media (max-width: 768px) {\r\n  .form {\r\n    width: 90%;\r\n    margin: 4rem auto;\r\n  }\r\n  .form .el-form-item {\r\n    margin-bottom: 2rem;\r\n  }\r\n  .center-button{\r\n    margin-right: 0;\r\n  }\r\n  .send-pc{\r\n    display: none;\r\n  }\r\n  .send-phone{\r\n    display: flex;\r\n    color:  #2b6ae8;\r\n    line-height: 1.6;\r\n    font-size: 0.8rem;\r\n    cursor: pointer;\r\n    height: 40px;\r\n  }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}