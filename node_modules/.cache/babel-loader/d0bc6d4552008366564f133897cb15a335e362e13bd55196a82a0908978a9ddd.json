{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\nimport axios from '@/utils/request';\nimport { fetchShareCoverage } from '@/utils/fileService';\nimport { ElMessage } from 'element-plus';\nimport CfDialog from '../../../../components/CfDialog';\nimport ShareDialog from '../../../../ShareShow/components/ShareDialog.vue';\nexport default {\n  __name: 'SFManagementDetail',\n  props: {\n    Name: String,\n    Id: Number\n  },\n  emits: {\n    switchToComponent: payload => {\n      if (payload && typeof payload.title === 'string') {\n        return true;\n      }\n      ElMessage.error('组件传值错误');\n      console.error('组件传值错误');\n      return false;\n    }\n  },\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const currentPage = ref(1);\n    const showColumnArticle = ref(true); //收藏里的某一篇文章是否展示\n    const shareFavoriteGroups = ref([]);\n    const dialogFormVisible = ref(false); //控制cfdialog弹窗（显示分享收藏列表）是否弹出\n    const favoriteId = ref(); //用户选择的ID\n    const tempFavoriteId = ref(); //存放用户临时选择的文章ID\n    const dialogShowVisible = ref(false); //控制分享展示弹框是否展示\n    const shareId = ref(null);\n    const props = __props;\n\n    //点击打开分享展示弹框\n    const openShareDialog = id => {\n      shareId.value = id;\n      dialogShowVisible.value = true;\n    };\n\n    //点击管理或返回切换组件的定义事件之一\n    const emits = __emit;\n    const back = () => {\n      emits(\"switchToComponent\", {\n        title: \"分享收藏\"\n      });\n    };\n    const handleRemoveBefore = ID => {\n      tempFavoriteId.value = ID;\n      dialogFormVisible.value = true;\n    };\n\n    //接受cfdialog返回的数据，从而确定Id\n    const handleUpdateValue = data => {\n      favoriteId.value = data[0];\n    };\n\n    // 使用 watch 来监听 favoriteId 的变化\n    watch(favoriteId, (newVal, oldVal) => {\n      if (newVal !== 0 && newVal !== oldVal) {\n        handleRemove();\n      }\n    });\n    const handleRemove = async () => {\n      await handleDelete();\n      await handleInsert();\n      await getShareList();\n      favoriteId.value = 0;\n    };\n\n    //删除收藏中的分享\n    async function handleDelete() {\n      try {\n        const response = await axios.delete(`/favorite/share`, {\n          favoriteId: props.Id,\n          contentId: tempFavoriteId.value\n        });\n        if (response.data && response.data.code === 1) {\n          console.success('删除收藏分享成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('删除收藏分享失败', response.data.msg);\n          ElMessage.error('删除收藏分享失败');\n        }\n      } catch (error) {\n        console.error(\"删除收藏分享失败\", error);\n        ElMessage.error('删除收藏分享失败');\n      }\n    }\n\n    //增添收藏中的分享\n    async function handleInsert() {\n      try {\n        const response = await axios.post(`/favorite/share`, {\n          favoriteId: favoriteId.value,\n          contentId: tempFavoriteId.value\n        });\n        if (response.data && response.data.code === 1) {\n          ElMessage.success('移动分享成功');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error('增添收藏分享失败', response.data.msg);\n          ElMessage.error('增添收藏分享失败');\n        }\n      } catch (error) {\n        console.error(\"增添收藏分享失败\", error);\n        ElMessage.error('增添收藏分享失败');\n      }\n    }\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getShareList(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n\n    //获取收藏分享列表\n    async function getShareList(currentPage) {\n      try {\n        const response = await axios.get('/favorite/share', {\n          params: {\n            id: props.Id,\n            page: currentPage,\n            pageSize: 100\n          }\n        });\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\n          const updates = response.data.data.records.map(async record => {\n            const newCoverPicture = await fetchShareCoverage(record.id);\n            return {\n              ...record,\n              newCoverPicture\n            };\n          });\n          const updatedRecords = await Promise.all(updates);\n          shareFavoriteGroups.value = [...shareFavoriteGroups.value, ...updatedRecords];\n          console.log(response.data);\n        } else if (response.data.code === 1 && response.data.data.records.length === 0) {\n          ElMessage.info('已加载所有数据');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else {\n          console.error(\"获取分享收藏数据失败\");\n          ElMessage.error(\"获取分享收藏数据失败\");\n        }\n      } catch (error) {\n        console.error(\"获取分享收藏数据失败\", error);\n        ElMessage.error(\"获取分享收藏数据失败\");\n      }\n    }\n    onMounted(() => {\n      getShareList(currentPage.value);\n    });\n    const __returned__ = {\n      currentPage,\n      showColumnArticle,\n      shareFavoriteGroups,\n      dialogFormVisible,\n      favoriteId,\n      tempFavoriteId,\n      dialogShowVisible,\n      shareId,\n      props,\n      openShareDialog,\n      emits,\n      back,\n      handleRemoveBefore,\n      handleUpdateValue,\n      handleRemove,\n      handleDelete,\n      handleInsert,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getShareList,\n      ref,\n      onMounted,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get fetchShareCoverage() {\n        return fetchShareCoverage;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get CfDialog() {\n        return CfDialog;\n      },\n      ShareDialog\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","axios","fetchShareCoverage","ElMessage","CfDialog","ShareDialog","currentPage","showColumnArticle","shareFavoriteGroups","dialogFormVisible","favoriteId","tempFavoriteId","dialogShowVisible","shareId","props","__props","openShareDialog","id","value","emits","__emit","back","title","handleRemoveBefore","ID","handleUpdateValue","data","newVal","oldVal","handleRemove","handleDelete","handleInsert","getShareList","response","delete","Id","contentId","code","console","success","msg","error","toString","post","isLoading","load","get","params","page","pageSize","records","length","updates","map","record","newCoverPicture","updatedRecords","Promise","all","log","info"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/CreateCenter/components/ManuscriptManagement/ManuscriptManagementDetail/SFManagementDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"container1\">\r\n        <div class=\"page\">\r\n            <div class=\"hierarchy-title\">\r\n                <span>收藏管理</span>\r\n                <span>></span>\r\n                <span>{{ props.Name }}</span>\r\n                <span>></span>\r\n                <span>管理</span>\r\n            </div>\r\n            <button @click=\"back\" class=\"back-btn\"><el-icon><Back /></el-icon></button>\r\n            <div class=\"footer\" style=\"display: flex; color: #606060; margin-top: 0.5rem;\">\r\n                <div style=\"flex:56%\">排序</div>\r\n                <div style=\"flex:35%;text-align: center;\">操作</div>\r\n                <div style=\"flex:9%;text-align: center;\">是否展示</div>\r\n            </div>\r\n            <div class=\"content-container\" v-infinite-scroll=\"load\"  infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n                <div class=\"content-box underline\"  v-for=\"item in shareFavoriteGroups\" :key=\"item.id\">\r\n                    <img src=\"@/assets/CreateCenter/小点.svg\" alt=\"\" style=\"flex: 5%;height: 20px; padding-right: 40px;\">\r\n                     <div style=\"flex: 20%;\" v-for= \"(image, imgIndex) in item.newCoverPicture.slice(0, 1)\"  :key=\"imgIndex\">\r\n                        <img :src='image' alt=\"\" style=\"width: 142px;height: 100px;border-radius: 8px;\">\r\n                    </div>\r\n                    <div style=\"flex: 30%;text-align: center;\">{{ item.title }}</div>\r\n                    <div style=\"display: flex; flex-direction: row;justify-content: center; flex: 35%;gap: 2rem;\">\r\n                        <el-link type=\"primary\" @click=\"openShareDialog(item.id)\">查看</el-link>\r\n                        <!-- <el-link type=\"primary\" @click = handleRemoveBefore(item.id)>移动</el-link>       -->\r\n                    </div>\r\n                    <div style=\"flex: 10%;display: flex;justify-content: center;\">\r\n                        <img v-if=\"showColumnArticle\" src=\"@/assets/CreateCenter/ShowArticleShare.svg\" alt=\"\">\r\n                    </div>\r\n                    <div v-if=\"dialogFormVisible\">\r\n                        <CfDialog  v-model=\"dialogFormVisible\" @updateValue=\"handleUpdateValue\" ClassifyName=\"分享收藏\"></CfDialog>\r\n                    </div>\r\n                </div>\r\n                <el-empty \r\n                    v-if=\"!shareFavoriteGroups || shareFavoriteGroups.length === 0\" \r\n                    :image-size=\"200\" \r\n                    description=\"您的收藏夹里面还没有分享呢，快去寻找吧！\"\r\n                />\r\n            </div>\r\n        </div>\r\n        <div v-if=\"dialogShowVisible\">\r\n            <ShareDialog v-model=\"dialogShowVisible\" :Id = shareId></ShareDialog>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref,onMounted,defineProps,defineEmits,watch } from 'vue'\r\nimport axios from '@/utils/request';\r\nimport { fetchShareCoverage } from '@/utils/fileService'; \r\nimport { ElMessage } from 'element-plus';\r\nimport CfDialog from '../../../../components/CfDialog';\r\nimport ShareDialog from '../../../../ShareShow/components/ShareDialog.vue'\r\n\r\nconst currentPage = ref(1);\r\nconst showColumnArticle = ref(true)//收藏里的某一篇文章是否展示\r\nconst shareFavoriteGroups = ref([])\r\nconst dialogFormVisible = ref(false)//控制cfdialog弹窗（显示分享收藏列表）是否弹出\r\nconst favoriteId = ref();//用户选择的ID\r\nconst tempFavoriteId = ref()//存放用户临时选择的文章ID\r\nconst dialogShowVisible = ref(false)//控制分享展示弹框是否展示\r\nconst shareId = ref(null);\r\n\r\nconst props = defineProps({\r\n    Name: String,\r\n    Id:Number,\r\n});\r\n\r\n//点击打开分享展示弹框\r\nconst openShareDialog = (id) =>{\r\n    shareId.value = id;\r\n    dialogShowVisible.value = true;\r\n}\r\n\r\n//点击管理或返回切换组件的定义事件之一\r\nconst emits = defineEmits({\r\n    switchToComponent: payload => {\r\n        if (payload && typeof payload.title === 'string' ) {\r\n        return true;\r\n        }\r\n        ElMessage.error('组件传值错误');\r\n        console.error('组件传值错误');\r\n        return false;\r\n    }\r\n});\r\nconst back = () => {\r\n    emits(\"switchToComponent\",{title:\"分享收藏\"});\r\n};\r\n\r\nconst handleRemoveBefore = (ID) => {\r\n    tempFavoriteId.value = ID;\r\n    dialogFormVisible.value = true;\r\n}\r\n\r\n//接受cfdialog返回的数据，从而确定Id\r\nconst handleUpdateValue = (data) => {\r\n    favoriteId.value = data[0];\r\n}\r\n\r\n// 使用 watch 来监听 favoriteId 的变化\r\nwatch(favoriteId, (newVal, oldVal) => {\r\n    if (newVal !== 0 && newVal !== oldVal) {\r\n        handleRemove();\r\n    }\r\n});\r\n\r\nconst handleRemove = async () => {\r\n    await handleDelete();\r\n    await handleInsert();\r\n    await getShareList();\r\n    favoriteId.value = 0;\r\n}\r\n\r\n//删除收藏中的分享\r\nasync function handleDelete() {\r\n    try {\r\n        const response = await axios.delete(`/favorite/share`,{favoriteId:props.Id, contentId:tempFavoriteId.value});\r\n        if (response.data && response.data.code === 1) {\r\n            console.success('删除收藏分享成功');\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error('删除收藏分享失败', response.data.msg);\r\n            ElMessage.error('删除收藏分享失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"删除收藏分享失败\", error); \r\n        ElMessage.error('删除收藏分享失败');\r\n    }\r\n}\r\n\r\n//增添收藏中的分享\r\nasync function handleInsert() {\r\n    try {\r\n        const response = await axios.post(`/favorite/share`,{favoriteId:favoriteId.value, contentId:tempFavoriteId.value});\r\n        if (response.data && response.data.code === 1) {\r\n            ElMessage.success('移动分享成功');\r\n        } else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else {\r\n            console.error('增添收藏分享失败', response.data.msg);\r\n            ElMessage.error('增添收藏分享失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"增添收藏分享失败\", error); \r\n        ElMessage.error('增添收藏分享失败');\r\n    }\r\n}\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    try {\r\n        if(currentPage.value === 1){\r\n            currentPage.value++;\r\n        }\r\n        await  getShareList(currentPage.value);\r\n        currentPage.value++; // 只有在请求成功完成后才递增页码\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n//获取收藏分享列表\r\nasync function getShareList(currentPage) {\r\n    try {\r\n    const response = await axios.get('/favorite/share',{\r\n        params: {\r\n            id:props.Id,\r\n            page:currentPage,\r\n            pageSize:100\r\n        }\r\n    });\r\n    if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n      const updates = response.data.data.records.map(async (record) => {\r\n        const newCoverPicture = await fetchShareCoverage(record.id);\r\n        return { ...record, newCoverPicture };\r\n      });\r\n      const updatedRecords = await Promise.all(updates);\r\n      shareFavoriteGroups.value = [...shareFavoriteGroups.value, ...updatedRecords];\r\n      console.log(response.data);\r\n    }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n        ElMessage.info('已加载所有数据');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取分享收藏数据失败\");\r\n        ElMessage.error(\"获取分享收藏数据失败\");\r\n    }\r\n    } catch (error) {\r\n    console.error(\"获取分享收藏数据失败\", error); \r\n    ElMessage.error(\"获取分享收藏数据失败\");\r\n    }\r\n}\r\n\r\nonMounted(() => {\r\n    getShareList(currentPage.value);\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container1 {\r\n    background-color: #F5F5F5;\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n.page {\r\n    background-color: #fff;\r\n    width: 100%;\r\n    position: relative;\r\n}\r\n.back-btn{\r\n    position: absolute;\r\n    display: flex;\r\n    width: 23px;\r\n    height: 18px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    top: 12px;\r\n    left: -35px;\r\n    cursor: pointer;\r\n}\r\n.hierarchy-title {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    margin: 10px 0px 60px;\r\n    color: #9B9B9B;\r\n}\r\n::v-deep .el-tabs__nav-wrap::after {\r\n    height: 0px;\r\n}\r\n\r\n.content-box {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding-bottom: 1rem;\r\n    margin-top: 1rem;\r\n    gap: 1rem;\r\n}\r\n\r\n.middle {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.search:hover {\r\n    cursor: pointer;\r\n}\r\n\r\n.underline{\r\n    border-bottom: 1px solid #ccc;\r\n\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}