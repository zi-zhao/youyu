{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/VerifiedUser.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-8f969e26\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"bgc_box\"\n};\nconst _hoisted_2 = {\n  class: \"top\"\n};\nconst _hoisted_3 = {\n  class: \"one_btn\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"回答\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  }\n};\nconst _hoisted_6 = {\n  class: \"text1\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  src: _imports_0,\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\",\n    \"margin\": \"0 10px 0 -9px\"\n  },\n  alt: \"\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"的问题\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"main_box\"\n};\nconst _hoisted_10 = {\n  class: \"item\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"user\"\n};\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  key: 1,\n  class: \"user\"\n};\nconst _hoisted_14 = [\"src\"];\nconst _hoisted_15 = {\n  key: 2,\n  class: \"content\"\n};\nconst _hoisted_16 = {\n  key: 3,\n  class: \"content\"\n};\nconst _hoisted_17 = [\"src\"];\nconst _hoisted_18 = {\n  class: \"time\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 向**的提问+价值 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString($setup.answererInfo.username), 1 /* TEXT */), $setup.answererInfo.verified === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_7)) : _createCommentVNode(\"v-if\", true)]), _hoisted_8]), _createCommentVNode(\" <div class=\\\"two_btn\\\">\\r\\n                <span>价值</span>\\r\\n                <span class=\\\"text1\\\">10</span>\\r\\n                <span>鱼饵</span>\\r\\n            </div> \")]), _createCommentVNode(\" 对话列表  \"), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sendMessagesList, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"content-box\",\n      key: index\n    }, [_createElementVNode(\"div\", _hoisted_10, [message.user === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"img\", {\n      src: $setup.answererInfo.newAvater,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_12), _createElementVNode(\"span\", null, _toDisplayString($setup.answererInfo.username) + \"的提问\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), message.user === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"img\", {\n      src: $setup.userAvater,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_14), _createElementVNode(\"span\", null, _toDisplayString($setup.userName) + \"的回答\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), message.messageType === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _toDisplayString(message.content), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), message.messageType === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_createElementVNode(\"img\", {\n      src: message.imageurl,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_17)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_18, _toDisplayString(message.createTime), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","style","src","alt","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","$setup","answererInfo","username","verified","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","sendMessagesList","message","index","key","_hoisted_10","user","_hoisted_11","newAvater","_hoisted_13","userAvater","userName","messageType","_hoisted_15","content","_hoisted_16","imageurl","_hoisted_18","createTime"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\QACenter\\components\\CompletedList\\LQuestionedMe.vue"],"sourcesContent":["<!-- 用户自己是回答者 -->\r\n<template>\r\n    <div class=\"bgc_box\">\r\n        <!-- 向**的提问+价值 -->\r\n        <div class=\"top\">\r\n            <div class=\"one_btn\" >\r\n                <span>回答</span>\r\n                <div style=\"display: flex;align-items: center;\">\r\n                    <span class=\"text1\">{{ answererInfo.username }}</span>\r\n                    <img v-if=\"answererInfo.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin: 0 10px 0 -9px;\" alt=\"\">\r\n                </div>\r\n                <span>的问题</span>\r\n            </div>\r\n            <!-- <div class=\"two_btn\">\r\n                <span>价值</span>\r\n                <span class=\"text1\">10</span>\r\n                <span>鱼饵</span>\r\n            </div> -->\r\n        </div>\r\n        <!-- 对话列表  -->\r\n        <div class=\"main_box\">\r\n            <div class=\"content-box\" v-for=\"(message, index) in sendMessagesList\" :key=\"index\">\r\n                <div class=\"item\">\r\n                    <div class=\"user\" v-if=\"message.user === 1\">\r\n                        <img :src=\"answererInfo.newAvater\" alt=\"\">\r\n                        <span>{{answererInfo.username}}的提问</span>\r\n                    </div>\r\n                    <div class=\"user\" v-if=\"message.user === 0\">\r\n                        <img :src=\"userAvater\" alt=\"\">\r\n                        <span>{{userName}}的回答</span>\r\n                    </div>\r\n                    <div class=\"content\" v-if=\"message.messageType === 1\">\r\n                        {{ message.content }}\r\n                    </div>\r\n                    <div class=\"content\" v-if=\"message.messageType === 0\">\r\n                        <img :src=\"message.imageurl\" alt=\"\">\r\n                    </div>\r\n                    <div class=\"time\">\r\n                        {{ message.createTime }}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted} from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from '@/utils/request';\r\nimport { useRoute } from 'vue-router';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\n\r\nconst route = useRoute ();\r\nconst questionId = parseInt(route.params.questionId,10);//路径中的问答ID\r\nconst otherUserId = parseInt(route.params.userId,10);//路径中的用户ID\r\nconst userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\nconst userName = localStorage.getItem(\"userName\"); // 获取用户昵称 \r\nconst userAvater = ref('');//用户自己的头像\r\nconst answererInfo = ref({});\r\nconst sendMessagesList = ref([]);//存放历史对话记录\r\n\r\n//获取用户历史消息列表\r\nasync function getMessageLog() {\r\n  try{\r\n    const response = await axios.get(`/answer/message/history`,{\r\n        params: {\r\n            questionId:questionId,\r\n        }\r\n    });\r\n    if(response.data.code === 1){\r\n        const user = ref(0);\r\n        sendMessagesList.value = response.data.data.map(item => {\r\n            if(item.fromUserId == userId) {\r\n                user.value = 0;\r\n            }else if(item.fromUserId == otherUserId){\r\n                user.value = 1;\r\n            }else{\r\n                ElMessage.error('未知的参数错误');\r\n            }\r\n            return {\r\n                uuid: '', \r\n                status: 1, \r\n                messageType: item.type, \r\n                user: user.value, \r\n                toUserId: item.toUserId, \r\n                fromUserId: item.fromUserId, \r\n                time: item.createTime, \r\n                content: item.content,\r\n                imageurl:   \r\n                    (item.type == 0) ? item.cosSecretDto.url :\r\n                    null,\r\n                number:null,\r\n            };\r\n        });\r\n        // ElMessage.success('获取用户消息记录成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取用户消息记录失败\");\r\n        ElMessage.error('获取用户消息记录失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取用户消息记录失败\", error); \r\n    ElMessage.error('获取用户消息记录失败');\r\n  }\r\n}\r\n\r\n//获取对话用户具体信息\r\nasync function getAnswererInfo() {\r\n  try{\r\n    const response = await axios.get(`/answer/${otherUserId}`)\r\n    if(response.data.code === 1){\r\n        answererInfo.value = response.data.data;\r\n        answererInfo.value.verified = await fetchUserInformation(otherUserId);\r\n        answererInfo.value.newAvater = await getUsersAvatarFromCOS(answererInfo.value.userId);\r\n        userAvater.value = await getUsersAvatarFromCOS(userId);\r\n        // ElMessage.success('获取答主具体信息成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取答主具体信息失败\");\r\n        ElMessage.error('获取答主具体信息失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取答主具体信息失败\", error); \r\n    ElMessage.error('获取答主具体信息失败');\r\n  }\r\n}\r\n\r\n// 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\n\r\nonMounted(() => {\r\n    getAnswererInfo();\r\n    getMessageLog();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.bgc_box{\r\n    width: 100%;\r\n    background-color: #F8F8F8;\r\n}\r\n.top{\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 80px;\r\n    padding: 15px 0px;\r\n}\r\n.text1{\r\n    color: #3F87E1;\r\n    margin: 0px 10px;\r\n}\r\n.top span{\r\n    font-size: 20px;\r\n}\r\n.one_btn{\r\n    display: flex;\r\n}\r\n.main_box{\r\n    height: 88vh;\r\n    overflow: auto;\r\n}\r\n.item{\r\n    width: 960px;\r\n    padding: 12px 20px;\r\n    background-color: #fff;\r\n    margin: 0px auto 20px;\r\n    border-radius: 12px;;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 10px;\r\n}\r\n.user{\r\n    width: 100%;\r\n    border-bottom: 1px solid #EEE;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-bottom: 12px;\r\n}\r\n.user img{\r\n    width: 40px;\r\n    height: 40px;\r\n    margin-right: 15px;\r\n    border-radius: 50%;\r\n}\r\n.content{\r\n    line-height: 1.6;\r\n    padding: 1rem 2rem;\r\n}\r\n.content img {\r\n    width: 500px;\r\n    border-radius: 10px;\r\n}\r\n.time{\r\n    font-size: 14px;\r\n    line-height: 1.6;\r\n    color: #7E7E7E;\r\n}\r\n@media (max-width: 768px) {\r\n    .main_box{\r\n        height: 90vh;\r\n    }\r\n    .top{\r\n        justify-content: space-around;\r\n        gap: 0px;\r\n    }\r\n    .item{\r\n        width: 90%;\r\n        padding: 12px 5%;\r\n    }\r\n    .user img{\r\n        width: 2rem;\r\n        height: 2rem;\r\n        margin-right: 1rem;\r\n    }\r\n    .top span{\r\n        font-size: 1.2rem;\r\n    }\r\n    .content{\r\n        font-size: 0.9rem;\r\n        padding: 1rem 0;\r\n    }\r\n    .content img{\r\n        width: 18rem;\r\n    }\r\n}\r\n</style>"],"mappings":";OAS4DA,UAA+B;;;EAPlFC,KAAK,EAAC;AAAS;;EAEXA,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAS;gEAChBC,mBAAA,CAAe,cAAT,IAAE;;EACHC,KAA0C,EAA1C;IAAA;IAAA;EAAA;AAA0C;;EACrCF,KAAK,EAAC;AAAO;;;EACqBG,GAA+B,EAA/BJ,UAA+B;EAACG,KAAuD,EAAvD;IAAA;IAAA;IAAA;EAAA,CAAuD;EAACE,GAAG,EAAC;;gEAExIH,mBAAA,CAAgB,cAAV,KAAG;;EASZD,KAAK,EAAC;AAAU;;EAERA,KAAK,EAAC;AAAM;;;EACRA,KAAK,EAAC;;;;;EAINA,KAAK,EAAC;;;;;EAINA,KAAK,EAAC;;;;EAGNA,KAAK,EAAC;;;;EAGNA,KAAK,EAAC;AAAM;;uBAnCjCK,mBAAA,CAyCM,OAzCNC,UAyCM,GAxCFC,mBAAA,eAAkB,EAClBN,mBAAA,CAcM,OAdNO,UAcM,GAbFP,mBAAA,CAOM,OAPNQ,UAOM,GANFC,UAAe,EACfT,mBAAA,CAGM,OAHNU,UAGM,GAFFV,mBAAA,CAAsD,QAAtDW,UAAsD,EAAAC,gBAAA,CAA/BC,MAAA,CAAAC,YAAY,CAACC,QAAQ,kBACjCF,MAAA,CAAAC,YAAY,CAACE,QAAQ,U,cAAhCZ,mBAAA,CAAuI,OAAvIa,UAAuI,K,qCAE3IC,UAAgB,C,GAEpBZ,mBAAA,4KAIU,C,GAEdA,mBAAA,WAAc,EACdN,mBAAA,CAsBM,OAtBNmB,UAsBM,I,kBArBFf,mBAAA,CAoBMgB,SAAA,QAAAC,WAAA,CApB8CR,MAAA,CAAAS,gBAAgB,GAAnCC,OAAO,EAAEC,KAAK;yBAA/CpB,mBAAA,CAoBM;MApBDL,KAAK,EAAC,aAAa;MAA+C0B,GAAG,EAAED;QACxExB,mBAAA,CAkBM,OAlBN0B,WAkBM,GAjBsBH,OAAO,CAACI,IAAI,U,cAApCvB,mBAAA,CAGM,OAHNwB,WAGM,GAFF5B,mBAAA,CAA0C;MAApCE,GAAG,EAAEW,MAAA,CAAAC,YAAY,CAACe,SAAS;MAAE1B,GAAG,EAAC;0CACvCH,mBAAA,CAAyC,cAAAY,gBAAA,CAAjCC,MAAA,CAAAC,YAAY,CAACC,QAAQ,IAAE,KAAG,gB,wCAEdQ,OAAO,CAACI,IAAI,U,cAApCvB,mBAAA,CAGM,OAHN0B,WAGM,GAFF9B,mBAAA,CAA8B;MAAxBE,GAAG,EAAEW,MAAA,CAAAkB,UAAU;MAAE5B,GAAG,EAAC;0CAC3BH,mBAAA,CAA4B,cAAAY,gBAAA,CAApBC,MAAA,CAAAmB,QAAQ,IAAE,KAAG,gB,wCAEET,OAAO,CAACU,WAAW,U,cAA9C7B,mBAAA,CAEM,OAFN8B,WAEM,EAAAtB,gBAAA,CADCW,OAAO,CAACY,OAAO,oB,mCAEKZ,OAAO,CAACU,WAAW,U,cAA9C7B,mBAAA,CAEM,OAFNgC,WAEM,GADFpC,mBAAA,CAAoC;MAA9BE,GAAG,EAAEqB,OAAO,CAACc,QAAQ;MAAElC,GAAG,EAAC;iFAErCH,mBAAA,CAEM,OAFNsC,WAEM,EAAA1B,gBAAA,CADCW,OAAO,CAACgB,UAAU,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}