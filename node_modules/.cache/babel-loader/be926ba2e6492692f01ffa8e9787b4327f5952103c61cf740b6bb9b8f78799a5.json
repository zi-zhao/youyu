{"ast":null,"code":"import { createVNode as _createVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createCommentVNode as _createCommentVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bfd4ea4c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"page\"\n};\nconst _hoisted_3 = {\n  class: \"ask\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"title\"\n}, \"猜你想问\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"menu\"\n};\nconst _hoisted_6 = {\n  class: \"question\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"title\"\n}, \"问题反馈\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\",\n    \"margin-bottom\": \"1rem\"\n  }\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"留言反馈：\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  class: \"input-box\"\n};\nconst _hoisted_11 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\",\n    \"gap\": \"1rem\",\n    \"margin-top\": \"2rem\"\n  }\n};\nconst _hoisted_12 = {\n  style: {\n    \"color\": \"#606FA0\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tab_pane = _resolveComponent(\"el-tab-pane\");\n  const _component_el_tabs = _resolveComponent(\"el-tabs\");\n  const _component_Search = _resolveComponent(\"Search\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"TheHeader\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_tabs, {\n    modelValue: $setup.activeTab,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.activeTab = $event),\n    onClick: $setup.handleTabChange\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_tab_pane, {\n      label: \"热门问题\",\n      name: \"hot\"\n    }), _createCommentVNode(\" <el-tab-pane label=\\\"订单问题\\\" name=\\\"orders\\\"></el-tab-pane>\\r\\n            <el-tab-pane label=\\\"服务保障\\\" name=\\\"service\\\"></el-tab-pane> \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", {\n    onClick: $setup.change,\n    class: \"more\"\n  }, \"更多问题 >\")]), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.quesHot, (ques, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"ask-content\",\n      key: index,\n      style: {\n        \"padding\": \"5px\",\n        \"margin\": \"5px 0\"\n      }\n    }, [_createElementVNode(\"div\", {\n      style: {\n        \"display\": \"flex\",\n        \"gap\": \"10px\",\n        \"align-items\": \"center\",\n        \"color\": \"#676767\"\n      },\n      onClick: $setup.change\n    }, [_createVNode(_component_el_icon, null, {\n      default: _withCtx(() => [_createVNode(_component_Search)]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"span\", null, _toDisplayString(ques.problem), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" <div class=\\\"online\\\">\\r\\n        <span class=\\\"title\\\">在线客服</span>\\r\\n        <div class=\\\"online-text\\\">\\r\\n          <el-icon><ChatLineRound /></el-icon>\\r\\n          <span>当前排队人数较多，请您优先选择自主问答</span>\\r\\n        </div>\\r\\n        <div @click=\\\"showPerHelp\\\" class=\\\"per-text\\\">使用人工客服 ></div>\\r\\n      </div> \"), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_el_input, {\n    modelValue: $setup.textarea,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.textarea = $event),\n    maxlength: \"200\",\n    placeholder: \"点击输入您的反馈\",\n    \"show-word-limit\": \"\",\n    type: \"textarea\",\n    size: \"large\",\n    resize: \"none\",\n    autosize: {\n      minRows: 2,\n      maxRows: 30\n    },\n    class: \"eidt-input\",\n    style: {\n      \"margin\": \"20px 0 0px\"\n    }\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", {\n    class: \"submit-btn\",\n    onClick: $setup.postFeedback\n  }, \"提交\")])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", null, [_createTextVNode(\"联系邮箱：\"), _createElementVNode(\"span\", _hoisted_12, _toDisplayString($setup.feedbackInformation.mail), 1 /* TEXT */)]), _createElementVNode(\"p\", null, \"客服热线：\" + _toDisplayString($setup.feedbackInformation.phone), 1 /* TEXT */), _createElementVNode(\"p\", null, \"热线受理事件：每日\" + _toDisplayString($setup.feedbackInformation.startTime) + \"-\" + _toDisplayString($setup.feedbackInformation.endTime), 1 /* TEXT */)])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createVNode","$setup","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_component_el_tabs","activeTab","$event","onClick","handleTabChange","_component_el_tab_pane","label","name","_createCommentVNode","change","_createElementBlock","_Fragment","_renderList","quesHot","ques","index","key","_component_el_icon","_component_Search","_toDisplayString","problem","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_component_el_input","textarea","maxlength","placeholder","type","size","resize","autosize","minRows","maxRows","postFeedback","_hoisted_11","_hoisted_12","feedbackInformation","mail","phone","startTime","endTime"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\CustomerService\\components\\CusDefault.vue"],"sourcesContent":["<template>\r\n  <TheHeader/>\r\n  <div class=\"container\">\r\n    <div class=\"page\">\r\n      <div class=\"ask\">\r\n        <span class=\"title\">猜你想问</span>\r\n        <div class=\"menu\">\r\n          <el-tabs v-model=\"activeTab\" @click=\"handleTabChange\">\r\n            <el-tab-pane label=\"热门问题\" name=\"hot\"></el-tab-pane>\r\n            <!-- <el-tab-pane label=\"订单问题\" name=\"orders\"></el-tab-pane>\r\n            <el-tab-pane label=\"服务保障\" name=\"service\"></el-tab-pane> -->\r\n          </el-tabs>\r\n          <div @click=\"change\" class=\"more\">更多问题 ></div>\r\n        </div>\r\n        <div>\r\n          <div class=\"ask-content\" v-for=\"(ques,index) in quesHot\" :key=\"index\" style=\"padding: 5px;margin: 5px 0;\">\r\n            <div style=\"display: flex; gap: 10px; align-items: center; color:#676767 \" @click=\"change\">\r\n              <el-icon><Search /></el-icon>\r\n              <span>{{ ques.problem }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"online\">\r\n        <span class=\"title\">在线客服</span>\r\n        <div class=\"online-text\">\r\n          <el-icon><ChatLineRound /></el-icon>\r\n          <span>当前排队人数较多，请您优先选择自主问答</span>\r\n        </div>\r\n        <div @click=\"showPerHelp\" class=\"per-text\">使用人工客服 ></div>\r\n      </div> -->\r\n\r\n      <div class=\"question\">\r\n        <span class=\"title\">问题反馈</span>\r\n        <div style=\"display: flex;flex-direction: column;margin-bottom: 1rem;\">\r\n          <span>留言反馈：</span>\r\n          <div class=\"input-box\">\r\n            <el-input\r\n                v-model=\"textarea\"\r\n                maxlength=\"200\"\r\n                placeholder=\"点击输入您的反馈\"\r\n                show-word-limit\r\n                type=\"textarea\"\r\n                size=\"large\"\r\n                resize=\"none\"\r\n                :autosize = \"{ minRows: 2, maxRows: 30 }\"\r\n                class=\"eidt-input\"\r\n                style=\"margin: 20px 0 0px;\"\r\n            />\r\n            <div class=\"submit-btn\" @click=\"postFeedback\">提交</div>\r\n          </div>\r\n        </div>\r\n        <div style=\"display: flex;flex-direction: column;gap: 1rem;margin-top: 2rem;\">\r\n          <span>联系邮箱：<span style=\"color:#606FA0 \">{{ feedbackInformation.mail }}</span></span>\r\n          <p>客服热线：{{ feedbackInformation.phone }}</p>\r\n          <p>热线受理事件：每日{{ feedbackInformation.startTime }}-{{ feedbackInformation.endTime }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport TheHeader from \"@/page/components/TheHeader.vue\";\r\nimport {ref, defineExpose, defineEmits,onMounted} from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from '@/utils/request';\r\n\r\nconst activeTab = ref('hot')\r\nconst emit = defineEmits((['change']))\r\nconst quesHot = ref();\r\nconst quesOrders = ref(['实名信息问题说明11', '充值问题'])\r\nconst quesServe = ref(['实名信息问题说明22', '充值问题'])\r\nconst textarea = ref('')\r\nconst feedbackInformation = ref();\r\n\r\nconst currentList = ref(quesHot.value);\r\n\r\n// activeTab.value 属性对应的是name属性，而不是label\r\nconst handleTabChange = () => {\r\n  if (activeTab.value === 'hot') {\r\n    currentList.value = quesHot.value\r\n  } else if (activeTab.value === 'orders') {\r\n    currentList.value = quesOrders.value\r\n  } else if (activeTab.value === 'service') {\r\n    currentList.value = quesServe.value\r\n  }\r\n}\r\n\r\nconst change = () => {\r\n  emit('change',true)\r\n}\r\n\r\ndefineExpose({\r\n\r\n})\r\n\r\n\r\n//获取热门问题\r\nasync function getQuestions(){\r\n  try {\r\n    const response = await axios.get('/explain/hot');\r\n    if(response.data.code === 1){\r\n      quesHot.value = response.data.data;\r\n      console.log(response.data); \r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n      console.error(\"获取热门问题失败\");\r\n      ElMessage.error(\"获取热门问题失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"请求热门问题失败\", error); \r\n    ElMessage.error(\"请求热门问题失败\");\r\n  }\r\n}\r\n\r\n//提交用户反馈接口\r\nasync function postFeedback(){\r\n  try {\r\n    const response = await axios.post('/feedback',{\r\n      content:textarea.value,\r\n      type:0,\r\n    });\r\n    if(response.data.code === 1){\r\n      ElMessage.success('反馈成功');\r\n      textarea.value = '';\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n      console.error(\"提交用户反馈失败\");\r\n      ElMessage.error(\"提交用户反馈失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"提交用户反馈失败\", error); \r\n    ElMessage.error(\"提交用户反馈失败\");\r\n  }\r\n}\r\n\r\n//获取客服信息\r\nasync function getFeedbackInformation(){\r\n  try {\r\n    const response = await axios.get('/feedback/information');\r\n    if(response.data.code === 1){\r\n      feedbackInformation.value = response.data.data;\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n      console.error(\"获取客服信息失败\");\r\n      ElMessage.error(\"获取客服信息失败\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取客服信息失败\", error); \r\n    ElMessage.error(\"获取客服信息失败\");\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  getQuestions();\r\n  getFeedbackInformation();\r\n})\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding-top: 5rem;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #FAFAFA;\r\n  padding-bottom: 6rem;\r\n}\r\n\r\n.page {\r\n  width: 70%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 40px;\r\n}\r\n\r\n.title {\r\n  display: block;\r\n  color: #8290C0;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  padding-bottom: 5px;\r\n  border-bottom: #606FA0 1px solid;\r\n  margin-bottom: 1.5rem;\r\n}\r\n.input-box{\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: space-around;\r\n  margin-bottom: 30px;\r\n}\r\n.menu {\r\n  font-size: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n.menu:hover{\r\n  cursor: pointer;\r\n}\r\n.submit-btn{\r\n  padding: 3px 10px;\r\n  border-radius: 15px;\r\n  font-size: 14px;\r\n  background-color: #b3b8d3;\r\n  cursor: pointer;\r\n}\r\n::v-deep .el-tabs--bottom .el-tabs__item.is-bottom{\r\n  color: #000;\r\n}\r\n::v-deep .el-tabs__item:hover,\r\n::v-deep .el-tabs__item.is-active{\r\n  color: #8290c0;\r\n}\r\n::v-deep .el-tabs__active-bar{\r\n  background-color: #8290c0;\r\n}\r\n.more {\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.online-text{\r\n  display: flex;\r\n  gap: 0.4rem;\r\n  align-items: center;\r\n  color: #F0A81C;\r\n  height: 30px;\r\n  background-color: #fff;\r\n  padding: 5px 15px ;\r\n  margin: 5px 0px;\r\n}\r\n\r\n.per-text{\r\n  margin-top: 20px;\r\n}\r\n\r\n.per-text,.ask-content :hover{\r\n  cursor: pointer;\r\n}\r\n\r\n::v-deep .el-tabs__nav-wrap::after {\r\n  position: static !important;\r\n}\r\n.el-textarea{\r\n  width: 85%;\r\n}\r\n::v-deep .question .el-textarea__inner{\r\n  height: 120px !important;\r\n}\r\n@media (max-width: 768px) {\r\n  .input-box{\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}