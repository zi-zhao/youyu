{"ast":null,"code":"import { onMounted, ref, computed, watch } from 'vue';\nimport axios from '@/utils/request';\nimport { convertDateFormat } from '@/utils/timeFormat';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'SystemNote',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const currentPage = ref(1);\n    const systemNotification = ref([]);\n    const checked1 = ref(true);\n    const checked2 = ref(true);\n    const checked3 = ref(true);\n    const types = computed(() => {\n      let tempTypes = [];\n      if (checked1.value) tempTypes.push(0);\n      if (checked2.value) tempTypes.push(1);\n      if (checked3.value) tempTypes.push(2);\n      return tempTypes;\n    });\n    const typeString = computed(() => {\n      return types.value.join(',');\n    });\n\n    // 这里的代码会在`type`变化时重新运行\n    watch(types, () => {\n      currentPage.value = 1; // 重置页码\n      systemNotification.value.splice(0, systemNotification.value.length);\n      getSystemNote(currentPage.value);\n    });\n\n    // 添加一个锁状态\n    let isLoading = false;\n    async function load() {\n      if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\n      isLoading = true; // 开始加载数据，设置锁状态为true\n      try {\n        if (currentPage.value === 1) {\n          currentPage.value++;\n        }\n        await getSystemNote(currentPage.value);\n        currentPage.value++; // 只有在请求成功完成后才递增页码\n      } catch (error) {\n        console.error(error);\n        ElMessage.error('滚动时的未知错误');\n      } finally {\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\n      }\n    }\n    async function getSystemNote(currentPage) {\n      try {\n        const response = await axios.get('/notice/system', {\n          params: {\n            type: typeString.value,\n            page: currentPage,\n            pageSize: 10\n          }\n        });\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\n          const updates = response.data.data.records.map(async record => {\n            const createTime = convertDateFormat(record.createTime);\n            return {\n              ...record,\n              createTime\n            };\n          });\n          const updatedRecords = await Promise.all(updates);\n          systemNotification.value = [...systemNotification.value, ...updatedRecords];\n          console.log(response.data.data);\n        } else if (response.data.code === 1 && response.data.data.records.length === 0) {\n          // ElMessage.info('已加载所有数据');\n        } else if (response.data.code === 0 && response.data.msg) {\n          ElMessage.error(response.data.msg.toString());\n        } else error => {\n          console.log(error);\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    onMounted(() => {\n      getSystemNote(currentPage.value);\n    });\n    const __returned__ = {\n      currentPage,\n      systemNotification,\n      checked1,\n      checked2,\n      checked3,\n      types,\n      typeString,\n      get isLoading() {\n        return isLoading;\n      },\n      set isLoading(v) {\n        isLoading = v;\n      },\n      load,\n      getSystemNote,\n      onMounted,\n      ref,\n      computed,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get convertDateFormat() {\n        return convertDateFormat;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","computed","watch","axios","convertDateFormat","ElMessage","currentPage","systemNotification","checked1","checked2","checked3","types","tempTypes","value","push","typeString","join","splice","length","getSystemNote","isLoading","load","error","console","response","get","params","type","page","pageSize","data","code","records","updates","map","record","createTime","updatedRecords","Promise","all","log","msg","toString"],"sources":["D:/有渔/前端源码/YouyuBBS-Q - 副本/youyu-lyn-qtnew-vision-new-2024.1.14/src/page/MessageCenter/component/SystemMessage/SystemNote.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"first\">\r\n            <div class=\"one\">\r\n                <img src=\"@/assets/MessageCenter/one.svg\" alt=\"\">\r\n                <span>系统通知</span>\r\n            </div>\r\n            <div>\r\n                <el-checkbox v-model=\"checked1\" label=\"网站通知\" size=\"large\" @change=\"change\"/>\r\n                <el-checkbox v-model=\"checked2\" label=\"审核通知\" size=\"large\" @change=\"change\"/>\r\n                <el-checkbox v-model=\"checked3\" label=\"举报通知\" size=\"large\" @change=\"change\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"then\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\">\r\n            <div v-for=\"(source,index) in systemNotification\" :key=\"index\" class=\"box\">\r\n                <div style=\"    display: flex;justify-content: space-between;margin-bottom: 20px;\">\r\n                    <span class=\"title\">{{ source.title }}</span>\r\n                    <span class=\"time\">{{ source.createTime }}</span>\r\n                </div>\r\n                <div>\r\n                    <p class=\"content\">{{ source.content }}</p>\r\n                </div>\r\n            </div>\r\n            <el-empty \r\n                v-if=\"systemNotification.length === 0  || !systemNotification\" \r\n                :image-size=\"200\" \r\n                description=\"您暂时还没有收到系统消息呢！\"\r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { onMounted,ref,computed,watch } from 'vue';\r\n    import axios from '@/utils/request'\r\n    import { convertDateFormat } from '@/utils/timeFormat';\r\n    import { ElMessage } from 'element-plus';\r\n\r\n    const currentPage = ref(1);\r\n    const systemNotification = ref([]);\r\n    const checked1 = ref(true)\r\n    const checked2 = ref(true)\r\n    const checked3 = ref(true)\r\n    const types = computed(() => {\r\n        let tempTypes = [];\r\n        if (checked1.value) tempTypes.push(0);\r\n        if (checked2.value) tempTypes.push(1);\r\n        if (checked3.value) tempTypes.push(2);\r\n        return tempTypes;\r\n    });\r\n    const typeString = computed(() => {\r\n        return types.value.join(',');\r\n    });\r\n\r\n    // 这里的代码会在`type`变化时重新运行\r\n    watch(types, () => {\r\n        currentPage.value = 1; // 重置页码\r\n        systemNotification.value.splice(0, systemNotification.value.length);\r\n        getSystemNote(currentPage.value)\r\n    })\r\n\r\n    // 添加一个锁状态\r\n    let isLoading = false;\r\n    async function load() {\r\n        if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n        isLoading = true; // 开始加载数据，设置锁状态为true\r\n        try {\r\n            if(currentPage.value === 1){\r\n                currentPage.value++;\r\n            }\r\n            await getSystemNote(currentPage.value);\r\n            currentPage.value++; // 只有在请求成功完成后才递增页码\r\n        } catch (error) {\r\n            console.error(error);\r\n            ElMessage.error('滚动时的未知错误');\r\n        } finally {\r\n            isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n        }\r\n    }\r\n\r\n    async function getSystemNote(currentPage) {\r\n        try {\r\n            const response = await axios.get('/notice/system', {\r\n                params: {\r\n                    type: typeString.value,\r\n                    page:currentPage,\r\n                    pageSize:10,\r\n                }\r\n            });\r\n            if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n                const updates = response.data.data.records.map(async (record) => {\r\n                    const createTime = convertDateFormat(record.createTime);\r\n                    return { ...record, createTime };\r\n                });\r\n                const updatedRecords = await Promise.all(updates);\r\n                systemNotification.value = [...systemNotification.value, ...updatedRecords];\r\n                console.log(response.data.data);\r\n            }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n                // ElMessage.info('已加载所有数据');\r\n            }else if(response.data.code === 0 && response.data.msg){\r\n                ElMessage.error(response.data.msg.toString());\r\n            }else(error)=>{\r\n                console.log(error);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    onMounted(()=>{\r\n        getSystemNote(currentPage.value);\r\n    })\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.first{\r\n    width: 77vw;\r\n    padding: 12px 12px 0px; \r\n    justify-content: center; \r\n    gap: 12px;\r\n    border-radius: 8px;\r\n    border: 2px solid #F0F0F0;\r\n    background: #FFF;\r\n    margin-top: 50px;\r\n}\r\n.one{\r\n    display: flex;\r\n    margin-bottom: 5px;\r\n    align-items: center;\r\n}\r\n.one img{\r\n    width: 20px;\r\n    height: 20px;\r\n}\r\n.one span{\r\n    color: #6B757B;\r\n    text-align: center;\r\n    font-weight: 700;\r\n    line-height: 1.6; \r\n    margin-left: 8px;\r\n}\r\n.then{\r\n    width: 77vw;\r\n    height: 72vh;\r\n    overflow-y: scroll;\r\n    padding: 12px 12px 0px;\r\n    border-radius: 8px;\r\n    border: 2px solid #F0F0F0;\r\n    margin-top: 12px;\r\n}\r\n.box{\r\n    width: 900px;\r\n    border-bottom: 1px solid #e7e7e7;\r\n    margin-bottom: 10px;\r\n    width: 95%;\r\n    min-height: 60px;\r\n    margin: 0 auto;\r\n    padding-left: 5px;\r\n    padding: 20px 5px;\r\n}\r\n.title{\r\n    color: #000;\r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 120%; \r\n}\r\n.time{\r\n    color: #A1A1A1;\r\n    font-size: 12px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 120%; \r\n    margin-left: 15px;\r\n}\r\n.content{\r\n    color: #505050;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 14px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 120%; /* 16.8px */\r\n}\r\n::v-deep .el-checkbox.el-checkbox--large{\r\n    width: 80px;\r\n}\r\n@media (max-width: 768px) {\r\n    .first,\r\n    .then{\r\n        width: 800px;\r\n    }\r\n}\r\n</style>"],"mappings":"AAiCI,SAASA,SAAS,EAACC,GAAG,EAACC,QAAQ,EAACC,KAAK,QAAQ,KAAK;AAClD,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,SAAS,QAAQ,cAAc;;;;;;;IAExC,MAAMC,WAAW,GAAGN,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMO,kBAAkB,GAAGP,GAAG,CAAC,EAAE,CAAC;IAClC,MAAMQ,QAAQ,GAAGR,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMS,QAAQ,GAAGT,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMU,QAAQ,GAAGV,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMW,KAAK,GAAGV,QAAQ,CAAC,MAAM;MACzB,IAAIW,SAAS,GAAG,EAAE;MAClB,IAAIJ,QAAQ,CAACK,KAAK,EAAED,SAAS,CAACE,IAAI,CAAC,CAAC,CAAC;MACrC,IAAIL,QAAQ,CAACI,KAAK,EAAED,SAAS,CAACE,IAAI,CAAC,CAAC,CAAC;MACrC,IAAIJ,QAAQ,CAACG,KAAK,EAAED,SAAS,CAACE,IAAI,CAAC,CAAC,CAAC;MACrC,OAAOF,SAAS;IACpB,CAAC,CAAC;IACF,MAAMG,UAAU,GAAGd,QAAQ,CAAC,MAAM;MAC9B,OAAOU,KAAK,CAACE,KAAK,CAACG,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC,CAAC;;IAEF;IACAd,KAAK,CAACS,KAAK,EAAE,MAAM;MACfL,WAAW,CAACO,KAAK,GAAG,CAAC,CAAC,CAAC;MACvBN,kBAAkB,CAACM,KAAK,CAACI,MAAM,CAAC,CAAC,EAAEV,kBAAkB,CAACM,KAAK,CAACK,MAAM,CAAC;MACnEC,aAAa,CAACb,WAAW,CAACO,KAAK,CAAC;IACpC,CAAC,CAAC;;IAEF;IACA,IAAIO,SAAS,GAAG,KAAK;IACrB,eAAeC,IAAIA,CAAA,EAAG;MAClB,IAAID,SAAS,EAAE,OAAO,CAAC;MACvBA,SAAS,GAAG,IAAI,CAAC,CAAC;MAClB,IAAI;QACA,IAAGd,WAAW,CAACO,KAAK,KAAK,CAAC,EAAC;UACvBP,WAAW,CAACO,KAAK,EAAE;QACvB;QACA,MAAMM,aAAa,CAACb,WAAW,CAACO,KAAK,CAAC;QACtCP,WAAW,CAACO,KAAK,EAAE,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOS,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBjB,SAAS,CAACiB,KAAK,CAAC,UAAU,CAAC;MAC/B,CAAC,SAAS;QACNF,SAAS,GAAG,KAAK,CAAC,CAAC;MACvB;IACJ;IAEA,eAAeD,aAAaA,CAACb,WAAW,EAAE;MACtC,IAAI;QACA,MAAMkB,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,gBAAgB,EAAE;UAC/CC,MAAM,EAAE;YACJC,IAAI,EAAEZ,UAAU,CAACF,KAAK;YACtBe,IAAI,EAACtB,WAAW;YAChBuB,QAAQ,EAAC;UACb;QACJ,CAAC,CAAC;QACF,IAAIL,QAAQ,CAACM,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIP,QAAQ,CAACM,IAAI,CAACA,IAAI,CAACE,OAAO,CAACd,MAAM,GAAG,CAAC,EAAE;UACnE,MAAMe,OAAO,GAAGT,QAAQ,CAACM,IAAI,CAACA,IAAI,CAACE,OAAO,CAACE,GAAG,CAAC,MAAOC,MAAM,IAAK;YAC7D,MAAMC,UAAU,GAAGhC,iBAAiB,CAAC+B,MAAM,CAACC,UAAU,CAAC;YACvD,OAAO;cAAE,GAAGD,MAAM;cAAEC;YAAW,CAAC;UACpC,CAAC,CAAC;UACF,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;UACjD1B,kBAAkB,CAACM,KAAK,GAAG,CAAC,GAAGN,kBAAkB,CAACM,KAAK,EAAE,GAAGwB,cAAc,CAAC;UAC3Ed,OAAO,CAACiB,GAAG,CAAChB,QAAQ,CAACM,IAAI,CAACA,IAAI,CAAC;QACnC,CAAC,MAAK,IAAIN,QAAQ,CAACM,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIP,QAAQ,CAACM,IAAI,CAACA,IAAI,CAACE,OAAO,CAACd,MAAM,KAAK,CAAC,EAAE;UAC3E;QAAA,CACH,MAAK,IAAGM,QAAQ,CAACM,IAAI,CAACC,IAAI,KAAK,CAAC,IAAIP,QAAQ,CAACM,IAAI,CAACW,GAAG,EAAC;UACnDpC,SAAS,CAACiB,KAAK,CAACE,QAAQ,CAACM,IAAI,CAACW,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC;QACjD,CAAC,MAAKpB,KAAK,IAAG;UACVC,OAAO,CAACiB,GAAG,CAAClB,KAAK,CAAC;QACtB,CAAC;MACL,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZC,OAAO,CAACiB,GAAG,CAAClB,KAAK,CAAC;MACtB;IACJ;IAEAvB,SAAS,CAAC,MAAI;MACVoB,aAAa,CAACb,WAAW,CAACO,KAAK,CAAC;IACpC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}