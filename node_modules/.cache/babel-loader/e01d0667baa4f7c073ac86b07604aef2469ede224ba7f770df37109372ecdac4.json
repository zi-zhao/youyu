{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-53ede046\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"hh\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"left\"\n};\nconst _hoisted_4 = {\n  class: \"title\"\n};\nconst _hoisted_5 = {\n  class: \"content\"\n};\nconst _hoisted_6 = {\n  class: \"right\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_dialog, {\n    modelValue: $setup.localDialogVisible,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.localDialogVisible = $event),\n    title: $props.ClassifyName + '信息',\n    style: {\n      \"margin-top\": \"9vh\"\n    }\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_8, [_createVNode(_component_el_button, {\n      onClick: _cache[0] || (_cache[0] = $event => $setup.localDialogVisible = false)\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[1] || (_cache[1] = $event => $setup.someMethodInChildComponent())\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 确定 \")]),\n      _: 1 /* STABLE */\n    })])]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.dataData, item => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"show\",\n        key: item.id,\n        onClick: $event => $setup.setActive(item.id, item.name),\n        tabindex: \"0\"\n      }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_5, _toDisplayString(item.profile), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n        src: item.coverPicture,\n        alt: \"\",\n        class: \"carepic\"\n      }, null, 8 /* PROPS */, _hoisted_7)])], 8 /* PROPS */, _hoisted_2);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"title\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createVNode","_component_el_dialog","$setup","localDialogVisible","$event","title","$props","ClassifyName","style","footer","_withCtx","_createElementVNode","_hoisted_8","_component_el_button","onClick","_cache","type","someMethodInChildComponent","_hoisted_1","_Fragment","_renderList","dataData","item","key","id","setActive","name","tabindex","_hoisted_3","_hoisted_4","_toDisplayString","_hoisted_5","profile","_hoisted_6","src","coverPicture","alt"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\components\\CfDialog.vue"],"sourcesContent":["<!-- 用户已经创建的专栏或收藏列表，有以下几种触发方式：\r\n1、浏览其他人的作品，想要收藏至自己的收藏夹\r\n2、创作文章或分享时，需要选择将这篇作品放置在哪个专栏下 -->\r\n<template>\r\n    <div>\r\n        <el-dialog  v-model=\"localDialogVisible\" :title=\"ClassifyName + '信息'\" style=\"margin-top: 9vh\">\r\n            <!-- <div class=\"cbutton\">\r\n                <span class=\"tatitle\">TA的文章专栏</span>\r\n            </div> -->\r\n            <div class=\"hh\">\r\n                <div class=\"show\" v-for=\"item in dataData\" :key=\"item.id\" @click=\"setActive(item.id,item.name)\" tabindex=\"0\">\r\n                    <div class=\"left\">\r\n                        <span class=\"title\">{{ item.name }}</span>\r\n                        <span class=\"content\">{{ item.profile }}</span>\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <img :src=\"item.coverPicture\" alt=\"\" class=\"carepic\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <template #footer>\r\n            <span class=\"dialog-footer\">\r\n                <el-button @click=\"localDialogVisible = false\">取消</el-button>\r\n                <el-button type=\"primary\" @click=\"someMethodInChildComponent()\">\r\n                确定\r\n                </el-button>\r\n            </span>\r\n            </template>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n    \r\n<script setup>\r\n    import { ref, onMounted,defineProps,defineEmits,watchEffect} from 'vue';\r\n    import axios from '../../utils/request';\r\n    import { ElMessage } from 'element-plus';\r\n    import { getColumnPictureFromCOS,getFavoritePictureFromCOS } from '@/utils/cosService';\r\n\r\n    const userId = localStorage.getItem(\"userId\"); // 获取用户ID\r\n    const props = defineProps({\r\n        ClassifyName: String,\r\n        modelValue: Boolean,\r\n    });\r\n    const emits = defineEmits(['updateValue', 'update:modelValue']);\r\n    const localDialogVisible = ref(props.modelValue);\r\n    watchEffect(() => {\r\n    if (localDialogVisible.value !== props.modelValue) {\r\n        emits('update:modelValue', localDialogVisible.value);\r\n    }\r\n    });\r\n\r\n    const dataData =ref([]);\r\n    const columnId = ref();\r\n    const columnName = ref();\r\n\r\n\r\n    const setActive = (itemId,itemName) => {\r\n        columnId.value = itemId;\r\n        columnName.value = itemName;\r\n    }\r\n\r\n    //将专栏ID传回父组件的函数\r\n    const someMethodInChildComponent = () => {\r\n        const data = [columnId.value, columnName.value];\r\n        emits('updateValue', data);\r\n        localDialogVisible.value = false;\r\n    }\r\n\r\n    //根据父组件传回的classifyname判断应该调用的接口类型（这个方法只是增加一个判断值）\r\n    const submitData = () => {\r\n        if(props.ClassifyName === \"文章专栏\"){\r\n            fetchArticleColumnData();\r\n        }else if(props.ClassifyName === \"分享专栏\"){\r\n            fetchShareColumnData();\r\n        }else if(props.ClassifyName === \"文章收藏\"){\r\n            fetchArticleFavoriteData();\r\n        }else if(props.ClassifyName === \"分享收藏\"){\r\n            fetchShareFavoriteData();\r\n        }\r\n    }\r\n\r\n    //获取文章专栏\r\n    async function fetchArticleColumnData() {\r\n        try {\r\n            const response = await axios.get('/column', {\r\n                    params: {\r\n                        type:0,\r\n                        page:1,\r\n                        pazeSize:100,\r\n                        userId:Number(userId),\r\n                    }\r\n                });\r\n            if(response.data.code === 1){\r\n                dataData.value = response.data.data.records;\r\n                const updatesAsync = dataData.value.map(async (record) => {\r\n                    const coverPicture = await getColumnPictureFromCOS(record.id);\r\n                    return {\r\n                        ...record,\r\n                        coverPicture\r\n                    };\r\n                });\r\n                dataData.value = await Promise.all(updatesAsync);\r\n            } else if(response.data.code === 0 && response.data.msg){\r\n                ElMessage.error(response.data.msg.toString());\r\n            }else {\r\n                    console.error(\"获取文章专栏列表数据失败\");\r\n                    ElMessage.error(\"获取文章专栏列表数据失败\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"请求文章专栏接口失败\", error);\r\n                ElMessage.error(\"请求文章专栏接口失败\");\r\n            }\r\n    }\r\n\r\n\r\n    //获取分享专栏\r\n    async function fetchShareColumnData() {\r\n        try {\r\n            const response = await axios.get('/column', {\r\n                    params: {\r\n                        type:1,\r\n                        page:1,\r\n                        pazeSize:1000,\r\n                        userId:Number(userId),\r\n                    }\r\n                });\r\n            if(response.data.code === 1){\r\n                dataData.value = response.data.data.records;\r\n                const updatesAsync = dataData.value.map(async (record) => {\r\n                    const coverPicture = await getColumnPictureFromCOS(record.id);\r\n                    return {\r\n                        ...record,\r\n                        coverPicture\r\n                    };\r\n                });\r\n                dataData.value = await Promise.all(updatesAsync);\r\n            } else if(response.data.code === 0 && response.data.msg){\r\n                ElMessage.error(response.data.msg.toString());\r\n            }else {\r\n                    console.error(\"获取分享专栏列表数据失败\");\r\n                    ElMessage.error(\"获取分享专栏列表数据失败\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"请求分享专栏接口失败\", error);\r\n                ElMessage.error(\"请求分享专栏接口失败\");\r\n            }\r\n    }\r\n\r\n\r\n    //获取文章收藏\r\n    async function fetchArticleFavoriteData() {\r\n        try {\r\n            const response = await axios.get('/favorite', {\r\n                    params: {\r\n                        type:0,\r\n                        page:1,\r\n                        pazeSize:100,\r\n                        userId:Number(userId),\r\n                    }\r\n                });\r\n            if(response.data.code === 1){\r\n                dataData.value = response.data.data.records;\r\n                const updatesAsync = dataData.value.map(async (record) => {\r\n                    const coverPicture = await getFavoritePictureFromCOS(record.id);\r\n                    return {\r\n                        ...record,\r\n                        coverPicture\r\n                    };\r\n                });\r\n                dataData.value = await Promise.all(updatesAsync);\r\n            } else if(response.data.code === 0 && response.data.msg){\r\n                ElMessage.error(response.data.msg.toString());\r\n            }else {\r\n                    console.error(\"获取文章收藏列表数据失败\");\r\n                    ElMessage.error(\"获取文章收藏列表数据失败\");\r\n                }\r\n        } catch (error) {\r\n            console.error(\"请求文章收藏接口失败\", error);\r\n            ElMessage.error(\"请求文章收藏接口失败\");\r\n        }\r\n    }\r\n\r\n\r\n    //获取分享收藏\r\n    async function fetchShareFavoriteData() {\r\n        try {\r\n            const response = await axios.get('/favorite', {\r\n                    params: {\r\n                        type:1,\r\n                        page:1,\r\n                        pazeSize:100,\r\n                        userId:Number(userId),\r\n                    }\r\n                });\r\n            if(response.data.code === 1){\r\n                dataData.value = response.data.data.records;\r\n                const updatesAsync = dataData.value.map(async (record) => {\r\n                    const coverPicture = await getFavoritePictureFromCOS(record.id);\r\n                    return {\r\n                        ...record,\r\n                        coverPicture\r\n                    };\r\n                });\r\n                const updatedRecords = await Promise.all(updatesAsync);\r\n                dataData.value = updatedRecords;\r\n            } else if(response.data.code === 0 && response.data.msg){\r\n                ElMessage.error(response.data.msg.toString());\r\n            }else {\r\n                    console.error(\"获取分享收藏列表数据失败\");\r\n                    ElMessage.error(\"获取分享收藏列表数据失败\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"请求分享收藏接口失败\", error);\r\n                ElMessage.error(\"请求分享收藏接口失败\");\r\n            }\r\n        }\r\n\r\n    onMounted(() => {\r\n        submitData();\r\n    });\r\n\r\n</script>\r\n    \r\n<style scoped>\r\n::v-deep  .el-dialog{\r\n    width: 75%;\r\n    height: 80%;\r\n}\r\n::v-deep .el-dialog__body{\r\n    padding: 10px 30px;\r\n    height: 73%;\r\n}\r\n::v-deep  .el-dialog__header{\r\n    text-align: center;\r\n}\r\n::v-deep  .el-dialog__title {\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n}\r\n.hh{\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow-y: auto; \r\n    overflow-x: hidden; \r\n    }\r\n.cbutton{\r\n    position: relative;\r\n    gap: 22px;\r\n    border-bottom: 1px solid rgb(212, 212, 212);;\r\n    padding: 14px 12px;\r\n    width: 866px;\r\n}\r\n.tatitle{\r\n    color: #000; \r\n    text-align: center;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 23px;\r\n    line-height: 120%; \r\n}\r\n.show{\r\n    position: relative;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    width: 90%;\r\n    height: 120px;\r\n    padding: 10px 50px;\r\n    margin: 0px auto;\r\n    border-radius: 4px;\r\n    background-color: #fffffc;\r\n    border-bottom: 1px solid rgb(240 240 240);\r\n    cursor: pointer;\r\n}\r\n.show:focus,\r\n.show:hover{\r\n    background-color:#dde9f5;\r\n}\r\n.left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    margin-top: 5px;\r\n}\r\n.title{\r\n    color: #000;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 18px;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 120%; \r\n}\r\n.content{\r\n    width: 500px;\r\n    color: #646464;\r\n    font-family: Microsoft YaHei;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 120%; \r\n}\r\n.carepic{\r\n    width: 160px;\r\n    height: 100px;\r\n    flex-shrink: 0;\r\n    border-radius: 8px;\r\n}\r\n</style>"],"mappings":";;;EASiBA,KAAK,EAAC;AAAI;;;EAEFA,KAAK,EAAC;AAAM;;EACPA,KAAK,EAAC;AAAO;;EACbA,KAAK,EAAC;AAAS;;EAEpBA,KAAK,EAAC;AAAO;;;EAMpBA,KAAK,EAAC;AAAe;;;;uBAjBnCC,mBAAA,CAyBM,cAxBFC,YAAA,CAuBYC,oBAAA;gBAvBSC,MAAA,CAAAC,kBAAkB;+DAAlBD,MAAA,CAAAC,kBAAkB,GAAAC,MAAA;IAAGC,KAAK,EAAEC,MAAA,CAAAC,YAAY;IAASC,KAAuB,EAAvB;MAAA;IAAA;;IAevDC,MAAM,EAAAC,QAAA,CACjB,MAKO,CALPC,mBAAA,CAKO,QALPC,UAKO,GAJHZ,YAAA,CAA6Da,oBAAA;MAAjDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAX,MAAA,IAAEF,MAAA,CAAAC,kBAAkB;;wBAAU,MAAE,C,iBAAF,IAAE,E;;QACjDH,YAAA,CAEYa,oBAAA;MAFDG,IAAI,EAAC,SAAS;MAAEF,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAX,MAAA,IAAEF,MAAA,CAAAe,0BAA0B;;wBAAI,MAEhE,C,iBAFgE,MAEhE,E;;;sBAhBJ,MAUM,CAVNN,mBAAA,CAUM,OAVNO,UAUM,I,kBATFnB,mBAAA,CAQMoB,SAAA,QAAAC,WAAA,CAR2BlB,MAAA,CAAAmB,QAAQ,EAAhBC,IAAI;2BAA7BvB,mBAAA,CAQM;QARDD,KAAK,EAAC,MAAM;QAA2ByB,GAAG,EAAED,IAAI,CAACE,EAAE;QAAGV,OAAK,EAAAV,MAAA,IAAEF,MAAA,CAAAuB,SAAS,CAACH,IAAI,CAACE,EAAE,EAACF,IAAI,CAACI,IAAI;QAAGC,QAAQ,EAAC;UACrGhB,mBAAA,CAGM,OAHNiB,UAGM,GAFFjB,mBAAA,CAA0C,QAA1CkB,UAA0C,EAAAC,gBAAA,CAAnBR,IAAI,CAACI,IAAI,kBAChCf,mBAAA,CAA+C,QAA/CoB,UAA+C,EAAAD,gBAAA,CAAtBR,IAAI,CAACU,OAAO,iB,GAEzCrB,mBAAA,CAEM,OAFNsB,UAEM,GADFtB,mBAAA,CAAqD;QAA/CuB,GAAG,EAAEZ,IAAI,CAACa,YAAY;QAAEC,GAAG,EAAC,EAAE;QAACtC,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}