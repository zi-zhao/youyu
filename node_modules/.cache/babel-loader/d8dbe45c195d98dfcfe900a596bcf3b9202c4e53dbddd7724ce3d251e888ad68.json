{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/VerifiedUser.svg';\nimport _imports_1 from '@/assets/QACenter/ScoreStar.svg';\nimport _imports_2 from '@/assets/QACenter/Evaluation.svg';\nimport _imports_3 from '@/assets/QACenter/QASquare_B.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-27e42a68\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"select\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"display\": \"flex\",\n    \"gap\": \"20px\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"已完成\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"待评价\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"进行中\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"待解答\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"main_box\",\n  \"infinite-scroll-distance\": \"100\",\n  \"infinite-scroll-immediate\": \"false\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  class: \"up\"\n};\nconst _hoisted_10 = {\n  class: \"up_box\"\n};\nconst _hoisted_11 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"ask\"\n}, \"我向\", -1 /* HOISTED */));\nconst _hoisted_13 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  }\n};\nconst _hoisted_14 = {\n  class: \"name\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  src: _imports_0,\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\",\n    \"margin\": \"0 5px 0 -4px\"\n  },\n  alt: \"\"\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"ask\"\n}, \"提问\", -1 /* HOISTED */));\nconst _hoisted_17 = {\n  class: \"content multi-line-ellipsis-2\"\n};\nconst _hoisted_18 = {\n  class: \"time\"\n};\nconst _hoisted_19 = {\n  class: \"down\"\n};\nconst _hoisted_20 = {\n  key: 0,\n  class: \"mark\"\n};\nconst _hoisted_21 = {\n  style: {\n    \"font-size\": \"16px\",\n    \"line-height\": \"1.6\"\n  }\n};\nconst _hoisted_22 = {\n  key: 1,\n  class: \"ing_box\"\n};\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"去评价\", -1 /* HOISTED */));\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\",\n    \"margin-left\": \"5px\",\n    \"cursor\": \"pointer\"\n  },\n  src: _imports_2,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_25 = [_hoisted_23, _hoisted_24];\nconst _hoisted_26 = {\n  key: 0\n};\nconst _hoisted_27 = {\n  key: 2,\n  class: \"ing_box\"\n};\nconst _hoisted_28 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left_box\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"cursor\": \"pointer\"\n  }\n}, \"继续提问\"), /*#__PURE__*/_createElementVNode(\"img\", {\n  style: {\n    \"width\": \"16px\",\n    \"height\": \"16px\",\n    \"margin-left\": \"5px\",\n    \"cursor\": \"pointer\"\n  },\n  src: _imports_3,\n  alt: \"\"\n})], -1 /* HOISTED */));\nconst _hoisted_29 = {\n  class: \"ing_btn\"\n};\nconst _hoisted_30 = {\n  style: {\n    \"color\": \"#fff\"\n  }\n};\nconst _hoisted_31 = {\n  key: 3,\n  class: \"ing_box\"\n};\nconst _hoisted_32 = {\n  class: \"ing_btn2\"\n};\nconst _hoisted_33 = {\n  style: {\n    \"color\": \"#fff\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _directive_infinite_scroll = _resolveDirective(\"infinite-scroll\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 已完成，进行中，未回答 筛选 \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    onClick: _cache[0] || (_cache[0] = $event => $setup.typeNumber = 0),\n    class: _normalizeClass([{\n      selected: $setup.typeNumber === 0\n    }, \"select_btn\"])\n  }, [_hoisted_3, _createElementVNode(\"span\", null, _toDisplayString($setup.countData[3]), 1 /* TEXT */)], 2 /* CLASS */), _createElementVNode(\"div\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.typeNumber = 1),\n    class: _normalizeClass([{\n      selected: $setup.typeNumber === 1\n    }, \"select_btn\"])\n  }, [_hoisted_4, _createElementVNode(\"span\", null, _toDisplayString($setup.countData[2]), 1 /* TEXT */)], 2 /* CLASS */), _createElementVNode(\"div\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.typeNumber = 2),\n    class: _normalizeClass([{\n      selected: $setup.typeNumber === 2\n    }, \"select_btn\"])\n  }, [_hoisted_5, _createElementVNode(\"span\", null, _toDisplayString($setup.countData[1]), 1 /* TEXT */)], 2 /* CLASS */), _createElementVNode(\"div\", {\n    onClick: _cache[3] || (_cache[3] = $event => $setup.typeNumber = 3),\n    class: _normalizeClass([{\n      selected: $setup.typeNumber === 3\n    }, \"select_btn\"])\n  }, [_hoisted_6, _createElementVNode(\"span\", null, _toDisplayString($setup.countData[0]), 1 /* TEXT */)], 2 /* CLASS */)])]), _createCommentVNode(\" 推送框  \"), _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.dataList, (source, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass({\n        'item cur': $setup.typeNumber !== 1,\n        'item': $setup.typeNumber === 1\n      }),\n      onClick: $event => $setup.goToConversationList($setup.typeNumber, source.answererId, source.id, source.number)\n    }, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"span\", _hoisted_14, _toDisplayString(source.answererUsername), 1 /* TEXT */), source.verified === 1 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_15)) : _createCommentVNode(\"v-if\", true)]), _hoisted_16]), _createElementVNode(\"span\", _hoisted_17, _toDisplayString(source.questionContent), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_18, _toDisplayString(source.createTime), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_19, [$setup.typeNumber === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.getStarCount1(source.grade), n => {\n      return _openBlock(), _createElementBlock(\"img\", {\n        key: n,\n        src: _imports_1,\n        alt: \"\"\n      });\n    }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"span\", _hoisted_21, _toDisplayString(source.content), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $setup.typeNumber === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [_createElementVNode(\"div\", {\n      class: \"left_box\",\n      onClick: $setup.changeType\n    }, [..._hoisted_25]), $setup.dialogFormVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_createVNode($setup[\"EvaluateDialog\"], {\n      modelValue: $setup.dialogFormVisible,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.dialogFormVisible = $event),\n      QuestionId: source.id\n    }, null, 8 /* PROPS */, [\"modelValue\", \"QuestionId\"])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), $setup.typeNumber === 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [_hoisted_28, _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"span\", _hoisted_30, \"剩余\" + _toDisplayString(source.remainTime), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true), $setup.typeNumber === 3 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"span\", _hoisted_33, _toDisplayString(source.remainTime) + \"后自动被拒绝\", 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)])], 10 /* CLASS, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */)), !$setup.dataList || $setup.dataList.length === 0 ? (_openBlock(), _createBlock(_component_el_empty, {\n    key: 0,\n    \"image-size\": 200,\n    description: \"您还没有发起过提问呢！\"\n  })) : _createCommentVNode(\"v-if\", true)])), [[_directive_infinite_scroll, $setup.load]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","class","style","_createElementVNode","src","alt","_hoisted_23","_hoisted_24","_createCommentVNode","_hoisted_1","_hoisted_2","onClick","_cache","$event","$setup","typeNumber","_normalizeClass","selected","_hoisted_3","_toDisplayString","countData","_hoisted_4","_hoisted_5","_hoisted_6","_createElementBlock","_hoisted_7","_Fragment","_renderList","dataList","source","index","key","goToConversationList","answererId","id","number","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","answererUsername","verified","_hoisted_15","_hoisted_16","_hoisted_17","questionContent","_hoisted_18","createTime","_hoisted_19","_hoisted_20","getStarCount1","grade","n","_hoisted_21","content","_hoisted_22","changeType","dialogFormVisible","_hoisted_26","_createVNode","QuestionId","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","remainTime","_hoisted_31","_hoisted_32","_hoisted_33","length","_createBlock","_component_el_empty","description","load"],"sources":["D:\\有渔\\前端源码\\YouyuBBS-Q - 副本\\youyu-lyn-qtnew-vision-new-2024.1.14\\src\\page\\QACenter\\SquareQuestion\\InitiatedQuestion.vue"],"sourcesContent":["<template>\r\n    <!-- 已完成，进行中，未回答 筛选 -->\r\n    <div class=\"select\">\r\n        <div style=\"display: flex; gap: 20px;\">\r\n            <div @click=\"typeNumber = 0\" :class=\"{ selected: typeNumber === 0 }\" class=\"select_btn\">\r\n                <span>已完成</span>\r\n                <span>{{  countData[3] }}</span>\r\n            </div>\r\n            <div @click=\"typeNumber = 1\" :class=\"{ selected: typeNumber === 1 }\" class=\"select_btn\">\r\n                <span>待评价</span>\r\n                <span>{{  countData[2] }}</span>\r\n            </div>\r\n            <div @click=\"typeNumber = 2\" :class=\"{ selected: typeNumber === 2 }\" class=\"select_btn\">\r\n                <span>进行中</span>\r\n                <span>{{ countData[1] }}</span>\r\n            </div>\r\n            <div @click=\"typeNumber = 3\" :class=\"{ selected: typeNumber === 3 }\" class=\"select_btn\">\r\n                <span>待解答</span>\r\n                <span>{{ countData[0] }}</span>\r\n            </div>\r\n        </div>\r\n    </div> \r\n    <!-- 推送框  -->\r\n    <div class=\"main_box\" v-infinite-scroll=\"load\" infinite-scroll-distance=\"100\" infinite-scroll-immediate=\"false\" >\r\n        <div v-for=\"(source,index) in dataList\" :key=\"index\" :class=\"{'item cur': typeNumber !== 1, 'item': typeNumber === 1}\" @click=\"goToConversationList(typeNumber,source.answererId,source.id,source.number)\">\r\n            <div class=\"up\">\r\n                <div class=\"up_box\">\r\n                    <div style=\"display: flex;\">\r\n                        <span class=\"ask\">我向</span>\r\n                        <div style=\"display: flex;align-items: center;\">\r\n                            <span class=\"name\">{{ source.answererUsername }}</span>\r\n                            <img  v-if=\"source.verified === 1\" src=\"@/assets/VerifiedUser.svg\" style=\"width: 16px;height: 16px;margin: 0 5px 0 -4px;\" alt=\"\">\r\n                        </div>\r\n                        <span class=\"ask\">提问</span>\r\n                    </div>\r\n                    <span class=\"content multi-line-ellipsis-2\">{{ source.questionContent }}</span>\r\n                    <span class=\"time\">{{ source.createTime }}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"down\">\r\n                <div v-if=\"typeNumber === 0\" class=\"mark\">\r\n                    <div>\r\n                        <img v-for= \"n in getStarCount1(source.grade)\" :key=\"n\" src=\"@/assets/QACenter/ScoreStar.svg\" alt=\"\">\r\n                    </div>\r\n                    <span  style=\"font-size: 16px;line-height: 1.6; \" >{{source.content}}</span>\r\n                </div>\r\n                <div v-if=\"typeNumber === 1\" class=\"ing_box\">\r\n                    <div class=\"left_box\" @click=\"changeType\">\r\n                        <span >去评价</span>\r\n                        <img style=\"width: 16px;height: 16px; margin-left: 5px;cursor: pointer;\" src=\"@/assets/QACenter/Evaluation.svg\" alt=\"\">\r\n                    </div>\r\n                    <div v-if=\"dialogFormVisible\">\r\n                        <EvaluateDialog v-model=\"dialogFormVisible\" :QuestionId=\"source.id\"></EvaluateDialog>\r\n                    </div>\r\n                </div>\r\n                <div v-if=\"typeNumber === 2\" class=\"ing_box\">\r\n                    <div class=\"left_box\">\r\n                        <span style=\"cursor: pointer;\">继续提问</span>\r\n                        <img style=\"width: 16px;height: 16px; margin-left: 5px;cursor: pointer;\" src=\"@/assets/QACenter/QASquare_B.svg\" alt=\"\">\r\n                    </div>\r\n                    <div class=\"ing_btn\">\r\n                        <span style=\"color: #fff;\">剩余{{ source.remainTime }}</span>\r\n                    </div>\r\n                </div>\r\n                <div v-if=\"typeNumber === 3\" class=\"ing_box\">\r\n                    <div class=\"ing_btn2\">\r\n                        <span style=\"color: #fff;\">{{ source.remainTime }}后自动被拒绝</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <el-empty \r\n            v-if=\"!dataList || dataList.length === 0\" \r\n            :image-size=\"200\" \r\n            description=\"您还没有发起过提问呢！\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref,watch,onMounted,onUnmounted} from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport EvaluateDialog from '../components/EvaluateDialog.vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from '@/utils/request';\r\nimport { getUsersAvatarFromCOS } from '@/utils/cosService';\r\nimport { convertDateFormat } from '@/utils/timeFormat'; \r\nimport { openUrl } from '@/utils/routeJudge'\r\n\r\nconst currentPage = ref(1);\r\nconst router = useRouter()\r\nconst typeNumber = ref(0);\r\nconst dialogFormVisible = ref(false);\r\nconst dataList = ref([]);\r\nconst countData = ref();\r\nlet interval = null;\r\nconst newValueOne = ref(0);\r\n\r\nconst handleTypeNumberChange = (newValue) => {\r\n    newValueOne.value = newValue;\r\n    if(newValue === 0) {\r\n        currentPage.value = 1;\r\n        getEndAnswer(currentPage.value);\r\n    }\r\n    else if(newValue === 1) {\r\n        currentPage.value = 1;\r\n        getTocommentAnswer(currentPage.value);\r\n    }\r\n    else if(newValue === 2) {\r\n        currentPage.value = 1;\r\n        getIngAnswer(currentPage.value);\r\n    }\r\n    else if(newValue === 3) {\r\n        currentPage.value = 1;\r\n        getNoanswerAnswer(currentPage.value);\r\n    }\r\n}\r\n\r\nconst changeType = () =>{\r\n    dialogFormVisible.value = true;\r\n}\r\n\r\n//监视typeNumber的值\r\nwatch(typeNumber, handleTypeNumberChange);\r\n\r\nconst updateRemainTimes = () => {\r\n    if(typeNumber.value === 3){\r\n        for (let record of dataList.value) {\r\n            record.remainTime = computeTimeRemain(record.createTime); // 假设 record.answerTime 是你需要计算剩余时间的字段\r\n        }\r\n    }else if(typeNumber.value === 2){\r\n        for (let record of dataList.value) {\r\n            record.remainTime = computeTimeRemain(record.answerTime); // 假设 record.answerTime 是你需要计算剩余时间的字段\r\n        }\r\n    }\r\n\r\n};\r\n\r\n//计算时间差的函数，传入的startDateTime和endDateTime都是时间字符串,如YYYY-MM-DD HH:MM:SS\r\nconst computeTimeDifference = (startDateTime, endDateTime) => {\r\n    const startDate = new Date(startDateTime);\r\n    const endDate = new Date(endDateTime);\r\n    // 计算时间差值，得到的是毫秒数\r\n    const differenceInMillis = endDate - startDate;\r\n    // 将毫秒转换为小时、分钟和秒\r\n    const hours = Math.floor(differenceInMillis / (1000 * 60 * 60));\r\n    const minutes = Math.floor((differenceInMillis % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((differenceInMillis % (1000 * 60)) / 1000);\r\n    // 格式化小时、分钟和秒为两位数\r\n    const formattedHours = hours.toString().padStart(2, '0');\r\n    const formattedMinutes = minutes.toString().padStart(2, '0');\r\n    const formattedSeconds = seconds.toString().padStart(2, '0');\r\n    // 返回 HH:MM:SS 格式的字符串\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\r\n}\r\n\r\n\r\n//计算剩余时间\r\nconst computeTimeRemain = (startDateTime) => {\r\n    const now = new Date();\r\n    const formatted = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')} ${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}:${String(now.getSeconds()).padStart(2, '0')}`;\r\n    const dateObj = new Date(startDateTime); \r\n    dateObj.setDate(dateObj.getDate() + 2); \r\n    const newDateTime = `${dateObj.getFullYear()}-${String(dateObj.getMonth() + 1).padStart(2, '0')}-${String(dateObj.getDate()).padStart(2, '0')} ${String(dateObj.getHours()).padStart(2, '0')}:${String(dateObj.getMinutes()).padStart(2, '0')}:${String(dateObj.getSeconds()).padStart(2, '0')}`;\r\n    const endTime = computeTimeDifference(formatted,newDateTime)\r\n    return endTime;\r\n}\r\n\r\n//判断哦评价展示的星星数量\r\nconst getStarCount1 = (grade) =>{\r\n    const result = Math.floor(grade);\r\n    return result\r\n}\r\n\r\n\r\nconst goToConversationList = ( typeNumber,id,questionId,number ) => {\r\n    if (typeNumber === 0) {\r\n        // const routeLocation = router.resolve({ name:'LMyQuestioned'});\r\n        // window.open(routeLocation.href, '_blank');\r\n        // const routeLocation = router.resolve({ path: `/CompletedList/LMyQuestioned/${questionId}/${id}` });\r\n        // window.open(routeLocation.href, '_blank');\r\n        openUrl(`/CompletedList/LMyQuestioned/${questionId}/${id}`)\r\n    }\r\n    if (typeNumber === 2) {\r\n        // const routeLocation = router.resolve({ path:`/OngoingConversation/LiveChat/ask/${id}/${questionId}/${number}`});\r\n        // window.open(routeLocation.href, '_blank');\r\n        // const routeLocation = router.resolve({ path: `/OngoingConversation/LiveChat/ask/${id}/${questionId}/${number}` });\r\n        // window.open(routeLocation.href, '_blank');\r\n        openUrl(`/OngoingConversation/LiveChat/ask/${id}/${questionId}/${number}`)\r\n    }\r\n  }\r\n\r\n// 添加一个锁状态\r\nlet isLoading = false;\r\nasync function load() {\r\n    if (isLoading) return; // 如果已经在加载中，则直接返回不执行新的加载\r\n    isLoading = true; // 开始加载数据，设置锁状态为true\r\n    if(currentPage.value === 1){\r\n        currentPage.value++;\r\n    }\r\n    try {\r\n        if(newValueOne.value === 0) {\r\n            await getEndAnswer(currentPage.value);\r\n            currentPage.value++; // 只有在请求成功完成后才递增页码\r\n        }\r\n        else if(newValueOne.value === 1) {\r\n            await getTocommentAnswer(currentPage.value);\r\n            currentPage.value++; // 只有在请求成功完成后才递增页码\r\n        }\r\n        else if(newValueOne.value === 2) {\r\n            await getIngAnswer(currentPage.value);\r\n            currentPage.value++; // 只有在请求成功完成后才递增页码\r\n        }\r\n        else if(newValueOne.value === 3) {\r\n            await getNoanswerAnswer(currentPage.value);\r\n            currentPage.value++; // 只有在请求成功完成后才递增页码\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        ElMessage.error('滚动时的未知错误');\r\n    } finally {\r\n        isLoading = false; // 请求完成，无论成功或失败，都释放锁状态\r\n    }\r\n}\r\n\r\n//获取各类提问数目（待解答、进行中、待评价和已完成）\r\nasync function countAnswer() {\r\n  try{\r\n    const response = await axios.get(`/answer/myask/count`)\r\n    if(response.data.code === 1){\r\n        countData.value = response.data.data;\r\n        // ElMessage.success('获取各类提问数目成功');\r\n    }else if(response.data.code === 0 && response.data.msg){\r\n        ElMessage.error(response.data.msg.toString());\r\n    }else{\r\n        console.error(\"获取各类提问数目失败\");\r\n        ElMessage.error('获取各类提问数目失败');\r\n    }\r\n  } catch (error) {\r\n    console.error(\"获取各类提问数目失败\", error); \r\n    ElMessage.error('获取各类提问数目失败');\r\n  }\r\n}\r\n\r\n//获取进行中的问答（用户为提问者）\r\nasync function getIngAnswer(currentPage) {\r\n    if(currentPage === 1){\r\n        dataList.value = [];\r\n    }\r\n    try{\r\n        const response = await axios.get(`/answer/myask/ing`, {\r\n            params: {\r\n                page:currentPage,\r\n                pazeSize:10\r\n            }\r\n        });\r\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n            const updates = response.data.data.records.map(async (record) => {\r\n                const avatarPromise = getUsersAvatarFromCOS(record.answererId);\r\n                const avatar = await avatarPromise;\r\n                const createTime = convertDateFormat(record.createTime);\r\n                const verified = await fetchUserInformation(record.answererId);\r\n                return {\r\n                    ...record,\r\n                    avatar,\r\n                    verified,\r\n                    createTime,\r\n                };\r\n            });\r\n            const updatedRecords = await Promise.all(updates);\r\n            dataList.value = [...dataList.value, ...updatedRecords];\r\n            // ElMessage.success('获取进行中的问答成功');\r\n        }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n            // ElMessage.info('已加载所有数据');\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            console.error(\"获取进行中的问答失败\");\r\n            ElMessage.error('获取进行中的问答失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取进行中的问答失败\", error); \r\n        ElMessage.error('获取进行中的问答失败');\r\n    }\r\n}\r\n\r\n//获取待评论的问答（用户为提问者）\r\nasync function getTocommentAnswer(currentPage) {\r\n    if(currentPage === 1){\r\n        dataList.value = [];\r\n    }\r\n    try{\r\n        const response = await axios.get(`/answer/myask/tocomment`, {\r\n            params: {\r\n                page:currentPage,\r\n                pageSize:10\r\n            }\r\n        });\r\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n            const updates = response.data.data.records.map(async (record) => {\r\n                const avatar = await getUsersAvatarFromCOS(record.answererId);\r\n                const createTime = convertDateFormat(record.createTime);\r\n                const verified = await fetchUserInformation(record.answererId);\r\n                return {\r\n                    ...record,\r\n                    avatar,\r\n                    verified,\r\n                    createTime\r\n                };\r\n            });\r\n            const updatedRecords = await Promise.all(updates);\r\n            dataList.value = [...dataList.value, ...updatedRecords];\r\n            // ElMessage.success('获取待评论的问答成功');\r\n        }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n            // ElMessage.info('已加载所有数据');\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            console.error(\"获取待评论的问答失败\");\r\n            ElMessage.error('获取待评论的问答失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取待评论的问答失败\", error); \r\n        ElMessage.error('获取待评论的问答失败');\r\n    }\r\n}\r\n\r\n\r\n//获取已结束的问答（用户为提问者）\r\nasync function getEndAnswer(currentPage) {\r\n    if(currentPage === 1){\r\n        dataList.value = [];\r\n    }\r\n    try{\r\n        const response = await axios.get(`/answer/myask/end`, {\r\n            params: {\r\n                page:currentPage,\r\n                pageSize:10,\r\n            }\r\n        });\r\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n            const updates = response.data.data.records.map(async (record) => {\r\n                const avatar = await getUsersAvatarFromCOS(record.answererId);\r\n                const createTime = convertDateFormat(record.createTime);\r\n                const verified = await fetchUserInformation(record.answererId);\r\n                return {\r\n                    ...record,\r\n                    avatar,\r\n                    verified,\r\n                    createTime\r\n                };\r\n            });\r\n            const updatedRecords = await Promise.all(updates);\r\n            dataList.value = [...dataList.value, ...updatedRecords];\r\n            // ElMessage.success('获取已结束的问答成功');\r\n        }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n            // ElMessage.info('已加载所有数据');\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            console.error(\"获取已结束的问答失败\");\r\n            ElMessage.error('获取已结束的问答失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取已结束的问答失败\", error); \r\n        ElMessage.error('获取已结束的问答失败');\r\n    }\r\n}\r\n\r\n//获取未解答的问答（用户为提问者）\r\nasync function getNoanswerAnswer(currentPage) {\r\n    if(currentPage === 1){\r\n        dataList.value = [];\r\n    }\r\n    try{\r\n        const response = await axios.get(`/answer/myask/noanswer`, {\r\n            params: {\r\n                page:currentPage,\r\n                pageSize:10,\r\n            }\r\n        });\r\n        if (response.data.code === 1 && response.data.data.records.length > 0) {\r\n            const updates = response.data.data.records.map(async (record) => {\r\n                const avatar = await getUsersAvatarFromCOS(record.answererId);\r\n                const createTime = convertDateFormat(record.createTime);\r\n                const verified = await fetchUserInformation(record.answererId);\r\n                return {\r\n                    ...record,\r\n                    avatar,\r\n                    verified,\r\n                    createTime,\r\n                };\r\n            });\r\n            const updatedRecords = await Promise.all(updates);\r\n            dataList.value = [...dataList.value, ...updatedRecords];\r\n            // ElMessage.success('获取未解答的问答成功');\r\n        }else if (response.data.code === 1 && response.data.data.records.length === 0) {\r\n            // ElMessage.info('已加载所有数据');\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            console.error(\"获取未解答的问答失败\");\r\n            ElMessage.error('获取未解答的问答失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取未解答的问答失败\", error); \r\n        ElMessage.error('获取未解答的问答失败');\r\n    }\r\n}\r\n\r\n// 获取用户信息\r\nconst fetchUserInformation = async (userId) => {\r\n    try {\r\n        const response = await axios.get(`/users/${userId}`);\r\n        if(response.data.code === 1){\r\n            return (response.data.data.verified);\r\n        }else if(response.data.code === 0 && response.data.msg){\r\n            ElMessage.error(response.data.msg.toString());\r\n        }else{\r\n            ElMessage.error('获取用户信息失败');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"获取用户信息失败\", error);\r\n        ElMessage.error('获取用户信息失败');\r\n    }\r\n};\r\n\r\n\r\n\r\n// 在组件挂载时设置定时器，每秒更新一次剩余时间\r\nonMounted(() => {\r\n  updateRemainTimes(); // 立即更新一次剩余时间\r\n  interval = setInterval(updateRemainTimes, 1000); // 设置定时器\r\n  countAnswer();\r\n  getEndAnswer(currentPage.value);\r\n});\r\n\r\n// 在组件卸载时清除定时器\r\nonUnmounted(() => {\r\n  clearInterval(interval);\r\n});\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.select{\r\n    width: 75%;\r\n    margin: 1rem auto 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n.select_btn{\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    cursor: pointer;\r\n}\r\n.select_btn span{\r\n    font-size: 12px;\r\n    line-height: 1.6;\r\n}\r\n.selected span{\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    line-height: 1.6;\r\n}\r\n.main_box{\r\n    padding: 15px 0px;\r\n    height: 58vh;\r\n    overflow: auto;\r\n}\r\n.item{\r\n    display: flex;\r\n    width: 70%;\r\n    padding: 16px 20px;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    gap: 12px;\r\n    margin: 0px auto 30px;\r\n    border-radius: 12px;\r\n    background: #FFF;\r\n}\r\n.cur{\r\n    cursor: pointer;\r\n}\r\n.up{\r\n    padding-bottom: 12px;\r\n    width: 100%;\r\n    border-bottom: 1px solid #EEE;\r\n}\r\n.up_box{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n}\r\n.name{\r\n    color: #3F87E1;\r\n    margin: 0px 5px;\r\n    line-height: 1.6;\r\n}\r\n.ask{\r\n    color: #9B9B9B;\r\n    line-height: 1.6;\r\n}\r\n.content{\r\n    width: 100%;\r\n    line-height: 1.6;\r\n}\r\n.time{\r\n    color: #7E7E7E;\r\n    font-size: 14px;\r\n    line-height: 1.6;\r\n}\r\n.down{\r\n    width: 100%;\r\n}\r\n.mark{\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n}\r\n.ing_box,\r\n.left_box{\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n}\r\n.ing_box{\r\n    justify-content: space-between;\r\n    width: 100%;\r\n}\r\n.ing_btn{\r\n    height: 19px;\r\n    padding: 8px 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #EEE;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    background: #67ABFF;\r\n}\r\n.ing_btn2{\r\n    width: 173px;\r\n    height: 19px;\r\n    padding: 8px 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #EEE;\r\n    background: #67ABFF;\r\n    cursor: pointer;\r\n}\r\n/* 对手机屏幕和小尺寸屏幕的样式调整 */\r\n@media (max-width: 768px) {\r\n    .select{\r\n        width: 90%;\r\n    }\r\n    .item{\r\n        width: 88%;\r\n        padding: 16px 1rem;\r\n        gap: 12px;\r\n        border-radius: 12px;\r\n        background: #FFF;\r\n        cursor: pointer;\r\n    }\r\n    .main_box{\r\n        height: 57vh;\r\n    }\r\n    .ing_btn,\r\n    .ing_btn2{\r\n        font-size: 0.8rem;\r\n        padding: 0.4rem 0.5rem;\r\n    }\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}